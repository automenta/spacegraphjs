export class CameraPlugin extends Plugin {
    perspectiveCamera: any;
    cameraControls: any;
    advancedControls: any;
    _subscribeToEvents(): void;
    getCameraInstance(): any;
    getControls(): any;
    moveTo(x: any, y: any, z: any, duration?: number, lookAtTarget?: any): void;
    _determineCenterViewTarget(targetPosition?: any): any;
    _determineOptimalDistance(baseDistance?: number, farDistance?: number, nodeCount?: number): number;
    centerView(targetPosition?: any, duration?: number): void;
    _determineFocusNodeDistance(node: any): number;
    focusOnNode(node: any, duration?: number, pushHistory?: boolean): void;
    pan(deltaX: any, deltaY: any): void;
    startPan(startX: any, startY: any): void;
    endPan(): void;
    zoom(deltaY: any): void;
    resetView(duration?: number): void;
    pushState(): void;
    popState(duration?: number): void;
    getCurrentTargetNodeId(): any;
    setCurrentTargetNodeId(nodeId: any): void;
    setInitialState(): void;
    saveNamedView(name: any): any;
    restoreNamedView(name: any, duration?: number): any;
    deleteNamedView(name: any): any;
    getNamedViews(): any;
    hasNamedView(name: any): any;
    setCameraMode(mode: any): void;
    getCameraMode(): any;
    getAvailableCameraModes(): {
        [CAMERA_MODES.ORBIT]: string;
        [CAMERA_MODES.FREE]: string;
        [CAMERA_MODES.TOP_DOWN]: string;
        [CAMERA_MODES.FIRST_PERSON]: string;
    };
    startFollowing(target: any, options?: {}): void;
    stopFollowing(): void;
    isFollowing(): any;
    requestPointerLock(): void;
    exitPointerLock(): void;
    toggleAutoZoom(enabled?: any): any;
    toggleAutoRotation(enabled?: any): any;
    setRotationSpeed(speed: any): void;
    togglePeekMode(enabled?: any): any;
    toggleCinematicMode(enabled?: any): any;
    smartFocusOnNode(node: any, options?: {}): void;
    createViewSequence(nodes: any, options?: {}): any;
    updateAdvancedSettings(settings: any): void;
    getAdvancedSettings(): any;
    getAdvancedControlsStatus(): {
        autoZoom: any;
        autoRotation: any;
        peekMode: any;
        cinematicMode: any;
    };
}
import { Plugin } from '../core/Plugin.js';
import { CAMERA_MODES } from '../camera/Camera.js';
