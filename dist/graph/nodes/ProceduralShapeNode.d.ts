export class ProceduralShapeNode extends ShapeNode {
    generatorFunction: any;
    animationFrame: any;
    geometryCache: Map<any, any>;
    getDefaultData(): {
        type: string;
        shapeType: string;
        complexity: number;
        animated: boolean;
        animationSpeed: number;
        parameters: {};
        wireframe: boolean;
        materialType: string;
        label: string;
        shape: string;
        size: number;
        color: number;
        lodLevels: any[];
        labelLod: any[];
    };
    _generateProcedural(): void;
    _getCacheKey(): string;
    _useCachedGeometry(cacheKey: any): void;
    _applyGeometry(geometry: any): void;
    _createMaterial(): any;
    _generateFractal(): any;
    _generateCrystal(): any;
    _generateOrganic(): any;
    _generateSpiral(): any;
    _generateFlower(): any;
    _generateTree(): any;
    _generateTerrain(): any;
    _generateVoronoi(): any;
    _generateLSystem(): any;
    _mergeGroupGeometries(group: any): any;
    _noise2D(x: any, y: any): number;
    _noise3D(x: any, y: any, z: any): number;
    _startAnimation(): void;
    _stopAnimation(): void;
    _updateAnimation(): void;
    setShapeType(type: any): void;
    setComplexity(complexity: any): void;
    setParameters(parameters: any): void;
    setAnimated(animated: any): void;
    setWireframe(wireframe: any): void;
}
import { ShapeNode } from './ShapeNode.js';
