var Kg=Object.defineProperty;var Jg=(r,e,t)=>e in r?Kg(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var E=(r,e,t)=>Jg(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();const ue=(r,e)=>(e||document).querySelector(r),_u=(r,e)=>(e||document).querySelectorAll(r),bt={clamp:(r,e,t)=>Math.max(e,Math.min(r,t)),lerp:(r,e,t)=>r+(e-r)*t,generateId:(r="id")=>`${r}-${Date.now().toString(36)}-${Math.random().toString(36).slice(2,9)}`,DEG2RAD:Math.PI/180,isObject:r=>r&&typeof r=="object"&&!Array.isArray(r),mergeDeep:(r,...e)=>(e.forEach(t=>{for(const i in t){const n=r[i],s=t[i];bt.isObject(n)&&bt.isObject(s)?bt.mergeDeep(n,s):r[i]=s}}),r),toHexColor:r=>typeof r=="string"&&r.startsWith("#")?r:typeof r!="number"||isNaN(r)?"#ffffff":`#${Math.floor(r).toString(16).padStart(6,"0")}`};class Fp{constructor(){this.types=new Map}registerType(e,t){if(!e){console.warn(`${this.constructor.name}: Attempted to register a class without a typeName.`,t);return}this.types.has(e),this.types.set(e,t)}create(e,t,i=null){const n=this.types.get(e)||(i?this.types.get(i):null);return n?new n(...t):(console.warn(`${this.constructor.name}: Type "${e}" not found and no default type available.`),null)}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const to="177",Qg=0,xu=1,e0=2,Bp=1,Hp=2,On=3,En=0,Qt=1,$t=2,ei=0,vr=1,Qc=2,bu=3,Mu=4,t0=5,Is=100,i0=101,n0=102,s0=103,r0=104,a0=200,o0=201,l0=202,c0=203,eh=204,th=205,h0=206,d0=207,u0=208,f0=209,p0=210,m0=211,g0=212,v0=213,y0=214,ih=0,nh=1,sh=2,Cr=3,rh=4,ah=5,oh=6,lh=7,Ol=0,_0=1,x0=2,hs=0,b0=1,M0=2,S0=3,w0=4,E0=5,T0=6,C0=7,Su="attached",A0="detached",Gp=300,Ar=301,Pr=302,ch=303,hh=304,zl=306,ps=1e3,rs=1001,fl=1002,Bt=1003,Vp=1004,va=1005,Xt=1006,il=1007,Gn=1008,Gt=1009,Wp=1010,jp=1011,Da=1012,yd=1013,ms=1014,Xi=1015,io=1016,_d=1017,xd=1018,Lr=1020,$p=35902,Xp=1021,qp=1022,vi=1023,Na=1026,Rr=1027,no=1028,bd=1029,Md=1030,Sd=1031,wd=1033,nl=33776,sl=33777,rl=33778,al=33779,dh=35840,uh=35841,fh=35842,ph=35843,mh=36196,gh=37492,vh=37496,yh=37808,_h=37809,xh=37810,bh=37811,Mh=37812,Sh=37813,wh=37814,Eh=37815,Th=37816,Ch=37817,Ah=37818,Ph=37819,Lh=37820,Rh=37821,ol=36492,Dh=36494,Nh=36495,Zp=36283,Ih=36284,kh=36285,Oh=36286,Ia=2300,ka=2301,Yl=2302,wu=2400,Eu=2401,Tu=2402,P0=2500,L0=0,Yp=1,zh=2,qn=3200,pl=3201,so=0,R0=1,xn="",et="srgb",oi="srgb-linear",ml="linear",pt="srgb",Ys=7680,Cu=519,D0=512,N0=513,I0=514,Kp=515,k0=516,O0=517,z0=518,U0=519,Uh=35044,Dr=35048,Au="300 es",Vn=2e3,gl=2001;class Cn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,a=n.length;s<a;s++)n[s].call(this,e);e.target=null}}}const li=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Pu=1234567;const Ma=Math.PI/180,Nr=180/Math.PI;function Qi(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(li[r&255]+li[r>>8&255]+li[r>>16&255]+li[r>>24&255]+"-"+li[e&255]+li[e>>8&255]+"-"+li[e>>16&15|64]+li[e>>24&255]+"-"+li[t&63|128]+li[t>>8&255]+"-"+li[t>>16&255]+li[t>>24&255]+li[i&255]+li[i>>8&255]+li[i>>16&255]+li[i>>24&255]).toLowerCase()}function Ye(r,e,t){return Math.max(e,Math.min(t,r))}function Ed(r,e){return(r%e+e)%e}function F0(r,e,t,i,n){return i+(r-e)*(n-i)/(t-e)}function B0(r,e,t){return r!==e?(t-r)/(e-r):0}function Sa(r,e,t){return(1-t)*r+t*e}function H0(r,e,t,i){return Sa(r,e,1-Math.exp(-t*i))}function G0(r,e=1){return e-Math.abs(Ed(r,e*2)-e)}function V0(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function W0(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function j0(r,e){return r+Math.floor(Math.random()*(e-r+1))}function $0(r,e){return r+Math.random()*(e-r)}function X0(r){return r*(.5-Math.random())}function q0(r){r!==void 0&&(Pu=r);let e=Pu+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Z0(r){return r*Ma}function Y0(r){return r*Nr}function K0(r){return(r&r-1)===0&&r!==0}function J0(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Q0(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function ev(r,e,t,i,n){const s=Math.cos,a=Math.sin,o=s(t/2),l=a(t/2),c=s((e+i)/2),h=a((e+i)/2),d=s((e-i)/2),u=a((e-i)/2),f=s((i-e)/2),m=a((i-e)/2);switch(n){case"XYX":r.set(o*h,l*d,l*u,o*c);break;case"YZY":r.set(l*u,o*h,l*d,o*c);break;case"ZXZ":r.set(l*d,l*u,o*h,o*c);break;case"XZX":r.set(o*h,l*m,l*f,o*c);break;case"YXY":r.set(l*f,o*h,l*m,o*c);break;case"ZYZ":r.set(l*m,l*f,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function cn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function dt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Qr={DEG2RAD:Ma,RAD2DEG:Nr,generateUUID:Qi,clamp:Ye,euclideanModulo:Ed,mapLinear:F0,inverseLerp:B0,lerp:Sa,damp:H0,pingpong:G0,smoothstep:V0,smootherstep:W0,randInt:j0,randFloat:$0,randFloatSpread:X0,seededRandom:q0,degToRad:Z0,radToDeg:Y0,isPowerOfTwo:K0,ceilPowerOfTwo:J0,floorPowerOfTwo:Q0,setQuaternionFromProperEuler:ev,normalize:dt,denormalize:cn};class Z{constructor(e=0,t=0){Z.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Ye(this.x,e.x,t.x),this.y=Ye(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Ye(this.x,e,t),this.y=Ye(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ye(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ye(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*n+e.x,this.y=s*n+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class en{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,a,o){let l=i[n+0],c=i[n+1],h=i[n+2],d=i[n+3];const u=s[a+0],f=s[a+1],m=s[a+2],v=s[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d;return}if(o===1){e[t+0]=u,e[t+1]=f,e[t+2]=m,e[t+3]=v;return}if(d!==v||l!==u||c!==f||h!==m){let g=1-o;const p=l*u+c*f+h*m+d*v,x=p>=0?1:-1,_=1-p*p;if(_>Number.EPSILON){const w=Math.sqrt(_),C=Math.atan2(w,p*x);g=Math.sin(g*C)/w,o=Math.sin(o*C)/w}const y=o*x;if(l=l*g+u*y,c=c*g+f*y,h=h*g+m*y,d=d*g+v*y,g===1-o){const w=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=w,c*=w,h*=w,d*=w}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,n,s,a){const o=i[n],l=i[n+1],c=i[n+2],h=i[n+3],d=s[a],u=s[a+1],f=s[a+2],m=s[a+3];return e[t]=o*m+h*d+l*f-c*u,e[t+1]=l*m+h*u+c*d-o*f,e[t+2]=c*m+h*f+o*u-l*d,e[t+3]=h*m-o*d-l*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),h=o(n/2),d=o(s/2),u=l(i/2),f=l(n/2),m=l(s/2);switch(a){case"XYZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"YXZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"ZXY":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"ZYX":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"YZX":this._x=u*h*d+c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d-u*f*m;break;case"XZY":this._x=u*h*d-c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d+u*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],h=t[6],d=t[10],u=i+o+d;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(a-n)*f}else if(i>o&&i>d){const f=2*Math.sqrt(1+i-o-d);this._w=(h-l)/f,this._x=.25*f,this._y=(n+a)/f,this._z=(s+c)/f}else if(o>d){const f=2*Math.sqrt(1+o-i-d);this._w=(s-c)/f,this._x=(n+a)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+d-i-o);this._w=(a-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ye(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+a*o+n*c-s*l,this._y=n*h+a*l+s*o-i*c,this._z=s*h+a*c+i*l-n*o,this._w=a*h-i*o-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+n*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=n,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),d=Math.sin((1-t)*h)/c,u=Math.sin(t*h)/c;return this._w=a*d+this._w*u,this._x=i*d+this._x*u,this._y=n*d+this._y*u,this._z=s*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class M{constructor(e=0,t=0,i=0){M.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Lu.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Lu.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=2*(a*n-o*i),h=2*(o*t-s*n),d=2*(s*i-a*t);return this.x=t+l*c+a*d-o*h,this.y=i+l*h+o*c-s*d,this.z=n+l*d+s*h-a*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Ye(this.x,e.x,t.x),this.y=Ye(this.y,e.y,t.y),this.z=Ye(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Ye(this.x,e,t),this.y=Ye(this.y,e,t),this.z=Ye(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ye(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=n*l-s*o,this.y=s*a-i*l,this.z=i*o-n*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Kl.copy(this).projectOnVector(e),this.sub(Kl)}reflect(e){return this.sub(Kl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ye(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Kl=new M,Lu=new en;class qe{constructor(e,t,i,n,s,a,o,l,c){qe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,a,o,l,c)}set(e,t,i,n,s,a,o,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=o,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=a,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],h=i[4],d=i[7],u=i[2],f=i[5],m=i[8],v=n[0],g=n[3],p=n[6],x=n[1],_=n[4],y=n[7],w=n[2],C=n[5],A=n[8];return s[0]=a*v+o*x+l*w,s[3]=a*g+o*_+l*C,s[6]=a*p+o*y+l*A,s[1]=c*v+h*x+d*w,s[4]=c*g+h*_+d*C,s[7]=c*p+h*y+d*A,s[2]=u*v+f*x+m*w,s[5]=u*g+f*_+m*C,s[8]=u*p+f*y+m*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return t*a*h-t*o*c-i*s*h+i*o*l+n*s*c-n*a*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=h*a-o*c,u=o*l-h*s,f=c*s-a*l,m=t*d+i*u+n*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/m;return e[0]=d*v,e[1]=(n*c-h*i)*v,e[2]=(o*i-n*a)*v,e[3]=u*v,e[4]=(h*t-n*l)*v,e[5]=(n*s-o*t)*v,e[6]=f*v,e[7]=(i*l-c*t)*v,e[8]=(a*t-i*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-n*c,n*l,-n*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Jl.makeScale(e,t)),this}rotate(e){return this.premultiply(Jl.makeRotation(-e)),this}translate(e,t){return this.premultiply(Jl.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Jl=new qe;function Jp(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function Oa(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function tv(){const r=Oa("canvas");return r.style.display="block",r}const Ru={};function yr(r){r in Ru||(Ru[r]=!0,console.warn(r))}function iv(r,e,t){return new Promise(function(i,n){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:n();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}function nv(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function sv(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Du=new qe().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Nu=new qe().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function rv(){const r={enabled:!0,workingColorSpace:oi,spaces:{},convert:function(n,s,a){return this.enabled===!1||s===a||!s||!a||(this.spaces[s].transfer===pt&&(n.r=jn(n.r),n.g=jn(n.g),n.b=jn(n.b)),this.spaces[s].primaries!==this.spaces[a].primaries&&(n.applyMatrix3(this.spaces[s].toXYZ),n.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===pt&&(n.r=_r(n.r),n.g=_r(n.g),n.b=_r(n.b))),n},workingToColorSpace:function(n,s){return this.convert(n,this.workingColorSpace,s)},colorSpaceToWorking:function(n,s){return this.convert(n,s,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===xn?ml:this.spaces[n].transfer},getLuminanceCoefficients:function(n,s=this.workingColorSpace){return n.fromArray(this.spaces[s].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,s,a){return n.copy(this.spaces[s].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(n,s){return yr("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(n,s)},toWorkingColorSpace:function(n,s){return yr("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(n,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[oi]:{primaries:e,whitePoint:i,transfer:ml,toXYZ:Du,fromXYZ:Nu,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:et},outputColorSpaceConfig:{drawingBufferColorSpace:et}},[et]:{primaries:e,whitePoint:i,transfer:pt,toXYZ:Du,fromXYZ:Nu,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:et}}}),r}const nt=rv();function jn(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function _r(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Ks;class av{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{Ks===void 0&&(Ks=Oa("canvas")),Ks.width=e.width,Ks.height=e.height;const n=Ks.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=Ks}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Oa("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let a=0;a<s.length;a++)s[a]=jn(s[a]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(jn(t[i]/255)*255):t[i]=jn(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let ov=0;class Td{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ov++}),this.uuid=Qi(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let a=0,o=n.length;a<o;a++)n[a].isDataTexture?s.push(Ql(n[a].image)):s.push(Ql(n[a]))}else s=Ql(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function Ql(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?av.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let lv=0;const ec=new M;class Ht extends Cn{constructor(e=Ht.DEFAULT_IMAGE,t=Ht.DEFAULT_MAPPING,i=rs,n=rs,s=Xt,a=Gn,o=vi,l=Gt,c=Ht.DEFAULT_ANISOTROPY,h=xn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:lv++}),this.uuid=Qi(),this.name="",this.source=new Td(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new Z(0,0),this.repeat=new Z(1,1),this.center=new Z(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new qe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(ec).x}get height(){return this.source.getSize(ec).y}get depth(){return this.source.getSize(ec).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}n&&i&&n.isVector2&&i.isVector2||n&&i&&n.isVector3&&i.isVector3||n&&i&&n.isMatrix3&&i.isMatrix3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Gp)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ps:e.x=e.x-Math.floor(e.x);break;case rs:e.x=e.x<0?0:1;break;case fl:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ps:e.y=e.y-Math.floor(e.y);break;case rs:e.y=e.y<0?0:1;break;case fl:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Ht.DEFAULT_IMAGE=null;Ht.DEFAULT_MAPPING=Gp;Ht.DEFAULT_ANISOTROPY=1;class Ke{constructor(e=0,t=0,i=0,n=1){Ke.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],d=l[8],u=l[1],f=l[5],m=l[9],v=l[2],g=l[6],p=l[10];if(Math.abs(h-u)<.01&&Math.abs(d-v)<.01&&Math.abs(m-g)<.01){if(Math.abs(h+u)<.1&&Math.abs(d+v)<.1&&Math.abs(m+g)<.1&&Math.abs(c+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,y=(f+1)/2,w=(p+1)/2,C=(h+u)/4,A=(d+v)/4,L=(m+g)/4;return _>y&&_>w?_<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(_),n=C/i,s=A/i):y>w?y<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(y),i=C/n,s=L/n):w<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(w),i=A/s,n=L/s),this.set(i,n,s,t),this}let x=Math.sqrt((g-m)*(g-m)+(d-v)*(d-v)+(u-h)*(u-h));return Math.abs(x)<.001&&(x=1),this.x=(g-m)/x,this.y=(d-v)/x,this.z=(u-h)/x,this.w=Math.acos((c+f+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Ye(this.x,e.x,t.x),this.y=Ye(this.y,e.y,t.y),this.z=Ye(this.z,e.z,t.z),this.w=Ye(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Ye(this.x,e,t),this.y=Ye(this.y,e,t),this.z=Ye(this.z,e,t),this.w=Ye(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ye(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class cv extends Cn{constructor(e=1,t=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Xt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth,this.scissor=new Ke(0,0,e,t),this.scissorTest=!1,this.viewport=new Ke(0,0,e,t);const n={width:e,height:t,depth:i.depth},s=new Ht(n);this.textures=[];const a=i.count;for(let o=0;o<a;o++)this.textures[o]=s.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const t={minFilter:Xt,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i,this.textures[n].isArrayTexture=this.textures[n].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new Td(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class kt extends cv{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class Qp extends Ht{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Bt,this.minFilter=Bt,this.wrapR=rs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class hv extends Ht{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Bt,this.minFilter=Bt,this.wrapR=rs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qt{constructor(e=new M(1/0,1/0,1/0),t=new M(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(sn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(sn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=sn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,sn):sn.fromBufferAttribute(s,a),sn.applyMatrix4(e.matrixWorld),this.expandByPoint(sn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),go.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),go.copy(i.boundingBox)),go.applyMatrix4(e.matrixWorld),this.union(go)}const n=e.children;for(let s=0,a=n.length;s<a;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,sn),sn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(oa),vo.subVectors(this.max,oa),Js.subVectors(e.a,oa),Qs.subVectors(e.b,oa),er.subVectors(e.c,oa),Yn.subVectors(Qs,Js),Kn.subVectors(er,Qs),Ss.subVectors(Js,er);let t=[0,-Yn.z,Yn.y,0,-Kn.z,Kn.y,0,-Ss.z,Ss.y,Yn.z,0,-Yn.x,Kn.z,0,-Kn.x,Ss.z,0,-Ss.x,-Yn.y,Yn.x,0,-Kn.y,Kn.x,0,-Ss.y,Ss.x,0];return!tc(t,Js,Qs,er,vo)||(t=[1,0,0,0,1,0,0,0,1],!tc(t,Js,Qs,er,vo))?!1:(yo.crossVectors(Yn,Kn),t=[yo.x,yo.y,yo.z],tc(t,Js,Qs,er,vo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,sn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(sn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ln[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ln[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ln[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ln[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ln[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ln[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ln[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ln[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ln),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Ln=[new M,new M,new M,new M,new M,new M,new M,new M],sn=new M,go=new qt,Js=new M,Qs=new M,er=new M,Yn=new M,Kn=new M,Ss=new M,oa=new M,vo=new M,yo=new M,ws=new M;function tc(r,e,t,i,n){for(let s=0,a=r.length-3;s<=a;s+=3){ws.fromArray(r,s);const o=n.x*Math.abs(ws.x)+n.y*Math.abs(ws.y)+n.z*Math.abs(ws.z),l=e.dot(ws),c=t.dot(ws),h=i.dot(ws);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const dv=new qt,la=new M,ic=new M;class Pi{constructor(e=new M,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):dv.setFromPoints(e).getCenter(i);let n=0;for(let s=0,a=e.length;s<a;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;la.subVectors(e,this.center);const t=la.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(la,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(ic.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(la.copy(e.center).add(ic)),this.expandByPoint(la.copy(e.center).sub(ic))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Rn=new M,nc=new M,_o=new M,Jn=new M,sc=new M,xo=new M,rc=new M;class ro{constructor(e=new M,t=new M(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Rn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Rn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Rn.copy(this.origin).addScaledVector(this.direction,t),Rn.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){nc.copy(e).add(t).multiplyScalar(.5),_o.copy(t).sub(e).normalize(),Jn.copy(this.origin).sub(nc);const s=e.distanceTo(t)*.5,a=-this.direction.dot(_o),o=Jn.dot(this.direction),l=-Jn.dot(_o),c=Jn.lengthSq(),h=Math.abs(1-a*a);let d,u,f,m;if(h>0)if(d=a*l-o,u=a*o-l,m=s*h,d>=0)if(u>=-m)if(u<=m){const v=1/h;d*=v,u*=v,f=d*(d+a*u+2*o)+u*(a*d+u+2*l)+c}else u=s,d=Math.max(0,-(a*u+o)),f=-d*d+u*(u+2*l)+c;else u=-s,d=Math.max(0,-(a*u+o)),f=-d*d+u*(u+2*l)+c;else u<=-m?(d=Math.max(0,-(-a*s+o)),u=d>0?-s:Math.min(Math.max(-s,-l),s),f=-d*d+u*(u+2*l)+c):u<=m?(d=0,u=Math.min(Math.max(-s,-l),s),f=u*(u+2*l)+c):(d=Math.max(0,-(a*s+o)),u=d>0?s:Math.min(Math.max(-s,-l),s),f=-d*d+u*(u+2*l)+c);else u=a>0?-s:s,d=Math.max(0,-(a*u+o)),f=-d*d+u*(u+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,d),n&&n.copy(nc).addScaledVector(_o,u),f}intersectSphere(e,t){Rn.subVectors(e.center,this.origin);const i=Rn.dot(this.direction),n=Rn.dot(Rn)-i*i,s=e.radius*e.radius;if(n>s)return null;const a=Math.sqrt(s-n),o=i-a,l=i+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,a,o,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,u=this.origin;return c>=0?(i=(e.min.x-u.x)*c,n=(e.max.x-u.x)*c):(i=(e.max.x-u.x)*c,n=(e.min.x-u.x)*c),h>=0?(s=(e.min.y-u.y)*h,a=(e.max.y-u.y)*h):(s=(e.max.y-u.y)*h,a=(e.min.y-u.y)*h),i>a||s>n||((s>i||isNaN(i))&&(i=s),(a<n||isNaN(n))&&(n=a),d>=0?(o=(e.min.z-u.z)*d,l=(e.max.z-u.z)*d):(o=(e.max.z-u.z)*d,l=(e.min.z-u.z)*d),i>l||o>n)||((o>i||i!==i)&&(i=o),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Rn)!==null}intersectTriangle(e,t,i,n,s){sc.subVectors(t,e),xo.subVectors(i,e),rc.crossVectors(sc,xo);let a=this.direction.dot(rc),o;if(a>0){if(n)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Jn.subVectors(this.origin,e);const l=o*this.direction.dot(xo.crossVectors(Jn,xo));if(l<0)return null;const c=o*this.direction.dot(sc.cross(Jn));if(c<0||l+c>a)return null;const h=-o*Jn.dot(rc);return h<0?null:this.at(h/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ne{constructor(e,t,i,n,s,a,o,l,c,h,d,u,f,m,v,g){Ne.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,a,o,l,c,h,d,u,f,m,v,g)}set(e,t,i,n,s,a,o,l,c,h,d,u,f,m,v,g){const p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=n,p[1]=s,p[5]=a,p[9]=o,p[13]=l,p[2]=c,p[6]=h,p[10]=d,p[14]=u,p[3]=f,p[7]=m,p[11]=v,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ne().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/tr.setFromMatrixColumn(e,0).length(),s=1/tr.setFromMatrixColumn(e,1).length(),a=1/tr.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const u=a*h,f=a*d,m=o*h,v=o*d;t[0]=l*h,t[4]=-l*d,t[8]=c,t[1]=f+m*c,t[5]=u-v*c,t[9]=-o*l,t[2]=v-u*c,t[6]=m+f*c,t[10]=a*l}else if(e.order==="YXZ"){const u=l*h,f=l*d,m=c*h,v=c*d;t[0]=u+v*o,t[4]=m*o-f,t[8]=a*c,t[1]=a*d,t[5]=a*h,t[9]=-o,t[2]=f*o-m,t[6]=v+u*o,t[10]=a*l}else if(e.order==="ZXY"){const u=l*h,f=l*d,m=c*h,v=c*d;t[0]=u-v*o,t[4]=-a*d,t[8]=m+f*o,t[1]=f+m*o,t[5]=a*h,t[9]=v-u*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const u=a*h,f=a*d,m=o*h,v=o*d;t[0]=l*h,t[4]=m*c-f,t[8]=u*c+v,t[1]=l*d,t[5]=v*c+u,t[9]=f*c-m,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const u=a*l,f=a*c,m=o*l,v=o*c;t[0]=l*h,t[4]=v-u*d,t[8]=m*d+f,t[1]=d,t[5]=a*h,t[9]=-o*h,t[2]=-c*h,t[6]=f*d+m,t[10]=u-v*d}else if(e.order==="XZY"){const u=a*l,f=a*c,m=o*l,v=o*c;t[0]=l*h,t[4]=-d,t[8]=c*h,t[1]=u*d+v,t[5]=a*h,t[9]=f*d-m,t[2]=m*d-f,t[6]=o*h,t[10]=v*d+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(uv,e,fv)}lookAt(e,t,i){const n=this.elements;return Ri.subVectors(e,t),Ri.lengthSq()===0&&(Ri.z=1),Ri.normalize(),Qn.crossVectors(i,Ri),Qn.lengthSq()===0&&(Math.abs(i.z)===1?Ri.x+=1e-4:Ri.z+=1e-4,Ri.normalize(),Qn.crossVectors(i,Ri)),Qn.normalize(),bo.crossVectors(Ri,Qn),n[0]=Qn.x,n[4]=bo.x,n[8]=Ri.x,n[1]=Qn.y,n[5]=bo.y,n[9]=Ri.y,n[2]=Qn.z,n[6]=bo.z,n[10]=Ri.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],h=i[1],d=i[5],u=i[9],f=i[13],m=i[2],v=i[6],g=i[10],p=i[14],x=i[3],_=i[7],y=i[11],w=i[15],C=n[0],A=n[4],L=n[8],b=n[12],S=n[1],N=n[5],O=n[9],k=n[13],H=n[2],j=n[6],B=n[10],K=n[14],W=n[3],oe=n[7],me=n[11],_e=n[15];return s[0]=a*C+o*S+l*H+c*W,s[4]=a*A+o*N+l*j+c*oe,s[8]=a*L+o*O+l*B+c*me,s[12]=a*b+o*k+l*K+c*_e,s[1]=h*C+d*S+u*H+f*W,s[5]=h*A+d*N+u*j+f*oe,s[9]=h*L+d*O+u*B+f*me,s[13]=h*b+d*k+u*K+f*_e,s[2]=m*C+v*S+g*H+p*W,s[6]=m*A+v*N+g*j+p*oe,s[10]=m*L+v*O+g*B+p*me,s[14]=m*b+v*k+g*K+p*_e,s[3]=x*C+_*S+y*H+w*W,s[7]=x*A+_*N+y*j+w*oe,s[11]=x*L+_*O+y*B+w*me,s[15]=x*b+_*k+y*K+w*_e,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],h=e[2],d=e[6],u=e[10],f=e[14],m=e[3],v=e[7],g=e[11],p=e[15];return m*(+s*l*d-n*c*d-s*o*u+i*c*u+n*o*f-i*l*f)+v*(+t*l*f-t*c*u+s*a*u-n*a*f+n*c*h-s*l*h)+g*(+t*c*d-t*o*f-s*a*d+i*a*f+s*o*h-i*c*h)+p*(-n*o*h-t*l*d+t*o*u+n*a*d-i*a*u+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=e[9],u=e[10],f=e[11],m=e[12],v=e[13],g=e[14],p=e[15],x=d*g*c-v*u*c+v*l*f-o*g*f-d*l*p+o*u*p,_=m*u*c-h*g*c-m*l*f+a*g*f+h*l*p-a*u*p,y=h*v*c-m*d*c+m*o*f-a*v*f-h*o*p+a*d*p,w=m*d*l-h*v*l-m*o*u+a*v*u+h*o*g-a*d*g,C=t*x+i*_+n*y+s*w;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/C;return e[0]=x*A,e[1]=(v*u*s-d*g*s-v*n*f+i*g*f+d*n*p-i*u*p)*A,e[2]=(o*g*s-v*l*s+v*n*c-i*g*c-o*n*p+i*l*p)*A,e[3]=(d*l*s-o*u*s-d*n*c+i*u*c+o*n*f-i*l*f)*A,e[4]=_*A,e[5]=(h*g*s-m*u*s+m*n*f-t*g*f-h*n*p+t*u*p)*A,e[6]=(m*l*s-a*g*s-m*n*c+t*g*c+a*n*p-t*l*p)*A,e[7]=(a*u*s-h*l*s+h*n*c-t*u*c-a*n*f+t*l*f)*A,e[8]=y*A,e[9]=(m*d*s-h*v*s-m*i*f+t*v*f+h*i*p-t*d*p)*A,e[10]=(a*v*s-m*o*s+m*i*c-t*v*c-a*i*p+t*o*p)*A,e[11]=(h*o*s-a*d*s-h*i*c+t*d*c+a*i*f-t*o*f)*A,e[12]=w*A,e[13]=(h*v*n-m*d*n+m*i*u-t*v*u-h*i*g+t*d*g)*A,e[14]=(m*o*n-a*v*n-m*i*l+t*v*l+a*i*g-t*o*g)*A,e[15]=(a*d*n-h*o*n+h*i*l-t*d*l-a*i*u+t*o*u)*A,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,h=s*o;return this.set(c*a+i,c*o-n*l,c*l+n*o,0,c*o+n*l,h*o+i,h*l-n*a,0,c*l-n*o,h*l+n*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,a){return this.set(1,i,s,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,h=a+a,d=o+o,u=s*c,f=s*h,m=s*d,v=a*h,g=a*d,p=o*d,x=l*c,_=l*h,y=l*d,w=i.x,C=i.y,A=i.z;return n[0]=(1-(v+p))*w,n[1]=(f+y)*w,n[2]=(m-_)*w,n[3]=0,n[4]=(f-y)*C,n[5]=(1-(u+p))*C,n[6]=(g+x)*C,n[7]=0,n[8]=(m+_)*A,n[9]=(g-x)*A,n[10]=(1-(u+v))*A,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=tr.set(n[0],n[1],n[2]).length();const a=tr.set(n[4],n[5],n[6]).length(),o=tr.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],rn.copy(this);const c=1/s,h=1/a,d=1/o;return rn.elements[0]*=c,rn.elements[1]*=c,rn.elements[2]*=c,rn.elements[4]*=h,rn.elements[5]*=h,rn.elements[6]*=h,rn.elements[8]*=d,rn.elements[9]*=d,rn.elements[10]*=d,t.setFromRotationMatrix(rn),i.x=s,i.y=a,i.z=o,this}makePerspective(e,t,i,n,s,a,o=Vn){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),d=(t+e)/(t-e),u=(i+n)/(i-n);let f,m;if(o===Vn)f=-(a+s)/(a-s),m=-2*a*s/(a-s);else if(o===gl)f=-a/(a-s),m=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=c,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=u,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,a,o=Vn){const l=this.elements,c=1/(t-e),h=1/(i-n),d=1/(a-s),u=(t+e)*c,f=(i+n)*h;let m,v;if(o===Vn)m=(a+s)*d,v=-2*d;else if(o===gl)m=s*d,v=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-u,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const tr=new M,rn=new Ne,uv=new M(0,0,0),fv=new M(1,1,1),Qn=new M,bo=new M,Ri=new M,Iu=new Ne,ku=new en;class Ui{constructor(e=0,t=0,i=0,n=Ui.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],a=n[4],o=n[8],l=n[1],c=n[5],h=n[9],d=n[2],u=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(Ye(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ye(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ye(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,f),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Ye(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(Ye(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-Ye(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Iu.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Iu,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ku.setFromEuler(this),this.setFromQuaternion(ku,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ui.DEFAULT_ORDER="XYZ";class Cd{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let pv=0;const Ou=new M,ir=new en,Dn=new Ne,Mo=new M,ca=new M,mv=new M,gv=new en,zu=new M(1,0,0),Uu=new M(0,1,0),Fu=new M(0,0,1),Bu={type:"added"},vv={type:"removed"},nr={type:"childadded",child:null},ac={type:"childremoved",child:null};class yt extends Cn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:pv++}),this.uuid=Qi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=yt.DEFAULT_UP.clone();const e=new M,t=new Ui,i=new en,n=new M(1,1,1);function s(){i.setFromEuler(t,!1)}function a(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ne},normalMatrix:{value:new qe}}),this.matrix=new Ne,this.matrixWorld=new Ne,this.matrixAutoUpdate=yt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=yt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Cd,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ir.setFromAxisAngle(e,t),this.quaternion.multiply(ir),this}rotateOnWorldAxis(e,t){return ir.setFromAxisAngle(e,t),this.quaternion.premultiply(ir),this}rotateX(e){return this.rotateOnAxis(zu,e)}rotateY(e){return this.rotateOnAxis(Uu,e)}rotateZ(e){return this.rotateOnAxis(Fu,e)}translateOnAxis(e,t){return Ou.copy(e).applyQuaternion(this.quaternion),this.position.add(Ou.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(zu,e)}translateY(e){return this.translateOnAxis(Uu,e)}translateZ(e){return this.translateOnAxis(Fu,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Dn.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Mo.copy(e):Mo.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),ca.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Dn.lookAt(ca,Mo,this.up):Dn.lookAt(Mo,ca,this.up),this.quaternion.setFromRotationMatrix(Dn),n&&(Dn.extractRotation(n.matrixWorld),ir.setFromRotationMatrix(Dn),this.quaternion.premultiply(ir.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Bu),nr.child=e,this.dispatchEvent(nr),nr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(vv),ac.child=e,this.dispatchEvent(ac),ac.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Dn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Dn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Dn),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Bu),nr.child=e,this.dispatchEvent(nr),nr.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const a=this.children[i].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,a=n.length;s<a;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ca,e,mv),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ca,gv,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,a=n.length;s<a;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?o.boundingBox.toJSON():void 0,boundingSphere:o.boundingSphere?o.boundingSphere.toJSON():void 0})),n.instanceInfo=this._instanceInfo.map(o=>({...o})),n.availableInstanceIds=this._availableInstanceIds.slice(),n.availableGeometryIds=this._availableGeometryIds.slice(),n.nextIndexStart=this._nextIndexStart,n.nextVertexStart=this._nextVertexStart,n.geometryCount=this._geometryCount,n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.matricesTexture=this._matricesTexture.toJSON(e),n.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(n.boundingBox=this.boundingBox.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const d=l[c];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));n.material=o}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let o=0;o<this.children.length;o++)n.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];n.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),h=a(e.images),d=a(e.shapes),u=a(e.skeletons),f=a(e.animations),m=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),u.length>0&&(i.skeletons=u),f.length>0&&(i.animations=f),m.length>0&&(i.nodes=m)}return i.object=n,i;function a(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}yt.DEFAULT_UP=new M(0,1,0);yt.DEFAULT_MATRIX_AUTO_UPDATE=!0;yt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const an=new M,Nn=new M,oc=new M,In=new M,sr=new M,rr=new M,Hu=new M,lc=new M,cc=new M,hc=new M,dc=new Ke,uc=new Ke,fc=new Ke;class hn{constructor(e=new M,t=new M,i=new M){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),an.subVectors(e,t),n.cross(an);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){an.subVectors(n,t),Nn.subVectors(i,t),oc.subVectors(e,t);const a=an.dot(an),o=an.dot(Nn),l=an.dot(oc),c=Nn.dot(Nn),h=Nn.dot(oc),d=a*c-o*o;if(d===0)return s.set(0,0,0),null;const u=1/d,f=(c*l-o*h)*u,m=(a*h-o*l)*u;return s.set(1-f-m,m,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,In)===null?!1:In.x>=0&&In.y>=0&&In.x+In.y<=1}static getInterpolation(e,t,i,n,s,a,o,l){return this.getBarycoord(e,t,i,n,In)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,In.x),l.addScaledVector(a,In.y),l.addScaledVector(o,In.z),l)}static getInterpolatedAttribute(e,t,i,n,s,a){return dc.setScalar(0),uc.setScalar(0),fc.setScalar(0),dc.fromBufferAttribute(e,t),uc.fromBufferAttribute(e,i),fc.fromBufferAttribute(e,n),a.setScalar(0),a.addScaledVector(dc,s.x),a.addScaledVector(uc,s.y),a.addScaledVector(fc,s.z),a}static isFrontFacing(e,t,i,n){return an.subVectors(i,t),Nn.subVectors(e,t),an.cross(Nn).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return an.subVectors(this.c,this.b),Nn.subVectors(this.a,this.b),an.cross(Nn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return hn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return hn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return hn.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return hn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return hn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let a,o;sr.subVectors(n,i),rr.subVectors(s,i),lc.subVectors(e,i);const l=sr.dot(lc),c=rr.dot(lc);if(l<=0&&c<=0)return t.copy(i);cc.subVectors(e,n);const h=sr.dot(cc),d=rr.dot(cc);if(h>=0&&d<=h)return t.copy(n);const u=l*d-h*c;if(u<=0&&l>=0&&h<=0)return a=l/(l-h),t.copy(i).addScaledVector(sr,a);hc.subVectors(e,s);const f=sr.dot(hc),m=rr.dot(hc);if(m>=0&&f<=m)return t.copy(s);const v=f*c-l*m;if(v<=0&&c>=0&&m<=0)return o=c/(c-m),t.copy(i).addScaledVector(rr,o);const g=h*m-f*d;if(g<=0&&d-h>=0&&f-m>=0)return Hu.subVectors(s,n),o=(d-h)/(d-h+(f-m)),t.copy(n).addScaledVector(Hu,o);const p=1/(g+v+u);return a=v*p,o=u*p,t.copy(i).addScaledVector(sr,a).addScaledVector(rr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const em={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},es={h:0,s:0,l:0},So={h:0,s:0,l:0};function pc(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class fe{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=et){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,nt.colorSpaceToWorking(this,t),this}setRGB(e,t,i,n=nt.workingColorSpace){return this.r=e,this.g=t,this.b=i,nt.colorSpaceToWorking(this,n),this}setHSL(e,t,i,n=nt.workingColorSpace){if(e=Ed(e,1),t=Ye(t,0,1),i=Ye(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,a=2*i-s;this.r=pc(a,s,e+1/3),this.g=pc(a,s,e),this.b=pc(a,s,e-1/3)}return nt.colorSpaceToWorking(this,n),this}setStyle(e,t=et){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=n[1],o=n[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=et){const i=em[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=jn(e.r),this.g=jn(e.g),this.b=jn(e.b),this}copyLinearToSRGB(e){return this.r=_r(e.r),this.g=_r(e.g),this.b=_r(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=et){return nt.workingToColorSpace(ci.copy(this),e),Math.round(Ye(ci.r*255,0,255))*65536+Math.round(Ye(ci.g*255,0,255))*256+Math.round(Ye(ci.b*255,0,255))}getHexString(e=et){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=nt.workingColorSpace){nt.workingToColorSpace(ci.copy(this),t);const i=ci.r,n=ci.g,s=ci.b,a=Math.max(i,n,s),o=Math.min(i,n,s);let l,c;const h=(o+a)/2;if(o===a)l=0,c=0;else{const d=a-o;switch(c=h<=.5?d/(a+o):d/(2-a-o),a){case i:l=(n-s)/d+(n<s?6:0);break;case n:l=(s-i)/d+2;break;case s:l=(i-n)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=nt.workingColorSpace){return nt.workingToColorSpace(ci.copy(this),t),e.r=ci.r,e.g=ci.g,e.b=ci.b,e}getStyle(e=et){nt.workingToColorSpace(ci.copy(this),e);const t=ci.r,i=ci.g,n=ci.b;return e!==et?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(es),this.setHSL(es.h+e,es.s+t,es.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(es),e.getHSL(So);const i=Sa(es.h,So.h,t),n=Sa(es.s,So.s,t),s=Sa(es.l,So.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const ci=new fe;fe.NAMES=em;let yv=0;class yi extends Cn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:yv++}),this.uuid=Qi(),this.name="",this.type="Material",this.blending=vr,this.side=En,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=eh,this.blendDst=th,this.blendEquation=Is,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new fe(0,0,0),this.blendAlpha=0,this.depthFunc=Cr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Cu,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ys,this.stencilZFail=Ys,this.stencilZPass=Ys,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==vr&&(i.blending=this.blending),this.side!==En&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==eh&&(i.blendSrc=this.blendSrc),this.blendDst!==th&&(i.blendDst=this.blendDst),this.blendEquation!==Is&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Cr&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Cu&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ys&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Ys&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Ys&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(t){const s=n(e.textures),a=n(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class di extends yi{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=Ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Vt=new M,wo=new Z;let _v=0;class Ct{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:_v++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=Uh,this.updateRanges=[],this.gpuType=Xi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)wo.fromBufferAttribute(this,t),wo.applyMatrix3(e),this.setXY(t,wo.x,wo.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Vt.fromBufferAttribute(this,t),Vt.applyMatrix3(e),this.setXYZ(t,Vt.x,Vt.y,Vt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Vt.fromBufferAttribute(this,t),Vt.applyMatrix4(e),this.setXYZ(t,Vt.x,Vt.y,Vt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Vt.fromBufferAttribute(this,t),Vt.applyNormalMatrix(e),this.setXYZ(t,Vt.x,Vt.y,Vt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Vt.fromBufferAttribute(this,t),Vt.transformDirection(e),this.setXYZ(t,Vt.x,Vt.y,Vt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=cn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=dt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=cn(t,this.array)),t}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=cn(t,this.array)),t}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=cn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=cn(t,this.array)),t}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),i=dt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),i=dt(i,this.array),n=dt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),i=dt(i,this.array),n=dt(n,this.array),s=dt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Uh&&(e.usage=this.usage),e}}class tm extends Ct{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class im extends Ct{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class _t extends Ct{constructor(e,t,i){super(new Float32Array(e),t,i)}}let xv=0;const Vi=new Ne,mc=new yt,ar=new M,Di=new qt,ha=new qt,Kt=new M;class At extends Cn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:xv++}),this.uuid=Qi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Jp(e)?im:tm)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new qe().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Vi.makeRotationFromQuaternion(e),this.applyMatrix4(Vi),this}rotateX(e){return Vi.makeRotationX(e),this.applyMatrix4(Vi),this}rotateY(e){return Vi.makeRotationY(e),this.applyMatrix4(Vi),this}rotateZ(e){return Vi.makeRotationZ(e),this.applyMatrix4(Vi),this}translate(e,t,i){return Vi.makeTranslation(e,t,i),this.applyMatrix4(Vi),this}scale(e,t,i){return Vi.makeScale(e,t,i),this.applyMatrix4(Vi),this}lookAt(e){return mc.lookAt(e),mc.updateMatrix(),this.applyMatrix4(mc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ar).negate(),this.translate(ar.x,ar.y,ar.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,s=e.length;n<s;n++){const a=e[n];i.push(a.x,a.y,a.z||0)}this.setAttribute("position",new _t(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const s=e[n];t.setXYZ(n,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];Di.setFromBufferAttribute(s),this.morphTargetsRelative?(Kt.addVectors(this.boundingBox.min,Di.min),this.boundingBox.expandByPoint(Kt),Kt.addVectors(this.boundingBox.max,Di.max),this.boundingBox.expandByPoint(Kt)):(this.boundingBox.expandByPoint(Di.min),this.boundingBox.expandByPoint(Di.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Pi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new M,1/0);return}if(e){const i=this.boundingSphere.center;if(Di.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];ha.setFromBufferAttribute(o),this.morphTargetsRelative?(Kt.addVectors(Di.min,ha.min),Di.expandByPoint(Kt),Kt.addVectors(Di.max,ha.max),Di.expandByPoint(Kt)):(Di.expandByPoint(ha.min),Di.expandByPoint(ha.max))}Di.getCenter(i);let n=0;for(let s=0,a=e.count;s<a;s++)Kt.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(Kt));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)Kt.fromBufferAttribute(o,c),l&&(ar.fromBufferAttribute(e,c),Kt.add(ar)),n=Math.max(n,i.distanceToSquared(Kt))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ct(new Float32Array(4*i.count),4));const a=this.getAttribute("tangent"),o=[],l=[];for(let L=0;L<i.count;L++)o[L]=new M,l[L]=new M;const c=new M,h=new M,d=new M,u=new Z,f=new Z,m=new Z,v=new M,g=new M;function p(L,b,S){c.fromBufferAttribute(i,L),h.fromBufferAttribute(i,b),d.fromBufferAttribute(i,S),u.fromBufferAttribute(s,L),f.fromBufferAttribute(s,b),m.fromBufferAttribute(s,S),h.sub(c),d.sub(c),f.sub(u),m.sub(u);const N=1/(f.x*m.y-m.x*f.y);isFinite(N)&&(v.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(N),g.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(N),o[L].add(v),o[b].add(v),o[S].add(v),l[L].add(g),l[b].add(g),l[S].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let L=0,b=x.length;L<b;++L){const S=x[L],N=S.start,O=S.count;for(let k=N,H=N+O;k<H;k+=3)p(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const _=new M,y=new M,w=new M,C=new M;function A(L){w.fromBufferAttribute(n,L),C.copy(w);const b=o[L];_.copy(b),_.sub(w.multiplyScalar(w.dot(b))).normalize(),y.crossVectors(C,b);const N=y.dot(l[L])<0?-1:1;a.setXYZW(L,_.x,_.y,_.z,N)}for(let L=0,b=x.length;L<b;++L){const S=x[L],N=S.start,O=S.count;for(let k=N,H=N+O;k<H;k+=3)A(e.getX(k+0)),A(e.getX(k+1)),A(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ct(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let u=0,f=i.count;u<f;u++)i.setXYZ(u,0,0,0);const n=new M,s=new M,a=new M,o=new M,l=new M,c=new M,h=new M,d=new M;if(e)for(let u=0,f=e.count;u<f;u+=3){const m=e.getX(u+0),v=e.getX(u+1),g=e.getX(u+2);n.fromBufferAttribute(t,m),s.fromBufferAttribute(t,v),a.fromBufferAttribute(t,g),h.subVectors(a,s),d.subVectors(n,s),h.cross(d),o.fromBufferAttribute(i,m),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,g),o.add(h),l.add(h),c.add(h),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)n.fromBufferAttribute(t,u+0),s.fromBufferAttribute(t,u+1),a.fromBufferAttribute(t,u+2),h.subVectors(a,s),d.subVectors(n,s),h.cross(d),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Kt.fromBufferAttribute(e,t),Kt.normalize(),e.setXYZ(t,Kt.x,Kt.y,Kt.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,d=o.normalized,u=new c.constructor(l.length*h);let f=0,m=0;for(let v=0,g=l.length;v<g;v++){o.isInterleavedBufferAttribute?f=l[v]*o.data.stride+o.offset:f=l[v]*h;for(let p=0;p<h;p++)u[m++]=c[f++]}return new Ct(u,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new At,i=this.index.array,n=this.attributes;for(const o in n){const l=n[o],c=e(l,i);t.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let h=0,d=c.length;h<d;h++){const u=c[h],f=e(u,i);l.push(f)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,u=c.length;d<u;d++){const f=c[d];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere=o.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],d=s[c];for(let u=0,f=d.length;u<f;u++)h.push(d[u].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,h=a.length;c<h;c++){const d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Gu=new Ne,Es=new ro,Eo=new Pi,Vu=new M,To=new M,Co=new M,Ao=new M,gc=new M,Po=new M,Wu=new M,Lo=new M;class st extends yt{constructor(e=new At,t=new di){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=n.length;s<a;s++){const o=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const o=this.morphTargetInfluences;if(s&&o){Po.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=o[l],d=s[l];h!==0&&(gc.fromBufferAttribute(d,e),a?Po.addScaledVector(gc,h):Po.addScaledVector(gc.sub(t),h))}t.add(Po)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Eo.copy(i.boundingSphere),Eo.applyMatrix4(s),Es.copy(e.ray).recast(e.near),!(Eo.containsPoint(Es.origin)===!1&&(Es.intersectSphere(Eo,Vu)===null||Es.origin.distanceToSquared(Vu)>(e.far-e.near)**2))&&(Gu.copy(s).invert(),Es.copy(e.ray).applyMatrix4(Gu),!(i.boundingBox!==null&&Es.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Es)))}_computeIntersections(e,t,i){let n;const s=this.geometry,a=this.material,o=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,d=s.attributes.normal,u=s.groups,f=s.drawRange;if(o!==null)if(Array.isArray(a))for(let m=0,v=u.length;m<v;m++){const g=u[m],p=a[g.materialIndex],x=Math.max(g.start,f.start),_=Math.min(o.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,w=_;y<w;y+=3){const C=o.getX(y),A=o.getX(y+1),L=o.getX(y+2);n=Ro(this,p,e,i,c,h,d,C,A,L),n&&(n.faceIndex=Math.floor(y/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),v=Math.min(o.count,f.start+f.count);for(let g=m,p=v;g<p;g+=3){const x=o.getX(g),_=o.getX(g+1),y=o.getX(g+2);n=Ro(this,a,e,i,c,h,d,x,_,y),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(a))for(let m=0,v=u.length;m<v;m++){const g=u[m],p=a[g.materialIndex],x=Math.max(g.start,f.start),_=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let y=x,w=_;y<w;y+=3){const C=y,A=y+1,L=y+2;n=Ro(this,p,e,i,c,h,d,C,A,L),n&&(n.faceIndex=Math.floor(y/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let g=m,p=v;g<p;g+=3){const x=g,_=g+1,y=g+2;n=Ro(this,a,e,i,c,h,d,x,_,y),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}}function bv(r,e,t,i,n,s,a,o){let l;if(e.side===Qt?l=i.intersectTriangle(a,s,n,!0,o):l=i.intersectTriangle(n,s,a,e.side===En,o),l===null)return null;Lo.copy(o),Lo.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(Lo);return c<t.near||c>t.far?null:{distance:c,point:Lo.clone(),object:r}}function Ro(r,e,t,i,n,s,a,o,l,c){r.getVertexPosition(o,To),r.getVertexPosition(l,Co),r.getVertexPosition(c,Ao);const h=bv(r,e,t,i,To,Co,Ao,Wu);if(h){const d=new M;hn.getBarycoord(Wu,To,Co,Ao,d),n&&(h.uv=hn.getInterpolatedAttribute(n,o,l,c,d,new Z)),s&&(h.uv1=hn.getInterpolatedAttribute(s,o,l,c,d,new Z)),a&&(h.normal=hn.getInterpolatedAttribute(a,o,l,c,d,new M),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const u={a:o,b:l,c,normal:new M,materialIndex:0};hn.getNormal(To,Co,Ao,u.normal),h.face=u,h.barycoord=d}return h}class Zn extends At{constructor(e=1,t=1,i=1,n=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:a};const o=this;n=Math.floor(n),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],h=[],d=[];let u=0,f=0;m("z","y","x",-1,-1,i,t,e,a,s,0),m("z","y","x",1,-1,i,t,-e,a,s,1),m("x","z","y",1,1,e,i,t,n,a,2),m("x","z","y",1,-1,e,i,-t,n,a,3),m("x","y","z",1,-1,e,t,i,n,s,4),m("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new _t(c,3)),this.setAttribute("normal",new _t(h,3)),this.setAttribute("uv",new _t(d,2));function m(v,g,p,x,_,y,w,C,A,L,b){const S=y/A,N=w/L,O=y/2,k=w/2,H=C/2,j=A+1,B=L+1;let K=0,W=0;const oe=new M;for(let me=0;me<B;me++){const _e=me*N-k;for(let ze=0;ze<j;ze++){const Je=ze*S-O;oe[v]=Je*x,oe[g]=_e*_,oe[p]=H,c.push(oe.x,oe.y,oe.z),oe[v]=0,oe[g]=0,oe[p]=C>0?1:-1,h.push(oe.x,oe.y,oe.z),d.push(ze/A),d.push(1-me/L),K+=1}}for(let me=0;me<L;me++)for(let _e=0;_e<A;_e++){const ze=u+_e+j*me,Je=u+_e+j*(me+1),X=u+(_e+1)+j*(me+1),re=u+(_e+1)+j*me;l.push(ze,Je,re),l.push(Je,X,re),W+=6}o.addGroup(f,W,b),f+=W,u+=K}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ir(r){const e={};for(const t in r){e[t]={};for(const i in r[t]){const n=r[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function mi(r){const e={};for(let t=0;t<r.length;t++){const i=Ir(r[t]);for(const n in i)e[n]=i[n]}return e}function Mv(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function nm(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:nt.workingColorSpace}const Ad={clone:Ir,merge:mi};var Sv=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,wv=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ot extends yi{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Sv,this.fragmentShader=wv,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ir(e.uniforms),this.uniformsGroups=Mv(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const a=this.uniforms[n].value;a&&a.isTexture?t.uniforms[n]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[n]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[n]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[n]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[n]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[n]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[n]={type:"m4",value:a.toArray()}:t.uniforms[n]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}let Pd=class extends yt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ne,this.projectionMatrix=new Ne,this.projectionMatrixInverse=new Ne,this.coordinateSystem=Vn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const ts=new M,ju=new Z,$u=new Z;class Jt extends Pd{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Nr*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ma*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Nr*2*Math.atan(Math.tan(Ma*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){ts.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ts.x,ts.y).multiplyScalar(-e/ts.z),ts.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(ts.x,ts.y).multiplyScalar(-e/ts.z)}getViewSize(e,t){return this.getViewBounds(e,ju,$u),t.subVectors($u,ju)}setViewOffset(e,t,i,n,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ma*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*n/l,t-=a.offsetY*i/c,n*=a.width/l,i*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const or=-90,lr=1;class Ev extends yt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Jt(or,lr,e,t);n.layers=this.layers,this.add(n);const s=new Jt(or,lr,e,t);s.layers=this.layers,this.add(s);const a=new Jt(or,lr,e,t);a.layers=this.layers,this.add(a);const o=new Jt(or,lr,e,t);o.layers=this.layers,this.add(o);const l=new Jt(or,lr,e,t);l.layers=this.layers,this.add(l);const c=new Jt(or,lr,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,a,o,l]=t;for(const c of t)this.remove(c);if(e===Vn)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===gl)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,l,c,h]=this.children,d=e.getRenderTarget(),u=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,a),e.setRenderTarget(i,2,n),e.render(t,o),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(d,u,f),e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class sm extends Ht{constructor(e=[],t=Ar,i,n,s,a,o,l,c,h){super(e,t,i,n,s,a,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Tv extends kt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new sm(n),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new Zn(5,5,5),s=new Ot({name:"CubemapFromEquirect",uniforms:Ir(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Qt,blending:ei});s.uniforms.tEquirect.value=t;const a=new st(n,s),o=t.minFilter;return t.minFilter===Gn&&(t.minFilter=Xt),new Ev(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,n);e.setRenderTarget(s)}}class qi extends yt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Cv={type:"move"};class vc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new qi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new qi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new M,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new M),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new qi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new M,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new M),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const v of e.hand.values()){const g=t.getJointPose(v,i),p=this._getHandJoint(c,v);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const h=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],u=h.position.distanceTo(d.position),f=.02,m=.005;c.inputState.pinching&&u>f+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=f-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Cv)))}return o!==null&&(o.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new qi;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class za extends yt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ui,this.environmentIntensity=1,this.environmentRotation=new Ui,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class rm{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Uh,this.updateRanges=[],this.version=0,this.uuid=Qi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Qi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Qi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const pi=new M;class Wn{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)pi.fromBufferAttribute(this,t),pi.applyMatrix4(e),this.setXYZ(t,pi.x,pi.y,pi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)pi.fromBufferAttribute(this,t),pi.applyNormalMatrix(e),this.setXYZ(t,pi.x,pi.y,pi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)pi.fromBufferAttribute(this,t),pi.transformDirection(e),this.setXYZ(t,pi.x,pi.y,pi.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=cn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=dt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=cn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=cn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=cn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=cn(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),i=dt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),i=dt(i,this.array),n=dt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),i=dt(i,this.array),n=dt(n,this.array),s=dt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new Ct(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Wn(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const Do=new M,Xu=new M;class No extends yt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let s;for(s=0;s<n.length&&!(t<n[s].distance);s++);return n.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Do.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Do);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Do.setFromMatrixPosition(e.matrixWorld),Xu.setFromMatrixPosition(this.matrixWorld);const i=Do.distanceTo(Xu)/e.zoom;t[0].object.visible=!0;let n,s;for(n=1,s=t.length;n<s;n++){let a=t[n].distance;if(t[n].object.visible&&(a-=a*t[n].hysteresis),i>=a)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<s;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,s=i.length;n<s;n++){const a=i[n];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const qu=new M,Zu=new Ke,Yu=new Ke,Av=new M,Ku=new Ne,Io=new M,yc=new Pi,Ju=new Ne,_c=new ro;class Pv extends st{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Su,this.bindMatrix=new Ne,this.bindMatrixInverse=new Ne,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new qt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Io),this.boundingBox.expandByPoint(Io)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Pi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Io),this.boundingSphere.expandByPoint(Io)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yc.copy(this.boundingSphere),yc.applyMatrix4(n),e.ray.intersectsSphere(yc)!==!1&&(Ju.copy(n).invert(),_c.copy(e.ray).applyMatrix4(Ju),!(this.boundingBox!==null&&_c.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,_c)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ke,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Su?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===A0?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;Zu.fromBufferAttribute(n.attributes.skinIndex,e),Yu.fromBufferAttribute(n.attributes.skinWeight,e),qu.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=Yu.getComponent(s);if(a!==0){const o=Zu.getComponent(s);Ku.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),t.addScaledVector(Av.copy(qu).applyMatrix4(Ku),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class am extends yt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ld extends Ht{constructor(e=null,t=1,i=1,n,s,a,o,l,c=Bt,h=Bt,d,u){super(null,a,o,l,c,h,n,s,d,u),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Qu=new Ne,Lv=new Ne;class Rd{constructor(e=[],t=[]){this.uuid=Qi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new Ne)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new Ne;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const o=e[s]?e[s].matrixWorld:Lv;Qu.multiplyMatrices(o,t[s]),Qu.toArray(i,s*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new Rd(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new Ld(t,e,e,vi,Xi);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const s=e.bones[i];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new am),this.bones.push(a),this.boneInverses.push(new Ne().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,s=t.length;n<s;n++){const a=t[n];e.bones.push(a.uuid);const o=i[n];e.boneInverses.push(o.toArray())}return e}}class Fh extends Ct{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const cr=new Ne,ef=new Ne,ko=[],tf=new qt,Rv=new Ne,da=new st,ua=new Pi;class ao extends st{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Fh(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,Rv)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new qt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,cr),tf.copy(e.boundingBox).applyMatrix4(cr),this.boundingBox.union(tf)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Pi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,cr),ua.copy(e.boundingSphere).applyMatrix4(cr),this.boundingSphere.union(ua)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,s=i.length+1,a=e*s+1;for(let o=0;o<i.length;o++)i[o]=n[a+o]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(da.geometry=this.geometry,da.material=this.material,da.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ua.copy(this.boundingSphere),ua.applyMatrix4(i),e.ray.intersectsSphere(ua)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,cr),ef.multiplyMatrices(i,cr),da.matrixWorld=ef,da.raycast(e,ko);for(let a=0,o=ko.length;a<o;a++){const l=ko[a];l.instanceId=s,l.object=this,t.push(l)}ko.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Fh(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new Ld(new Float32Array(n*this.count),n,this.count,no,Xi));const s=this.morphTexture.source.data.data;let a=0;for(let c=0;c<i.length;c++)a+=i[c];const o=this.geometry.morphTargetsRelative?1:1-a,l=n*e;s[l]=o,s.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const xc=new M,Dv=new M,Nv=new qe;class ss{constructor(e=new M(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=xc.subVectors(i,t).cross(Dv.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(xc),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Nv.getNormalMatrix(e),n=this.coplanarPoint(xc).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ts=new Pi,Oo=new M;class Ul{constructor(e=new ss,t=new ss,i=new ss,n=new ss,s=new ss,a=new ss){this.planes=[e,t,i,n,s,a]}set(e,t,i,n,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(n),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Vn){const i=this.planes,n=e.elements,s=n[0],a=n[1],o=n[2],l=n[3],c=n[4],h=n[5],d=n[6],u=n[7],f=n[8],m=n[9],v=n[10],g=n[11],p=n[12],x=n[13],_=n[14],y=n[15];if(i[0].setComponents(l-s,u-c,g-f,y-p).normalize(),i[1].setComponents(l+s,u+c,g+f,y+p).normalize(),i[2].setComponents(l+a,u+h,g+m,y+x).normalize(),i[3].setComponents(l-a,u-h,g-m,y-x).normalize(),i[4].setComponents(l-o,u-d,g-v,y-_).normalize(),t===Vn)i[5].setComponents(l+o,u+d,g+v,y+_).normalize();else if(t===gl)i[5].setComponents(o,d,v,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ts.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ts.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ts)}intersectsSprite(e){return Ts.center.set(0,0,0),Ts.radius=.7071067811865476,Ts.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ts)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Oo.x=n.normal.x>0?e.max.x:e.min.x,Oo.y=n.normal.y>0?e.max.y:e.min.y,Oo.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Oo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class oo extends yi{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new fe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const vl=new M,yl=new M,nf=new Ne,fa=new ro,zo=new Pi,bc=new M,sf=new M;class ea extends yt{constructor(e=new At,t=new oo){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)vl.fromBufferAttribute(t,n-1),yl.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=vl.distanceTo(yl);e.setAttribute("lineDistance",new _t(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),zo.copy(i.boundingSphere),zo.applyMatrix4(n),zo.radius+=s,e.ray.intersectsSphere(zo)===!1)return;nf.copy(n).invert(),fa.copy(e.ray).applyMatrix4(nf);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=this.isLineSegments?2:1,h=i.index,u=i.attributes.position;if(h!==null){const f=Math.max(0,a.start),m=Math.min(h.count,a.start+a.count);for(let v=f,g=m-1;v<g;v+=c){const p=h.getX(v),x=h.getX(v+1),_=Uo(this,e,fa,l,p,x,v);_&&t.push(_)}if(this.isLineLoop){const v=h.getX(m-1),g=h.getX(f),p=Uo(this,e,fa,l,v,g,m-1);p&&t.push(p)}}else{const f=Math.max(0,a.start),m=Math.min(u.count,a.start+a.count);for(let v=f,g=m-1;v<g;v+=c){const p=Uo(this,e,fa,l,v,v+1,v);p&&t.push(p)}if(this.isLineLoop){const v=Uo(this,e,fa,l,m-1,f,m-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=n.length;s<a;s++){const o=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function Uo(r,e,t,i,n,s,a){const o=r.geometry.attributes.position;if(vl.fromBufferAttribute(o,n),yl.fromBufferAttribute(o,s),t.distanceSqToSegment(vl,yl,bc,sf)>i)return;bc.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(bc);if(!(c<e.near||c>e.far))return{distance:c,point:sf.clone().applyMatrix4(r.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:r}}const rf=new M,af=new M;class om extends ea{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)rf.fromBufferAttribute(t,n),af.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+rf.distanceTo(af);e.setAttribute("lineDistance",new _t(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Iv extends ea{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class lm extends yi{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const of=new Ne,Bh=new ro,Fo=new Pi,Bo=new M;class cm extends yt{constructor(e=new At,t=new lm){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Fo.copy(i.boundingSphere),Fo.applyMatrix4(n),Fo.radius+=s,e.ray.intersectsSphere(Fo)===!1)return;of.copy(n).invert(),Bh.copy(e.ray).applyMatrix4(of);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=i.index,d=i.attributes.position;if(c!==null){const u=Math.max(0,a.start),f=Math.min(c.count,a.start+a.count);for(let m=u,v=f;m<v;m++){const g=c.getX(m);Bo.fromBufferAttribute(d,g),lf(Bo,g,l,n,e,t,this)}}else{const u=Math.max(0,a.start),f=Math.min(d.count,a.start+a.count);for(let m=u,v=f;m<v;m++)Bo.fromBufferAttribute(d,m),lf(Bo,m,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=n.length;s<a;s++){const o=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function lf(r,e,t,i,n,s,a){const o=Bh.distanceSqToPoint(r);if(o<t){const l=new M;Bh.closestPointToPoint(r,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class hm extends Ht{constructor(e,t,i,n,s,a,o,l,c){super(e,t,i,n,s,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Dd extends Ht{constructor(e,t,i=ms,n,s,a,o=Bt,l=Bt,c,h=Na,d=1){if(h!==Na&&h!==Rr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const u={width:e,height:t,depth:d};super(u,n,s,a,o,l,h,i,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Td(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class kr extends At{constructor(e=1,t=1,i=1,n=32,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const h=[],d=[],u=[],f=[];let m=0;const v=[],g=i/2;let p=0;x(),a===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new _t(d,3)),this.setAttribute("normal",new _t(u,3)),this.setAttribute("uv",new _t(f,2));function x(){const y=new M,w=new M;let C=0;const A=(t-e)/i;for(let L=0;L<=s;L++){const b=[],S=L/s,N=S*(t-e)+e;for(let O=0;O<=n;O++){const k=O/n,H=k*l+o,j=Math.sin(H),B=Math.cos(H);w.x=N*j,w.y=-S*i+g,w.z=N*B,d.push(w.x,w.y,w.z),y.set(j,A,B).normalize(),u.push(y.x,y.y,y.z),f.push(k,1-S),b.push(m++)}v.push(b)}for(let L=0;L<n;L++)for(let b=0;b<s;b++){const S=v[b][L],N=v[b+1][L],O=v[b+1][L+1],k=v[b][L+1];(e>0||b!==0)&&(h.push(S,N,k),C+=3),(t>0||b!==s-1)&&(h.push(N,O,k),C+=3)}c.addGroup(p,C,0),p+=C}function _(y){const w=m,C=new Z,A=new M;let L=0;const b=y===!0?e:t,S=y===!0?1:-1;for(let O=1;O<=n;O++)d.push(0,g*S,0),u.push(0,S,0),f.push(.5,.5),m++;const N=m;for(let O=0;O<=n;O++){const H=O/n*l+o,j=Math.cos(H),B=Math.sin(H);A.x=b*B,A.y=g*S,A.z=b*j,d.push(A.x,A.y,A.z),u.push(0,S,0),C.x=j*.5+.5,C.y=B*.5*S+.5,f.push(C.x,C.y),m++}for(let O=0;O<n;O++){const k=w+O,H=N+O;y===!0?h.push(H,H+1,k):h.push(H+1,H,k),L+=3}c.addGroup(p,L,y===!0?1:2),p+=L}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new kr(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lo extends kr{constructor(e=1,t=1,i=32,n=1,s=!1,a=0,o=Math.PI*2){super(0,e,t,i,n,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new lo(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Nd extends At{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const s=[],a=[];o(n),c(i),h(),this.setAttribute("position",new _t(s,3)),this.setAttribute("normal",new _t(s.slice(),3)),this.setAttribute("uv",new _t(a,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function o(x){const _=new M,y=new M,w=new M;for(let C=0;C<t.length;C+=3)f(t[C+0],_),f(t[C+1],y),f(t[C+2],w),l(_,y,w,x)}function l(x,_,y,w){const C=w+1,A=[];for(let L=0;L<=C;L++){A[L]=[];const b=x.clone().lerp(y,L/C),S=_.clone().lerp(y,L/C),N=C-L;for(let O=0;O<=N;O++)O===0&&L===C?A[L][O]=b:A[L][O]=b.clone().lerp(S,O/N)}for(let L=0;L<C;L++)for(let b=0;b<2*(C-L)-1;b++){const S=Math.floor(b/2);b%2===0?(u(A[L][S+1]),u(A[L+1][S]),u(A[L][S])):(u(A[L][S+1]),u(A[L+1][S+1]),u(A[L+1][S]))}}function c(x){const _=new M;for(let y=0;y<s.length;y+=3)_.x=s[y+0],_.y=s[y+1],_.z=s[y+2],_.normalize().multiplyScalar(x),s[y+0]=_.x,s[y+1]=_.y,s[y+2]=_.z}function h(){const x=new M;for(let _=0;_<s.length;_+=3){x.x=s[_+0],x.y=s[_+1],x.z=s[_+2];const y=g(x)/2/Math.PI+.5,w=p(x)/Math.PI+.5;a.push(y,1-w)}m(),d()}function d(){for(let x=0;x<a.length;x+=6){const _=a[x+0],y=a[x+2],w=a[x+4],C=Math.max(_,y,w),A=Math.min(_,y,w);C>.9&&A<.1&&(_<.2&&(a[x+0]+=1),y<.2&&(a[x+2]+=1),w<.2&&(a[x+4]+=1))}}function u(x){s.push(x.x,x.y,x.z)}function f(x,_){const y=x*3;_.x=e[y+0],_.y=e[y+1],_.z=e[y+2]}function m(){const x=new M,_=new M,y=new M,w=new M,C=new Z,A=new Z,L=new Z;for(let b=0,S=0;b<s.length;b+=9,S+=6){x.set(s[b+0],s[b+1],s[b+2]),_.set(s[b+3],s[b+4],s[b+5]),y.set(s[b+6],s[b+7],s[b+8]),C.set(a[S+0],a[S+1]),A.set(a[S+2],a[S+3]),L.set(a[S+4],a[S+5]),w.copy(x).add(_).add(y).divideScalar(3);const N=g(w);v(C,S+0,x,N),v(A,S+2,_,N),v(L,S+4,y,N)}}function v(x,_,y,w){w<0&&x.x===1&&(a[_]=x.x-1),y.x===0&&y.z===0&&(a[_]=w/2/Math.PI+.5)}function g(x){return Math.atan2(x.z,-x.x)}function p(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nd(e.vertices,e.indices,e.radius,e.details)}}class An{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(n),t.push(s),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const i=this.getLengths();let n=0;const s=i.length;let a;t?a=t:a=e*i[s-1];let o=0,l=s-1,c;for(;o<=l;)if(n=Math.floor(o+(l-o)/2),c=i[n]-a,c<0)o=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===a)return n/(s-1);const h=i[n],u=i[n+1]-h,f=(a-h)/u;return(n+f)/(s-1)}getTangent(e,t){let n=e-1e-4,s=e+1e-4;n<0&&(n=0),s>1&&(s=1);const a=this.getPoint(n),o=this.getPoint(s),l=t||(a.isVector2?new Z:new M);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){const i=new M,n=[],s=[],a=[],o=new M,l=new Ne;for(let f=0;f<=e;f++){const m=f/e;n[f]=this.getTangentAt(m,new M)}s[0]=new M,a[0]=new M;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),d=Math.abs(n[0].y),u=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),d<=c&&(c=d,i.set(0,1,0)),u<=c&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],o),a[0].crossVectors(n[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),a[f]=a[f-1].clone(),o.crossVectors(n[f-1],n[f]),o.length()>Number.EPSILON){o.normalize();const m=Math.acos(Ye(n[f-1].dot(n[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(o,m))}a[f].crossVectors(n[f],s[f])}if(t===!0){let f=Math.acos(Ye(s[0].dot(s[e]),-1,1));f/=e,n[0].dot(o.crossVectors(s[0],s[e]))>0&&(f=-f);for(let m=1;m<=e;m++)s[m].applyMatrix4(l.makeRotationAxis(n[m],f*m)),a[m].crossVectors(n[m],s[m])}return{tangents:n,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Id extends An{constructor(e=0,t=0,i=1,n=1,s=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t=new Z){const i=t,n=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(a?s=0:s=n),this.aClockwise===!0&&!a&&(s===n?s=-n:s=s-n);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),d=Math.sin(this.aRotation),u=l-this.aX,f=c-this.aY;l=u*h-f*d+this.aX,c=u*d+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class kv extends Id{constructor(e,t,i,n,s,a){super(e,t,i,i,n,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function kd(){let r=0,e=0,t=0,i=0;function n(s,a,o,l){r=s,e=o,t=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){n(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,h,d){let u=(a-s)/c-(o-s)/(c+h)+(o-a)/h,f=(o-a)/h-(l-a)/(h+d)+(l-o)/d;u*=h,f*=h,n(a,o,u,f)},calc:function(s){const a=s*s,o=a*s;return r+e*s+t*a+i*o}}}const Ho=new M,Mc=new kd,Sc=new kd,wc=new kd;class Od extends An{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new M){const i=t,n=this.points,s=n.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let c,h;this.closed||o>0?c=n[(o-1)%s]:(Ho.subVectors(n[0],n[1]).add(n[0]),c=Ho);const d=n[o%s],u=n[(o+1)%s];if(this.closed||o+2<s?h=n[(o+2)%s]:(Ho.subVectors(n[s-1],n[s-2]).add(n[s-1]),h=Ho),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let m=Math.pow(c.distanceToSquared(d),f),v=Math.pow(d.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(h),f);v<1e-4&&(v=1),m<1e-4&&(m=v),g<1e-4&&(g=v),Mc.initNonuniformCatmullRom(c.x,d.x,u.x,h.x,m,v,g),Sc.initNonuniformCatmullRom(c.y,d.y,u.y,h.y,m,v,g),wc.initNonuniformCatmullRom(c.z,d.z,u.z,h.z,m,v,g)}else this.curveType==="catmullrom"&&(Mc.initCatmullRom(c.x,d.x,u.x,h.x,this.tension),Sc.initCatmullRom(c.y,d.y,u.y,h.y,this.tension),wc.initCatmullRom(c.z,d.z,u.z,h.z,this.tension));return i.set(Mc.calc(l),Sc.calc(l),wc.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new M().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function cf(r,e,t,i,n){const s=(i-e)*.5,a=(n-t)*.5,o=r*r,l=r*o;return(2*t-2*i+s+a)*l+(-3*t+3*i-2*s-a)*o+s*r+t}function Ov(r,e){const t=1-r;return t*t*e}function zv(r,e){return 2*(1-r)*r*e}function Uv(r,e){return r*r*e}function wa(r,e,t,i){return Ov(r,e)+zv(r,t)+Uv(r,i)}function Fv(r,e){const t=1-r;return t*t*t*e}function Bv(r,e){const t=1-r;return 3*t*t*r*e}function Hv(r,e){return 3*(1-r)*r*r*e}function Gv(r,e){return r*r*r*e}function Ea(r,e,t,i,n){return Fv(r,e)+Bv(r,t)+Hv(r,i)+Gv(r,n)}class dm extends An{constructor(e=new Z,t=new Z,i=new Z,n=new Z){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new Z){const i=t,n=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Ea(e,n.x,s.x,a.x,o.x),Ea(e,n.y,s.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class um extends An{constructor(e=new M,t=new M,i=new M,n=new M){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new M){const i=t,n=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Ea(e,n.x,s.x,a.x,o.x),Ea(e,n.y,s.y,a.y,o.y),Ea(e,n.z,s.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class fm extends An{constructor(e=new Z,t=new Z){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Z){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Z){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Vv extends An{constructor(e=new M,t=new M){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new M){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new M){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class pm extends An{constructor(e=new Z,t=new Z,i=new Z){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Z){const i=t,n=this.v0,s=this.v1,a=this.v2;return i.set(wa(e,n.x,s.x,a.x),wa(e,n.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Fl extends An{constructor(e=new M,t=new M,i=new M){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new M){const i=t,n=this.v0,s=this.v1,a=this.v2;return i.set(wa(e,n.x,s.x,a.x),wa(e,n.y,s.y,a.y),wa(e,n.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class mm extends An{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Z){const i=t,n=this.points,s=(n.length-1)*e,a=Math.floor(s),o=s-a,l=n[a===0?a:a-1],c=n[a],h=n[a>n.length-2?n.length-1:a+1],d=n[a>n.length-3?n.length-1:a+2];return i.set(cf(o,l.x,c.x,h.x,d.x),cf(o,l.y,c.y,h.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new Z().fromArray(n))}return this}}var _l=Object.freeze({__proto__:null,ArcCurve:kv,CatmullRomCurve3:Od,CubicBezierCurve:dm,CubicBezierCurve3:um,EllipseCurve:Id,LineCurve:fm,LineCurve3:Vv,QuadraticBezierCurve:pm,QuadraticBezierCurve3:Fl,SplineCurve:mm});class Wv extends An{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new _l[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const a=n[s]-i,o=this.curves[s],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const a=s[n],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new _l[n.type]().fromJSON(n))}return this}}class Hh extends Wv{constructor(e){super(),this.type="Path",this.currentPoint=new Z,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new fm(this.currentPoint.clone(),new Z(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const s=new pm(this.currentPoint.clone(),new Z(e,t),new Z(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,s,a){const o=new dm(this.currentPoint.clone(),new Z(e,t),new Z(i,n),new Z(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new mm(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,i,n,s,a),this}absarc(e,t,i,n,s,a){return this.absellipse(e,t,i,i,n,s,a),this}ellipse(e,t,i,n,s,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,s,a,o,l),this}absellipse(e,t,i,n,s,a,o,l){const c=new Id(e,t,i,n,s,a,o,l);if(this.curves.length>0){const d=c.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ll extends Hh{constructor(e){super(e),this.uuid=Qi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new Hh().fromJSON(n))}return this}}function jv(r,e,t=2){const i=e&&e.length,n=i?e[0]*t:r.length;let s=gm(r,0,n,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c;if(i&&(s=Yv(r,e,s,t)),r.length>80*t){o=1/0,l=1/0;let h=-1/0,d=-1/0;for(let u=t;u<n;u+=t){const f=r[u],m=r[u+1];f<o&&(o=f),m<l&&(l=m),f>h&&(h=f),m>d&&(d=m)}c=Math.max(h-o,d-l),c=c!==0?32767/c:0}return Ua(s,a,t,o,l,c,0),a}function gm(r,e,t,i,n){let s;if(n===oy(r,e,t,i)>0)for(let a=e;a<t;a+=i)s=hf(a/i|0,r[a],r[a+1],s);else for(let a=t-i;a>=e;a-=i)s=hf(a/i|0,r[a],r[a+1],s);return s&&Or(s,s.next)&&(Ba(s),s=s.next),s}function js(r,e){if(!r)return r;e||(e=r);let t=r,i;do if(i=!1,!t.steiner&&(Or(t,t.next)||Rt(t.prev,t,t.next)===0)){if(Ba(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Ua(r,e,t,i,n,s,a){if(!r)return;!a&&s&&ty(r,i,n,s);let o=r;for(;r.prev!==r.next;){const l=r.prev,c=r.next;if(s?Xv(r,i,n,s):$v(r)){e.push(l.i,r.i,c.i),Ba(r),r=c.next,o=c.next;continue}if(r=c,r===o){a?a===1?(r=qv(js(r),e),Ua(r,e,t,i,n,s,2)):a===2&&Zv(r,e,t,i,n,s):Ua(js(r),e,t,i,n,s,1);break}}}function $v(r){const e=r.prev,t=r,i=r.next;if(Rt(e,t,i)>=0)return!1;const n=e.x,s=t.x,a=i.x,o=e.y,l=t.y,c=i.y,h=Math.min(n,s,a),d=Math.min(o,l,c),u=Math.max(n,s,a),f=Math.max(o,l,c);let m=i.next;for(;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&ya(n,o,s,l,a,c,m.x,m.y)&&Rt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function Xv(r,e,t,i){const n=r.prev,s=r,a=r.next;if(Rt(n,s,a)>=0)return!1;const o=n.x,l=s.x,c=a.x,h=n.y,d=s.y,u=a.y,f=Math.min(o,l,c),m=Math.min(h,d,u),v=Math.max(o,l,c),g=Math.max(h,d,u),p=Gh(f,m,e,t,i),x=Gh(v,g,e,t,i);let _=r.prevZ,y=r.nextZ;for(;_&&_.z>=p&&y&&y.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=m&&_.y<=g&&_!==n&&_!==a&&ya(o,h,l,d,c,u,_.x,_.y)&&Rt(_.prev,_,_.next)>=0||(_=_.prevZ,y.x>=f&&y.x<=v&&y.y>=m&&y.y<=g&&y!==n&&y!==a&&ya(o,h,l,d,c,u,y.x,y.y)&&Rt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;_&&_.z>=p;){if(_.x>=f&&_.x<=v&&_.y>=m&&_.y<=g&&_!==n&&_!==a&&ya(o,h,l,d,c,u,_.x,_.y)&&Rt(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;y&&y.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=m&&y.y<=g&&y!==n&&y!==a&&ya(o,h,l,d,c,u,y.x,y.y)&&Rt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function qv(r,e){let t=r;do{const i=t.prev,n=t.next.next;!Or(i,n)&&ym(i,t,t.next,n)&&Fa(i,n)&&Fa(n,i)&&(e.push(i.i,t.i,n.i),Ba(t),Ba(t.next),t=r=n),t=t.next}while(t!==r);return js(t)}function Zv(r,e,t,i,n,s){let a=r;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&sy(a,o)){let l=_m(a,o);a=js(a,a.next),l=js(l,l.next),Ua(a,e,t,i,n,s,0),Ua(l,e,t,i,n,s,0);return}o=o.next}a=a.next}while(a!==r)}function Yv(r,e,t,i){const n=[];for(let s=0,a=e.length;s<a;s++){const o=e[s]*i,l=s<a-1?e[s+1]*i:r.length,c=gm(r,o,l,i,!1);c===c.next&&(c.steiner=!0),n.push(ny(c))}n.sort(Kv);for(let s=0;s<n.length;s++)t=Jv(n[s],t);return t}function Kv(r,e){let t=r.x-e.x;if(t===0&&(t=r.y-e.y,t===0)){const i=(r.next.y-r.y)/(r.next.x-r.x),n=(e.next.y-e.y)/(e.next.x-e.x);t=i-n}return t}function Jv(r,e){const t=Qv(r,e);if(!t)return e;const i=_m(t,r);return js(i,i.next),js(t,t.next)}function Qv(r,e){let t=e;const i=r.x,n=r.y;let s=-1/0,a;if(Or(r,t))return t;do{if(Or(r,t.next))return t.next;if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){const d=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=i&&d>s&&(s=d,a=t.x<t.next.x?t:t.next,d===i))return a}t=t.next}while(t!==e);if(!a)return null;const o=a,l=a.x,c=a.y;let h=1/0;t=a;do{if(i>=t.x&&t.x>=l&&i!==t.x&&vm(n<c?i:s,n,l,c,n<c?s:i,n,t.x,t.y)){const d=Math.abs(n-t.y)/(i-t.x);Fa(t,r)&&(d<h||d===h&&(t.x>a.x||t.x===a.x&&ey(a,t)))&&(a=t,h=d)}t=t.next}while(t!==o);return a}function ey(r,e){return Rt(r.prev,r,e.prev)<0&&Rt(e.next,r,r.next)<0}function ty(r,e,t,i){let n=r;do n.z===0&&(n.z=Gh(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,iy(n)}function iy(r){let e,t=1;do{let i=r,n;r=null;let s=null;for(e=0;i;){e++;let a=i,o=0;for(let c=0;c<t&&(o++,a=a.nextZ,!!a);c++);let l=t;for(;o>0||l>0&&a;)o!==0&&(l===0||!a||i.z<=a.z)?(n=i,i=i.nextZ,o--):(n=a,a=a.nextZ,l--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;i=a}s.nextZ=null,t*=2}while(e>1);return r}function Gh(r,e,t,i,n){return r=(r-t)*n|0,e=(e-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function ny(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function vm(r,e,t,i,n,s,a,o){return(n-a)*(e-o)>=(r-a)*(s-o)&&(r-a)*(i-o)>=(t-a)*(e-o)&&(t-a)*(s-o)>=(n-a)*(i-o)}function ya(r,e,t,i,n,s,a,o){return!(r===a&&e===o)&&vm(r,e,t,i,n,s,a,o)}function sy(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!ry(r,e)&&(Fa(r,e)&&Fa(e,r)&&ay(r,e)&&(Rt(r.prev,r,e.prev)||Rt(r,e.prev,e))||Or(r,e)&&Rt(r.prev,r,r.next)>0&&Rt(e.prev,e,e.next)>0)}function Rt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Or(r,e){return r.x===e.x&&r.y===e.y}function ym(r,e,t,i){const n=Vo(Rt(r,e,t)),s=Vo(Rt(r,e,i)),a=Vo(Rt(t,i,r)),o=Vo(Rt(t,i,e));return!!(n!==s&&a!==o||n===0&&Go(r,t,e)||s===0&&Go(r,i,e)||a===0&&Go(t,r,i)||o===0&&Go(t,e,i))}function Go(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Vo(r){return r>0?1:r<0?-1:0}function ry(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&ym(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Fa(r,e){return Rt(r.prev,r,r.next)<0?Rt(r,e,r.next)>=0&&Rt(r,r.prev,e)>=0:Rt(r,e,r.prev)<0||Rt(r,r.next,e)<0}function ay(r,e){let t=r,i=!1;const n=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==r);return i}function _m(r,e){const t=Vh(r.i,r.x,r.y),i=Vh(e.i,e.x,e.y),n=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function hf(r,e,t,i){const n=Vh(r,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ba(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Vh(r,e,t){return{i:r,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function oy(r,e,t,i){let n=0;for(let s=e,a=t-i;s<t;s+=i)n+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return n}class ly{static triangulate(e,t,i=2){return jv(e,t,i)}}class zs{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return i*.5}static isClockWise(e){return zs.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];df(e),uf(i,e);let a=e.length;t.forEach(df);for(let l=0;l<t.length;l++)n.push(a),a+=t[l].length,uf(i,t[l]);const o=ly.triangulate(i,n);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function df(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function uf(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class zd extends At{constructor(e=new ll([new Z(.5,.5),new Z(-.5,.5),new Z(-.5,-.5),new Z(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],s=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new _t(n,3)),this.setAttribute("uv",new _t(s,2)),this.computeVertexNormals();function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,d=t.depth!==void 0?t.depth:1;let u=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,m=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const p=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:cy;let _,y=!1,w,C,A,L;p&&(_=p.getSpacedPoints(h),y=!0,u=!1,w=p.computeFrenetFrames(h,!1),C=new M,A=new M,L=new M),u||(g=0,f=0,m=0,v=0);const b=o.extractPoints(c);let S=b.shape;const N=b.holes;if(!zs.isClockWise(S)){S=S.reverse();for(let R=0,le=N.length;R<le;R++){const te=N[R];zs.isClockWise(te)&&(N[R]=te.reverse())}}function k(R){const te=10000000000000001e-36;let ce=R[0];for(let Y=1;Y<=R.length;Y++){const be=Y%R.length,ne=R[be],Me=ne.x-ce.x,Ve=ne.y-ce.y,D=Me*Me+Ve*Ve,T=Math.max(Math.abs(ne.x),Math.abs(ne.y),Math.abs(ce.x),Math.abs(ce.y)),F=te*T*T;if(D<=F){R.splice(be,1),Y--;continue}ce=ne}}k(S),N.forEach(k);const H=N.length,j=S;for(let R=0;R<H;R++){const le=N[R];S=S.concat(le)}function B(R,le,te){return le||console.error("THREE.ExtrudeGeometry: vec does not exist"),R.clone().addScaledVector(le,te)}const K=S.length;function W(R,le,te){let ce,Y,be;const ne=R.x-le.x,Me=R.y-le.y,Ve=te.x-R.x,D=te.y-R.y,T=ne*ne+Me*Me,F=ne*D-Me*Ve;if(Math.abs(F)>Number.EPSILON){const $=Math.sqrt(T),Q=Math.sqrt(Ve*Ve+D*D),q=le.x-Me/$,Pe=le.y+ne/$,de=te.x-D/Q,Te=te.y+Ve/Q,Le=((de-q)*D-(Te-Pe)*Ve)/(ne*D-Me*Ve);ce=q+ne*Le-R.x,Y=Pe+Me*Le-R.y;const ee=ce*ce+Y*Y;if(ee<=2)return new Z(ce,Y);be=Math.sqrt(ee/2)}else{let $=!1;ne>Number.EPSILON?Ve>Number.EPSILON&&($=!0):ne<-Number.EPSILON?Ve<-Number.EPSILON&&($=!0):Math.sign(Me)===Math.sign(D)&&($=!0),$?(ce=-Me,Y=ne,be=Math.sqrt(T)):(ce=ne,Y=Me,be=Math.sqrt(T/2))}return new Z(ce/be,Y/be)}const oe=[];for(let R=0,le=j.length,te=le-1,ce=R+1;R<le;R++,te++,ce++)te===le&&(te=0),ce===le&&(ce=0),oe[R]=W(j[R],j[te],j[ce]);const me=[];let _e,ze=oe.concat();for(let R=0,le=H;R<le;R++){const te=N[R];_e=[];for(let ce=0,Y=te.length,be=Y-1,ne=ce+1;ce<Y;ce++,be++,ne++)be===Y&&(be=0),ne===Y&&(ne=0),_e[ce]=W(te[ce],te[be],te[ne]);me.push(_e),ze=ze.concat(_e)}let Je;if(g===0)Je=zs.triangulateShape(j,N);else{const R=[],le=[];for(let te=0;te<g;te++){const ce=te/g,Y=f*Math.cos(ce*Math.PI/2),be=m*Math.sin(ce*Math.PI/2)+v;for(let ne=0,Me=j.length;ne<Me;ne++){const Ve=B(j[ne],oe[ne],be);je(Ve.x,Ve.y,-Y),ce===0&&R.push(Ve)}for(let ne=0,Me=H;ne<Me;ne++){const Ve=N[ne];_e=me[ne];const D=[];for(let T=0,F=Ve.length;T<F;T++){const $=B(Ve[T],_e[T],be);je($.x,$.y,-Y),ce===0&&D.push($)}ce===0&&le.push(D)}}Je=zs.triangulateShape(R,le)}const X=Je.length,re=m+v;for(let R=0;R<K;R++){const le=u?B(S[R],ze[R],re):S[R];y?(A.copy(w.normals[0]).multiplyScalar(le.x),C.copy(w.binormals[0]).multiplyScalar(le.y),L.copy(_[0]).add(A).add(C),je(L.x,L.y,L.z)):je(le.x,le.y,0)}for(let R=1;R<=h;R++)for(let le=0;le<K;le++){const te=u?B(S[le],ze[le],re):S[le];y?(A.copy(w.normals[R]).multiplyScalar(te.x),C.copy(w.binormals[R]).multiplyScalar(te.y),L.copy(_[R]).add(A).add(C),je(L.x,L.y,L.z)):je(te.x,te.y,d/h*R)}for(let R=g-1;R>=0;R--){const le=R/g,te=f*Math.cos(le*Math.PI/2),ce=m*Math.sin(le*Math.PI/2)+v;for(let Y=0,be=j.length;Y<be;Y++){const ne=B(j[Y],oe[Y],ce);je(ne.x,ne.y,d+te)}for(let Y=0,be=N.length;Y<be;Y++){const ne=N[Y];_e=me[Y];for(let Me=0,Ve=ne.length;Me<Ve;Me++){const D=B(ne[Me],_e[Me],ce);y?je(D.x,D.y+_[h-1].y,_[h-1].x+te):je(D.x,D.y,d+te)}}}Re(),ye();function Re(){const R=n.length/3;if(u){let le=0,te=K*le;for(let ce=0;ce<X;ce++){const Y=Je[ce];ke(Y[2]+te,Y[1]+te,Y[0]+te)}le=h+g*2,te=K*le;for(let ce=0;ce<X;ce++){const Y=Je[ce];ke(Y[0]+te,Y[1]+te,Y[2]+te)}}else{for(let le=0;le<X;le++){const te=Je[le];ke(te[2],te[1],te[0])}for(let le=0;le<X;le++){const te=Je[le];ke(te[0]+K*h,te[1]+K*h,te[2]+K*h)}}i.addGroup(R,n.length/3-R,0)}function ye(){const R=n.length/3;let le=0;De(j,le),le+=j.length;for(let te=0,ce=N.length;te<ce;te++){const Y=N[te];De(Y,le),le+=Y.length}i.addGroup(R,n.length/3-R,1)}function De(R,le){let te=R.length;for(;--te>=0;){const ce=te;let Y=te-1;Y<0&&(Y=R.length-1);for(let be=0,ne=h+g*2;be<ne;be++){const Me=K*be,Ve=K*(be+1),D=le+ce+Me,T=le+Y+Me,F=le+Y+Ve,$=le+ce+Ve;Mt(D,T,F,$)}}}function je(R,le,te){l.push(R),l.push(le),l.push(te)}function ke(R,le,te){rt(R),rt(le),rt(te);const ce=n.length/3,Y=x.generateTopUV(i,n,ce-3,ce-2,ce-1);$e(Y[0]),$e(Y[1]),$e(Y[2])}function Mt(R,le,te,ce){rt(R),rt(le),rt(ce),rt(le),rt(te),rt(ce);const Y=n.length/3,be=x.generateSideWallUV(i,n,Y-6,Y-3,Y-2,Y-1);$e(be[0]),$e(be[1]),$e(be[3]),$e(be[1]),$e(be[2]),$e(be[3])}function rt(R){n.push(l[R*3+0]),n.push(l[R*3+1]),n.push(l[R*3+2])}function $e(R){s.push(R.x),s.push(R.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return hy(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=t[e.shapes[s]];i.push(o)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new _l[n.type]().fromJSON(n)),new zd(i,e.options)}}const cy={generateTopUV:function(r,e,t,i,n){const s=e[t*3],a=e[t*3+1],o=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new Z(s,a),new Z(o,l),new Z(c,h)]},generateSideWallUV:function(r,e,t,i,n,s){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],d=e[i*3+2],u=e[n*3],f=e[n*3+1],m=e[n*3+2],v=e[s*3],g=e[s*3+1],p=e[s*3+2];return Math.abs(o-h)<Math.abs(a-c)?[new Z(a,1-l),new Z(c,1-d),new Z(u,1-m),new Z(v,1-p)]:[new Z(o,1-l),new Z(h,1-d),new Z(f,1-m),new Z(g,1-p)]}};function hy(r,e,t){if(t.shapes=[],Array.isArray(r))for(let i=0,n=r.length;i<n;i++){const s=r[i];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ys extends At{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,a=t/2,o=Math.floor(i),l=Math.floor(n),c=o+1,h=l+1,d=e/o,u=t/l,f=[],m=[],v=[],g=[];for(let p=0;p<h;p++){const x=p*u-a;for(let _=0;_<c;_++){const y=_*d-s;m.push(y,-x,0),v.push(0,0,1),g.push(_/o),g.push(1-p/l)}}for(let p=0;p<l;p++)for(let x=0;x<o;x++){const _=x+c*p,y=x+c*(p+1),w=x+1+c*(p+1),C=x+1+c*p;f.push(_,y,C),f.push(y,w,C)}this.setIndex(f),this.setAttribute("position",new _t(m,3)),this.setAttribute("normal",new _t(v,3)),this.setAttribute("uv",new _t(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ys(e.width,e.height,e.widthSegments,e.heightSegments)}}class Sn extends At{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let c=0;const h=[],d=new M,u=new M,f=[],m=[],v=[],g=[];for(let p=0;p<=i;p++){const x=[],_=p/i;let y=0;p===0&&a===0?y=.5/t:p===i&&l===Math.PI&&(y=-.5/t);for(let w=0;w<=t;w++){const C=w/t;d.x=-e*Math.cos(n+C*s)*Math.sin(a+_*o),d.y=e*Math.cos(a+_*o),d.z=e*Math.sin(n+C*s)*Math.sin(a+_*o),m.push(d.x,d.y,d.z),u.copy(d).normalize(),v.push(u.x,u.y,u.z),g.push(C+y,1-_),x.push(c++)}h.push(x)}for(let p=0;p<i;p++)for(let x=0;x<t;x++){const _=h[p][x+1],y=h[p][x],w=h[p+1][x],C=h[p+1][x+1];(p!==0||a>0)&&f.push(_,y,C),(p!==i-1||l<Math.PI)&&f.push(y,w,C)}this.setIndex(f),this.setAttribute("position",new _t(m,3)),this.setAttribute("normal",new _t(v,3)),this.setAttribute("uv",new _t(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Sn(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ud extends Nd{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ud(e.radius,e.detail)}}class Bl extends At{constructor(e=new Fl(new M(-1,-1,0),new M(-1,1,0),new M(1,1,0)),t=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new M,l=new M,c=new Z;let h=new M;const d=[],u=[],f=[],m=[];v(),this.setIndex(m),this.setAttribute("position",new _t(d,3)),this.setAttribute("normal",new _t(u,3)),this.setAttribute("uv",new _t(f,2));function v(){for(let _=0;_<t;_++)g(_);g(s===!1?t:0),x(),p()}function g(_){h=e.getPointAt(_/t,h);const y=a.normals[_],w=a.binormals[_];for(let C=0;C<=n;C++){const A=C/n*Math.PI*2,L=Math.sin(A),b=-Math.cos(A);l.x=b*y.x+L*w.x,l.y=b*y.y+L*w.y,l.z=b*y.z+L*w.z,l.normalize(),u.push(l.x,l.y,l.z),o.x=h.x+i*l.x,o.y=h.y+i*l.y,o.z=h.z+i*l.z,d.push(o.x,o.y,o.z)}}function p(){for(let _=1;_<=t;_++)for(let y=1;y<=n;y++){const w=(n+1)*(_-1)+(y-1),C=(n+1)*_+(y-1),A=(n+1)*_+y,L=(n+1)*(_-1)+y;m.push(w,C,L),m.push(C,A,L)}}function x(){for(let _=0;_<=t;_++)for(let y=0;y<=n;y++)c.x=_/t,c.y=y/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Bl(new _l[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class dy extends At{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new M,s=new M;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const d=l[c],u=d.start,f=d.count;for(let m=u,v=u+f;m<v;m+=3)for(let g=0;g<3;g++){const p=o.getX(m+g),x=o.getX(m+(g+1)%3);n.fromBufferAttribute(a,p),s.fromBufferAttribute(a,x),ff(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const h=3*o+c,d=3*o+(c+1)%3;n.fromBufferAttribute(a,h),s.fromBufferAttribute(a,d),ff(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new _t(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function ff(r,e,t){const i=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}class Ci extends yi{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=so,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class fn extends Ci{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Z(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ye(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new fe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new fe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new fe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class xm extends yi{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new fe(16777215),this.specular=new fe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=so,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=Ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uy extends yi{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=so,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class bm extends yi{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=so,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ui,this.combine=Ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Mm extends yi{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=qn,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class fy extends yi{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class py extends oo{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Wo(r,e){return!r||r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function my(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function gy(r){function e(n,s){return r[n]-r[s]}const t=r.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function pf(r,e,t){const i=r.length,n=new r.constructor(i);for(let s=0,a=0;a!==i;++s){const o=t[s]*e;for(let l=0;l!==e;++l)n[a++]=r[o+l]}return n}function Sm(r,e,t,i){let n=1,s=r[0];for(;s!==void 0&&s[i]===void 0;)s=r[n++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),t.push(...a)),s=r[n++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[n++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),t.push(a)),s=r[n++];while(s!==void 0)}class co{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];i:{e:{let a;t:{n:if(!(e<n)){for(let o=i+2;;){if(n===void 0){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===o)break;if(s=n,n=t[++i],e<n)break e}a=t.length;break t}if(!(e>=s)){const o=t[1];e<o&&(i=2,s=o);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=s,s=t[--i-1],e>=s)break e}a=i,i=0;break t}break i}for(;i<a;){const o=i+a>>>1;e<t[o]?a=o:i=o+1}if(n=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let a=0;a!==n;++a)t[a]=i[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class vy extends co{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:wu,endingEnd:wu}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,a=e+1,o=n[s],l=n[a];if(o===void 0)switch(this.getSettings_().endingStart){case Eu:s=e,o=2*t-i;break;case Tu:s=n.length-2,o=t+n[s]-n[s+1];break;default:s=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Eu:a=e,l=2*i-t;break;case Tu:a=1,l=i+n[1]-n[0];break;default:a=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=a*h}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,f=this._weightNext,m=(i-t)/(n-t),v=m*m,g=v*m,p=-u*g+2*u*v-u*m,x=(1+u)*g+(-1.5-2*u)*v+(-.5+u)*m+1,_=(-1-f)*g+(1.5+f)*v+.5*m,y=f*g-f*v;for(let w=0;w!==o;++w)s[w]=p*a[h+w]+x*a[c+w]+_*a[l+w]+y*a[d+w];return s}}class yy extends co{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(i-t)/(n-t),d=1-h;for(let u=0;u!==o;++u)s[u]=a[c+u]*d+a[l+u]*h;return s}}class _y extends co{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class pn{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Wo(t,this.TimeBufferType),this.values=Wo(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Wo(e.times,Array),values:Wo(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new _y(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new yy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new vy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ia:t=this.InterpolantFactoryMethodDiscrete;break;case ka:t=this.InterpolantFactoryMethodLinear;break;case Yl:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ia;case this.InterpolantFactoryMethodLinear:return ka;case this.InterpolantFactoryMethodSmooth:return Yl}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,a=n-1;for(;s!==n&&i[s]<e;)++s;for(;a!==-1&&i[a]>t;)--a;if(++a,s!==0||a!==n){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=i.slice(s,a),this.values=this.values.slice(s*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(n!==void 0&&my(n))for(let o=0,l=n.length;o!==l;++o){const c=n[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===Yl,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const c=e[o],h=e[o+1];if(c!==h&&(o!==1||c!==e[0]))if(n)l=!0;else{const d=o*i,u=d-i,f=d+i;for(let m=0;m!==i;++m){const v=t[d+m];if(v!==t[u+m]||v!==t[f+m]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const d=o*i,u=a*i;for(let f=0;f!==i;++f)t[u+f]=t[d+f]}++a}}if(s>0){e[a]=e[s];for(let o=s*i,l=a*i,c=0;c!==i;++c)t[l+c]=t[o+c];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}pn.prototype.ValueTypeName="";pn.prototype.TimeBufferType=Float32Array;pn.prototype.ValueBufferType=Float32Array;pn.prototype.DefaultInterpolation=ka;class ta extends pn{constructor(e,t,i){super(e,t,i)}}ta.prototype.ValueTypeName="bool";ta.prototype.ValueBufferType=Array;ta.prototype.DefaultInterpolation=Ia;ta.prototype.InterpolantFactoryMethodLinear=void 0;ta.prototype.InterpolantFactoryMethodSmooth=void 0;class wm extends pn{constructor(e,t,i,n){super(e,t,i,n)}}wm.prototype.ValueTypeName="color";class zr extends pn{constructor(e,t,i,n){super(e,t,i,n)}}zr.prototype.ValueTypeName="number";class xy extends co{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(i-t)/(n-t);let c=e*o;for(let h=c+o;c!==h;c+=4)en.slerpFlat(s,0,a,c-o,a,c,l);return s}}class Ur extends pn{constructor(e,t,i,n){super(e,t,i,n)}InterpolantFactoryMethodLinear(e){return new xy(this.times,this.values,this.getValueSize(),e)}}Ur.prototype.ValueTypeName="quaternion";Ur.prototype.InterpolantFactoryMethodSmooth=void 0;class ia extends pn{constructor(e,t,i){super(e,t,i)}}ia.prototype.ValueTypeName="string";ia.prototype.ValueBufferType=Array;ia.prototype.DefaultInterpolation=Ia;ia.prototype.InterpolantFactoryMethodLinear=void 0;ia.prototype.InterpolantFactoryMethodSmooth=void 0;class Fr extends pn{constructor(e,t,i,n){super(e,t,i,n)}}Fr.prototype.ValueTypeName="vector";class by{constructor(e="",t=-1,i=[],n=P0){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Qi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let a=0,o=i.length;a!==o;++a)t.push(Sy(i[a]).scale(n));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=i.length;s!==a;++s)t.push(pn.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const s=t.length,a=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const h=gy(l);l=pf(l,1,h),c=pf(c,1,h),!n&&l[0]===0&&(l.push(s),c.push(c[0])),a.push(new zr(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(s);if(h&&h.length>1){const d=h[1];let u=n[d];u||(n[d]=u=[]),u.push(c)}}const a=[];for(const o in n)a.push(this.CreateFromMorphTargetSequence(o,n[o],t,i));return a}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(d,u,f,m,v){if(f.length!==0){const g=[],p=[];Sm(f,g,p,m),g.length!==0&&v.push(new d(u,g,p))}},n=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let d=0;d<c.length;d++){const u=c[d].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let m;for(m=0;m<u.length;m++)if(u[m].morphTargets)for(let v=0;v<u[m].morphTargets.length;v++)f[u[m].morphTargets[v]]=-1;for(const v in f){const g=[],p=[];for(let x=0;x!==u[m].morphTargets.length;++x){const _=u[m];g.push(_.time),p.push(_.morphTarget===v?1:0)}n.push(new zr(".morphTargetInfluence["+v+"]",g,p))}l=f.length*a}else{const f=".bones["+t[d].name+"]";i(Fr,f+".position",u,"pos",n),i(Ur,f+".quaternion",u,"rot",n),i(Fr,f+".scale",u,"scl",n)}}return n.length===0?null:new this(s,l,n,o)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function My(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return zr;case"vector":case"vector2":case"vector3":case"vector4":return Fr;case"color":return wm;case"quaternion":return Ur;case"bool":case"boolean":return ta;case"string":return ia}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Sy(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=My(r.type);if(r.times===void 0){const t=[],i=[];Sm(r.keys,t,i,"value"),r.times=t,r.values=i}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const as={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class wy{constructor(e,t,i){const n=this;let s=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){o++,s===!1&&n.onStart!==void 0&&n.onStart(h,a,o),s=!0},this.itemEnd=function(h){a++,n.onProgress!==void 0&&n.onProgress(h,a,o),a===o&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,d){return c.push(h,d),this},this.removeHandler=function(h){const d=c.indexOf(h);return d!==-1&&c.splice(d,2),this},this.getHandler=function(h){for(let d=0,u=c.length;d<u;d+=2){const f=c[d],m=c[d+1];if(f.global&&(f.lastIndex=0),f.test(h))return m}return null}}}const Ey=new wy;class Xs{constructor(e){this.manager=e!==void 0?e:Ey,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Xs.DEFAULT_MATERIAL_NAME="__DEFAULT";const kn={};class Ty extends Error{constructor(e,t){super(e),this.response=t}}class Fd extends Xs{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=as.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(kn[e]!==void 0){kn[e].push({onLoad:t,onProgress:i,onError:n});return}kn[e]=[],kn[e].push({onLoad:t,onProgress:i,onError:n});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=kn[e],d=c.body.getReader(),u=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=u?parseInt(u):0,m=f!==0;let v=0;const g=new ReadableStream({start(p){x();function x(){d.read().then(({done:_,value:y})=>{if(_)p.close();else{v+=y.byteLength;const w=new ProgressEvent("progress",{lengthComputable:m,loaded:v,total:f});for(let C=0,A=h.length;C<A;C++){const L=h[C];L.onProgress&&L.onProgress(w)}p.enqueue(y),x()}},_=>{p.error(_)})}}});return new Response(g)}else throw new Ty(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o==="")return c.text();{const d=/charset="?([^;"\s]*)"?/i.exec(o),u=d&&d[1]?d[1].toLowerCase():void 0,f=new TextDecoder(u);return c.arrayBuffer().then(m=>f.decode(m))}}}).then(c=>{as.add(e,c);const h=kn[e];delete kn[e];for(let d=0,u=h.length;d<u;d++){const f=h[d];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=kn[e];if(h===void 0)throw this.manager.itemError(e),c;delete kn[e];for(let d=0,u=h.length;d<u;d++){const f=h[d];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Cy extends Xs{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=as.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=Oa("img");function l(){h(),as.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(d){h(),n&&n(d),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class Em extends Xs{constructor(e){super(e)}load(e,t,i,n){const s=new Ht,a=new Cy(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},i,n),s}}class Hl extends yt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new fe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const Ec=new Ne,mf=new M,gf=new M;class Bd{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Z(512,512),this.mapType=Gt,this.map=null,this.mapPass=null,this.matrix=new Ne,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ul,this._frameExtents=new Z(1,1),this._viewportCount=1,this._viewports=[new Ke(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;mf.setFromMatrixPosition(e.matrixWorld),t.position.copy(mf),gf.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(gf),t.updateMatrixWorld(),Ec.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ec),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Ec)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Ay extends Bd{constructor(){super(new Jt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,i=Nr*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height*this.aspect,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Py extends Hl{constructor(e,t,i=0,n=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(yt.DEFAULT_UP),this.updateMatrix(),this.target=new yt,this.distance=i,this.angle=n,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new Ay}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const vf=new Ne,pa=new M,Tc=new M;class Ly extends Bd{constructor(){super(new Jt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Z(4,2),this._viewportCount=6,this._viewports=[new Ke(2,1,1,1),new Ke(0,1,1,1),new Ke(3,1,1,1),new Ke(1,1,1,1),new Ke(3,0,1,1),new Ke(1,0,1,1)],this._cubeDirections=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this._cubeUps=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),pa.setFromMatrixPosition(e.matrixWorld),i.position.copy(pa),Tc.copy(i.position),Tc.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Tc),i.updateMatrixWorld(),n.makeTranslation(-pa.x,-pa.y,-pa.z),vf.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vf)}}class Tm extends Hl{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Ly}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ho extends Pd{constructor(e=-1,t=1,i=1,n=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class Ry extends Bd{constructor(){super(new ho(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Cm extends Hl{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(yt.DEFAULT_UP),this.updateMatrix(),this.target=new yt,this.shadow=new Ry}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Dy extends Hl{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Ta{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Ny extends At{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}const Cc=new WeakMap;class Iy extends Xs{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=as.get(e);if(a!==void 0){if(s.manager.itemStart(e),a.then){a.then(c=>{if(Cc.has(a)===!0)n&&n(Cc.get(a)),s.manager.itemError(e),s.manager.itemEnd(e);else return t&&t(c),s.manager.itemEnd(e),c});return}return setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader;const l=fetch(e,o).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return as.add(e,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){n&&n(c),Cc.set(l,c),as.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});as.add(e,l),s.manager.itemStart(e)}}class ky extends Jt{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Oy{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=yf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=yf();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function yf(){return performance.now()}const Hd="\\[\\]\\.:\\/",zy=new RegExp("["+Hd+"]","g"),Gd="[^"+Hd+"]",Uy="[^"+Hd.replace("\\.","")+"]",Fy=/((?:WC+[\/:])*)/.source.replace("WC",Gd),By=/(WCOD+)?/.source.replace("WCOD",Uy),Hy=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Gd),Gy=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Gd),Vy=new RegExp("^"+Fy+By+Hy+Gy+"$"),Wy=["material","materials","bones","map"];class jy{constructor(e,t,i){const n=i||ut.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class ut{constructor(e,t,i){this.path=t,this.parsedPath=i||ut.parseTrackName(t),this.node=ut.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new ut.Composite(e,t,i):new ut(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(zy,"")}static parseTrackName(e){const t=Vy.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);Wy.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===t||o.uuid===t)return o;const l=i(o.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let s=t.propertyIndex;if(e||(e=ut.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[n];if(a===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?o=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ut.Composite=jy;ut.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};ut.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};ut.prototype.GetterByBindingType=[ut.prototype._getValue_direct,ut.prototype._getValue_array,ut.prototype._getValue_arrayElement,ut.prototype._getValue_toArray];ut.prototype.SetterByBindingTypeAndVersioning=[[ut.prototype._setValue_direct,ut.prototype._setValue_direct_setNeedsUpdate,ut.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ut.prototype._setValue_array,ut.prototype._setValue_array_setNeedsUpdate,ut.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ut.prototype._setValue_arrayElement,ut.prototype._setValue_arrayElement_setNeedsUpdate,ut.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ut.prototype._setValue_fromArray,ut.prototype._setValue_fromArray_setNeedsUpdate,ut.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class xe{constructor(e){this.value=e}clone(){return new xe(this.value.clone===void 0?this.value:this.value.clone())}}class Wh extends rm{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const _f=new Ne;class xf{constructor(e,t,i=0,n=1/0){this.ray=new ro(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Cd,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return _f.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(_f),this}intersectObject(e,t=!0,i=[]){return jh(e,this,i,t),i.sort(bf),i}intersectObjects(e,t=!0,i=[]){for(let n=0,s=e.length;n<s;n++)jh(e[n],this,i,t);return i.sort(bf),i}}function bf(r,e){return r.distance-e.distance}function jh(r,e,t,i){let n=!0;if(r.layers.test(e.layers)&&r.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const s=r.children;for(let a=0,o=s.length;a<o;a++)jh(s[a],e,t,!0)}}const Mf=new M,jo=new M;class $y{constructor(e=new M,t=new M){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Mf.subVectors(e,this.start),jo.subVectors(this.end,this.start);const i=jo.dot(jo);let s=jo.dot(Mf)/i;return t&&(s=Ye(s,0,1)),s}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class Xy{constructor(){this.type="ShapePath",this.color=new fe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Hh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,s,a){return this.currentPath.bezierCurveTo(e,t,i,n,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(p){const x=[];for(let _=0,y=p.length;_<y;_++){const w=p[_],C=new ll;C.curves=w.curves,x.push(C)}return x}function i(p,x){const _=x.length;let y=!1;for(let w=_-1,C=0;C<_;w=C++){let A=x[w],L=x[C],b=L.x-A.x,S=L.y-A.y;if(Math.abs(S)>Number.EPSILON){if(S<0&&(A=x[C],b=-b,L=x[w],S=-S),p.y<A.y||p.y>L.y)continue;if(p.y===A.y){if(p.x===A.x)return!0}else{const N=S*(p.x-A.x)-b*(p.y-A.y);if(N===0)return!0;if(N<0)continue;y=!y}}else{if(p.y!==A.y)continue;if(L.x<=p.x&&p.x<=A.x||A.x<=p.x&&p.x<=L.x)return!0}}return y}const n=zs.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,o,l;const c=[];if(s.length===1)return o=s[0],l=new ll,l.curves=o.curves,c.push(l),c;let h=!n(s[0].getPoints());h=e?!h:h;const d=[],u=[];let f=[],m=0,v;u[m]=void 0,f[m]=[];for(let p=0,x=s.length;p<x;p++)o=s[p],v=o.getPoints(),a=n(v),a=e?!a:a,a?(!h&&u[m]&&m++,u[m]={s:new ll,p:v},u[m].s.curves=o.curves,h&&m++,f[m]=[]):f[m].push({h:o,p:v[0]});if(!u[0])return t(s);if(u.length>1){let p=!1,x=0;for(let _=0,y=u.length;_<y;_++)d[_]=[];for(let _=0,y=u.length;_<y;_++){const w=f[_];for(let C=0;C<w.length;C++){const A=w[C];let L=!0;for(let b=0;b<u.length;b++)i(A.p,u[b].p)&&(_!==b&&x++,L?(L=!1,d[b].push(A)):p=!0);L&&d[_].push(A)}}x>0&&p===!1&&(f=d)}let g;for(let p=0,x=u.length;p<x;p++){l=u[p].s,c.push(l),g=f[p];for(let _=0,y=g.length;_<y;_++)l.holes.push(g[_].h)}return c}}class qy extends Cn{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function Sf(r,e,t,i){const n=Zy(i);switch(t){case Xp:return r*e;case no:return r*e/n.components*n.byteLength;case bd:return r*e/n.components*n.byteLength;case Md:return r*e*2/n.components*n.byteLength;case Sd:return r*e*2/n.components*n.byteLength;case qp:return r*e*3/n.components*n.byteLength;case vi:return r*e*4/n.components*n.byteLength;case wd:return r*e*4/n.components*n.byteLength;case nl:case sl:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case rl:case al:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case uh:case ph:return Math.max(r,16)*Math.max(e,8)/4;case dh:case fh:return Math.max(r,8)*Math.max(e,8)/2;case mh:case gh:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case vh:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case yh:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case _h:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case xh:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case bh:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Mh:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Sh:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case wh:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Eh:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Th:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Ch:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Ah:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Ph:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Lh:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Rh:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case ol:case Dh:case Nh:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Zp:case Ih:return Math.ceil(r/4)*Math.ceil(e/4)*8;case kh:case Oh:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function Zy(r){switch(r){case Gt:case Wp:return{byteLength:1,components:1};case Da:case jp:case io:return{byteLength:2,components:1};case _d:case xd:return{byteLength:2,components:4};case ms:case yd:case Xi:return{byteLength:4,components:1};case $p:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:to}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=to);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Am(){let r=null,e=!1,t=null,i=null;function n(s,a){t(s,a),i=r.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=r.requestAnimationFrame(n),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function Yy(r){const e=new WeakMap;function t(o,l){const c=o.array,h=o.usage,d=c.byteLength,u=r.createBuffer();r.bindBuffer(l,u),r.bufferData(l,c,h),o.onUploadCallback();let f;if(c instanceof Float32Array)f=r.FLOAT;else if(c instanceof Uint16Array)o.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=r.SHORT;else if(c instanceof Uint32Array)f=r.UNSIGNED_INT;else if(c instanceof Int32Array)f=r.INT;else if(c instanceof Int8Array)f=r.BYTE;else if(c instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:u,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version,size:d}}function i(o,l,c){const h=l.array,d=l.updateRanges;if(r.bindBuffer(c,o),d.length===0)r.bufferSubData(c,0,h);else{d.sort((f,m)=>f.start-m.start);let u=0;for(let f=1;f<d.length;f++){const m=d[u],v=d[f];v.start<=m.start+m.count+1?m.count=Math.max(m.count,v.start+v.count-m.start):(++u,d[u]=v)}d.length=u+1;for(let f=0,m=d.length;f<m;f++){const v=d[f];r.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function s(o){o.isInterleavedBufferAttribute&&(o=o.data);const l=e.get(o);l&&(r.deleteBuffer(l.buffer),e.delete(o))}function a(o,l){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const h=e.get(o);(!h||h.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const c=e.get(o);if(c===void 0)e.set(o,t(o,l));else if(c.version<o.version){if(c.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,o,l),c.version=o.version}}return{get:n,remove:s,update:a}}var Ky=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Jy=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Qy=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,e_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,t_=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,i_=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,n_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT )
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN )
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,s_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,r_=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,a_=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,o_=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,l_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,c_=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,h_=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,d_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,u_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,f_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,p_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,m_=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,g_=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,v_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,y_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,__=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,x_=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,b_=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,M_=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,S_=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,w_=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,E_=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,T_=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,C_="gl_FragColor = linearToOutputTexel( gl_FragColor );",A_=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,P_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,L_=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif

#endif`,R_=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,D_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS

		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,N_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,I_=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,k_=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,O_=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,z_=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,U_=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,F_=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,B_=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,H_=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,G_=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,V_=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,W_=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,j_=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,$_=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,X_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,q_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Z_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Y_=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,K_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,J_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Q_=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ex=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,tx=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ix=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,nx=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,sx=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,rx=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ax=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ox=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,lx=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,cx=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,hx=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,dx=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ux=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,fx=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,px=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,mx=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,gx=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,vx=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,yx=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,_x=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,xx=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,bx=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Mx=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Sx=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,wx=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Ex=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Tx=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Cx=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Ax=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Px=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Lx=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Rx=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Dx=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;

		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Nx=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Ix=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,kx=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Ox=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,zx=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Ux=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Fx=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Bx=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Hx=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Gx=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Vx=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Wx=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,jx=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,$x=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Xx=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,qx=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Zx=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Yx=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Kx=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Jx=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Qx=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,eb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,tb=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ib=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,nb=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,sb=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,rb=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,ab=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,ob=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,lb=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,cb=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,hb=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,db=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ub=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fb=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pb=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,mb=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gb=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,vb=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,yb=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_b=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xb=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,bb=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Mb=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Sb=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wb=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Eb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Tb=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cb=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ab=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Pb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ze={alphahash_fragment:Ky,alphahash_pars_fragment:Jy,alphamap_fragment:Qy,alphamap_pars_fragment:e_,alphatest_fragment:t_,alphatest_pars_fragment:i_,aomap_fragment:n_,aomap_pars_fragment:s_,batching_pars_vertex:r_,batching_vertex:a_,begin_vertex:o_,beginnormal_vertex:l_,bsdfs:c_,iridescence_fragment:h_,bumpmap_pars_fragment:d_,clipping_planes_fragment:u_,clipping_planes_pars_fragment:f_,clipping_planes_pars_vertex:p_,clipping_planes_vertex:m_,color_fragment:g_,color_pars_fragment:v_,color_pars_vertex:y_,color_vertex:__,common:x_,cube_uv_reflection_fragment:b_,defaultnormal_vertex:M_,displacementmap_pars_vertex:S_,displacementmap_vertex:w_,emissivemap_fragment:E_,emissivemap_pars_fragment:T_,colorspace_fragment:C_,colorspace_pars_fragment:A_,envmap_fragment:P_,envmap_common_pars_fragment:L_,envmap_pars_fragment:R_,envmap_pars_vertex:D_,envmap_physical_pars_fragment:V_,envmap_vertex:N_,fog_vertex:I_,fog_pars_vertex:k_,fog_fragment:O_,fog_pars_fragment:z_,gradientmap_pars_fragment:U_,lightmap_pars_fragment:F_,lights_lambert_fragment:B_,lights_lambert_pars_fragment:H_,lights_pars_begin:G_,lights_toon_fragment:W_,lights_toon_pars_fragment:j_,lights_phong_fragment:$_,lights_phong_pars_fragment:X_,lights_physical_fragment:q_,lights_physical_pars_fragment:Z_,lights_fragment_begin:Y_,lights_fragment_maps:K_,lights_fragment_end:J_,logdepthbuf_fragment:Q_,logdepthbuf_pars_fragment:ex,logdepthbuf_pars_vertex:tx,logdepthbuf_vertex:ix,map_fragment:nx,map_pars_fragment:sx,map_particle_fragment:rx,map_particle_pars_fragment:ax,metalnessmap_fragment:ox,metalnessmap_pars_fragment:lx,morphinstance_vertex:cx,morphcolor_vertex:hx,morphnormal_vertex:dx,morphtarget_pars_vertex:ux,morphtarget_vertex:fx,normal_fragment_begin:px,normal_fragment_maps:mx,normal_pars_fragment:gx,normal_pars_vertex:vx,normal_vertex:yx,normalmap_pars_fragment:_x,clearcoat_normal_fragment_begin:xx,clearcoat_normal_fragment_maps:bx,clearcoat_pars_fragment:Mx,iridescence_pars_fragment:Sx,opaque_fragment:wx,packing:Ex,premultiplied_alpha_fragment:Tx,project_vertex:Cx,dithering_fragment:Ax,dithering_pars_fragment:Px,roughnessmap_fragment:Lx,roughnessmap_pars_fragment:Rx,shadowmap_pars_fragment:Dx,shadowmap_pars_vertex:Nx,shadowmap_vertex:Ix,shadowmask_pars_fragment:kx,skinbase_vertex:Ox,skinning_pars_vertex:zx,skinning_vertex:Ux,skinnormal_vertex:Fx,specularmap_fragment:Bx,specularmap_pars_fragment:Hx,tonemapping_fragment:Gx,tonemapping_pars_fragment:Vx,transmission_fragment:Wx,transmission_pars_fragment:jx,uv_pars_fragment:$x,uv_pars_vertex:Xx,uv_vertex:qx,worldpos_vertex:Zx,background_vert:Yx,background_frag:Kx,backgroundCube_vert:Jx,backgroundCube_frag:Qx,cube_vert:eb,cube_frag:tb,depth_vert:ib,depth_frag:nb,distanceRGBA_vert:sb,distanceRGBA_frag:rb,equirect_vert:ab,equirect_frag:ob,linedashed_vert:lb,linedashed_frag:cb,meshbasic_vert:hb,meshbasic_frag:db,meshlambert_vert:ub,meshlambert_frag:fb,meshmatcap_vert:pb,meshmatcap_frag:mb,meshnormal_vert:gb,meshnormal_frag:vb,meshphong_vert:yb,meshphong_frag:_b,meshphysical_vert:xb,meshphysical_frag:bb,meshtoon_vert:Mb,meshtoon_frag:Sb,points_vert:wb,points_frag:Eb,shadow_vert:Tb,shadow_frag:Cb,sprite_vert:Ab,sprite_frag:Pb},he={common:{diffuse:{value:new fe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new qe},alphaMap:{value:null},alphaMapTransform:{value:new qe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new qe}},envmap:{envMap:{value:null},envMapRotation:{value:new qe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new qe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new qe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new qe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new qe},normalScale:{value:new Z(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new qe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new qe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new qe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new qe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new qe},alphaTest:{value:0},uvTransform:{value:new qe}},sprite:{diffuse:{value:new fe(16777215)},opacity:{value:1},center:{value:new Z(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new qe},alphaMap:{value:null},alphaMapTransform:{value:new qe},alphaTest:{value:0}}},Mi={basic:{uniforms:mi([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.fog]),vertexShader:Ze.meshbasic_vert,fragmentShader:Ze.meshbasic_frag},lambert:{uniforms:mi([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new fe(0)}}]),vertexShader:Ze.meshlambert_vert,fragmentShader:Ze.meshlambert_frag},phong:{uniforms:mi([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new fe(0)},specular:{value:new fe(1118481)},shininess:{value:30}}]),vertexShader:Ze.meshphong_vert,fragmentShader:Ze.meshphong_frag},standard:{uniforms:mi([he.common,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.roughnessmap,he.metalnessmap,he.fog,he.lights,{emissive:{value:new fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag},toon:{uniforms:mi([he.common,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.gradientmap,he.fog,he.lights,{emissive:{value:new fe(0)}}]),vertexShader:Ze.meshtoon_vert,fragmentShader:Ze.meshtoon_frag},matcap:{uniforms:mi([he.common,he.bumpmap,he.normalmap,he.displacementmap,he.fog,{matcap:{value:null}}]),vertexShader:Ze.meshmatcap_vert,fragmentShader:Ze.meshmatcap_frag},points:{uniforms:mi([he.points,he.fog]),vertexShader:Ze.points_vert,fragmentShader:Ze.points_frag},dashed:{uniforms:mi([he.common,he.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ze.linedashed_vert,fragmentShader:Ze.linedashed_frag},depth:{uniforms:mi([he.common,he.displacementmap]),vertexShader:Ze.depth_vert,fragmentShader:Ze.depth_frag},normal:{uniforms:mi([he.common,he.bumpmap,he.normalmap,he.displacementmap,{opacity:{value:1}}]),vertexShader:Ze.meshnormal_vert,fragmentShader:Ze.meshnormal_frag},sprite:{uniforms:mi([he.sprite,he.fog]),vertexShader:Ze.sprite_vert,fragmentShader:Ze.sprite_frag},background:{uniforms:{uvTransform:{value:new qe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ze.background_vert,fragmentShader:Ze.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new qe}},vertexShader:Ze.backgroundCube_vert,fragmentShader:Ze.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ze.cube_vert,fragmentShader:Ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ze.equirect_vert,fragmentShader:Ze.equirect_frag},distanceRGBA:{uniforms:mi([he.common,he.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ze.distanceRGBA_vert,fragmentShader:Ze.distanceRGBA_frag},shadow:{uniforms:mi([he.lights,he.fog,{color:{value:new fe(0)},opacity:{value:1}}]),vertexShader:Ze.shadow_vert,fragmentShader:Ze.shadow_frag}};Mi.physical={uniforms:mi([Mi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new qe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new qe},clearcoatNormalScale:{value:new Z(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new qe},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new qe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new qe},sheen:{value:0},sheenColor:{value:new fe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new qe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new qe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new qe},transmissionSamplerSize:{value:new Z},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new qe},attenuationDistance:{value:0},attenuationColor:{value:new fe(0)},specularColor:{value:new fe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new qe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new qe},anisotropyVector:{value:new Z},anisotropyMap:{value:null},anisotropyMapTransform:{value:new qe}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag};const $o={r:0,b:0,g:0},Cs=new Ui,Lb=new Ne;function Rb(r,e,t,i,n,s,a){const o=new fe(0);let l=s===!0?0:1,c,h,d=null,u=0,f=null;function m(_){let y=_.isScene===!0?_.background:null;return y&&y.isTexture&&(y=(_.backgroundBlurriness>0?t:e).get(y)),y}function v(_){let y=!1;const w=m(_);w===null?p(o,l):w&&w.isColor&&(p(w,1),y=!0);const C=r.xr.getEnvironmentBlendMode();C==="additive"?i.buffers.color.setClear(0,0,0,1,a):C==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(r.autoClear||y)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function g(_,y){const w=m(y);w&&(w.isCubeTexture||w.mapping===zl)?(h===void 0&&(h=new st(new Zn(1,1,1),new Ot({name:"BackgroundCubeMaterial",uniforms:Ir(Mi.backgroundCube.uniforms),vertexShader:Mi.backgroundCube.vertexShader,fragmentShader:Mi.backgroundCube.fragmentShader,side:Qt,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(C,A,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),Cs.copy(y.backgroundRotation),Cs.x*=-1,Cs.y*=-1,Cs.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Cs.y*=-1,Cs.z*=-1),h.material.uniforms.envMap.value=w,h.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(Lb.makeRotationFromEuler(Cs)),h.material.toneMapped=nt.getTransfer(w.colorSpace)!==pt,(d!==w||u!==w.version||f!==r.toneMapping)&&(h.material.needsUpdate=!0,d=w,u=w.version,f=r.toneMapping),h.layers.enableAll(),_.unshift(h,h.geometry,h.material,0,0,null)):w&&w.isTexture&&(c===void 0&&(c=new st(new ys(2,2),new Ot({name:"BackgroundMaterial",uniforms:Ir(Mi.background.uniforms),vertexShader:Mi.background.vertexShader,fragmentShader:Mi.background.fragmentShader,side:En,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=w,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=nt.getTransfer(w.colorSpace)!==pt,w.matrixAutoUpdate===!0&&w.updateMatrix(),c.material.uniforms.uvTransform.value.copy(w.matrix),(d!==w||u!==w.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,d=w,u=w.version,f=r.toneMapping),c.layers.enableAll(),_.unshift(c,c.geometry,c.material,0,0,null))}function p(_,y){_.getRGB($o,nm(r)),i.buffers.color.setClear($o.r,$o.g,$o.b,y,a)}function x(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return o},setClearColor:function(_,y=1){o.set(_),l=y,p(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(_){l=_,p(o,l)},render:v,addToRenderList:g,dispose:x}}function Db(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),i={},n=u(null);let s=n,a=!1;function o(S,N,O,k,H){let j=!1;const B=d(k,O,N);s!==B&&(s=B,c(s.object)),j=f(S,k,O,H),j&&m(S,k,O,H),H!==null&&e.update(H,r.ELEMENT_ARRAY_BUFFER),(j||a)&&(a=!1,y(S,N,O,k),H!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(H).buffer))}function l(){return r.createVertexArray()}function c(S){return r.bindVertexArray(S)}function h(S){return r.deleteVertexArray(S)}function d(S,N,O){const k=O.wireframe===!0;let H=i[S.id];H===void 0&&(H={},i[S.id]=H);let j=H[N.id];j===void 0&&(j={},H[N.id]=j);let B=j[k];return B===void 0&&(B=u(l()),j[k]=B),B}function u(S){const N=[],O=[],k=[];for(let H=0;H<t;H++)N[H]=0,O[H]=0,k[H]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:O,attributeDivisors:k,object:S,attributes:{},index:null}}function f(S,N,O,k){const H=s.attributes,j=N.attributes;let B=0;const K=O.getAttributes();for(const W in K)if(K[W].location>=0){const me=H[W];let _e=j[W];if(_e===void 0&&(W==="instanceMatrix"&&S.instanceMatrix&&(_e=S.instanceMatrix),W==="instanceColor"&&S.instanceColor&&(_e=S.instanceColor)),me===void 0||me.attribute!==_e||_e&&me.data!==_e.data)return!0;B++}return s.attributesNum!==B||s.index!==k}function m(S,N,O,k){const H={},j=N.attributes;let B=0;const K=O.getAttributes();for(const W in K)if(K[W].location>=0){let me=j[W];me===void 0&&(W==="instanceMatrix"&&S.instanceMatrix&&(me=S.instanceMatrix),W==="instanceColor"&&S.instanceColor&&(me=S.instanceColor));const _e={};_e.attribute=me,me&&me.data&&(_e.data=me.data),H[W]=_e,B++}s.attributes=H,s.attributesNum=B,s.index=k}function v(){const S=s.newAttributes;for(let N=0,O=S.length;N<O;N++)S[N]=0}function g(S){p(S,0)}function p(S,N){const O=s.newAttributes,k=s.enabledAttributes,H=s.attributeDivisors;O[S]=1,k[S]===0&&(r.enableVertexAttribArray(S),k[S]=1),H[S]!==N&&(r.vertexAttribDivisor(S,N),H[S]=N)}function x(){const S=s.newAttributes,N=s.enabledAttributes;for(let O=0,k=N.length;O<k;O++)N[O]!==S[O]&&(r.disableVertexAttribArray(O),N[O]=0)}function _(S,N,O,k,H,j,B){B===!0?r.vertexAttribIPointer(S,N,O,H,j):r.vertexAttribPointer(S,N,O,k,H,j)}function y(S,N,O,k){v();const H=k.attributes,j=O.getAttributes(),B=N.defaultAttributeValues;for(const K in j){const W=j[K];if(W.location>=0){let oe=H[K];if(oe===void 0&&(K==="instanceMatrix"&&S.instanceMatrix&&(oe=S.instanceMatrix),K==="instanceColor"&&S.instanceColor&&(oe=S.instanceColor)),oe!==void 0){const me=oe.normalized,_e=oe.itemSize,ze=e.get(oe);if(ze===void 0)continue;const Je=ze.buffer,X=ze.type,re=ze.bytesPerElement,Re=X===r.INT||X===r.UNSIGNED_INT||oe.gpuType===yd;if(oe.isInterleavedBufferAttribute){const ye=oe.data,De=ye.stride,je=oe.offset;if(ye.isInstancedInterleavedBuffer){for(let ke=0;ke<W.locationSize;ke++)p(W.location+ke,ye.meshPerAttribute);S.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let ke=0;ke<W.locationSize;ke++)g(W.location+ke);r.bindBuffer(r.ARRAY_BUFFER,Je);for(let ke=0;ke<W.locationSize;ke++)_(W.location+ke,_e/W.locationSize,X,me,De*re,(je+_e/W.locationSize*ke)*re,Re)}else{if(oe.isInstancedBufferAttribute){for(let ye=0;ye<W.locationSize;ye++)p(W.location+ye,oe.meshPerAttribute);S.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=oe.meshPerAttribute*oe.count)}else for(let ye=0;ye<W.locationSize;ye++)g(W.location+ye);r.bindBuffer(r.ARRAY_BUFFER,Je);for(let ye=0;ye<W.locationSize;ye++)_(W.location+ye,_e/W.locationSize,X,me,_e*re,_e/W.locationSize*ye*re,Re)}}else if(B!==void 0){const me=B[K];if(me!==void 0)switch(me.length){case 2:r.vertexAttrib2fv(W.location,me);break;case 3:r.vertexAttrib3fv(W.location,me);break;case 4:r.vertexAttrib4fv(W.location,me);break;default:r.vertexAttrib1fv(W.location,me)}}}}x()}function w(){L();for(const S in i){const N=i[S];for(const O in N){const k=N[O];for(const H in k)h(k[H].object),delete k[H];delete N[O]}delete i[S]}}function C(S){if(i[S.id]===void 0)return;const N=i[S.id];for(const O in N){const k=N[O];for(const H in k)h(k[H].object),delete k[H];delete N[O]}delete i[S.id]}function A(S){for(const N in i){const O=i[N];if(O[S.id]===void 0)continue;const k=O[S.id];for(const H in k)h(k[H].object),delete k[H];delete O[S.id]}}function L(){b(),a=!0,s!==n&&(s=n,c(s.object))}function b(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:o,reset:L,resetDefaultState:b,dispose:w,releaseStatesOfGeometry:C,releaseStatesOfProgram:A,initAttributes:v,enableAttribute:g,disableUnusedAttributes:x}}function Nb(r,e,t){let i;function n(c){i=c}function s(c,h){r.drawArrays(i,c,h),t.update(h,i,1)}function a(c,h,d){d!==0&&(r.drawArraysInstanced(i,c,h,d),t.update(h,i,d))}function o(c,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,d);let f=0;for(let m=0;m<d;m++)f+=h[m];t.update(f,i,1)}function l(c,h,d,u){if(d===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let m=0;m<c.length;m++)a(c[m],h[m],u[m]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,u,0,d);let m=0;for(let v=0;v<d;v++)m+=h[v]*u[v];t.update(m,i,1)}}this.setMode=n,this.render=s,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=l}function Ib(r,e,t,i){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const A=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function a(A){return!(A!==vi&&i.convert(A)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(A){const L=A===io&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(A!==Gt&&i.convert(A)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&A!==Xi&&!L)}function l(A){if(A==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const d=t.logarithmicDepthBuffer===!0,u=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=r.getParameter(r.MAX_TEXTURE_SIZE),g=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),p=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),_=r.getParameter(r.MAX_VARYING_VECTORS),y=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),w=m>0,C=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:a,textureTypeReadable:o,precision:c,logarithmicDepthBuffer:d,reverseDepthBuffer:u,maxTextures:f,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:y,vertexTextures:w,maxSamples:C}}function kb(r){const e=this;let t=null,i=0,n=!1,s=!1;const a=new ss,o=new qe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u){const f=d.length!==0||u||i!==0||n;return n=u,i=d.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(d,u){t=h(d,u,0)},this.setState=function(d,u,f){const m=d.clippingPlanes,v=d.clipIntersection,g=d.clipShadows,p=r.get(d);if(!n||m===null||m.length===0||s&&!g)s?h(null):c();else{const x=s?0:i,_=x*4;let y=p.clippingState||null;l.value=y,y=h(m,u,_,f);for(let w=0;w!==_;++w)y[w]=t[w];p.clippingState=y,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,u,f,m){const v=d!==null?d.length:0;let g=null;if(v!==0){if(g=l.value,m!==!0||g===null){const p=f+v*4,x=u.matrixWorldInverse;o.getNormalMatrix(x),(g===null||g.length<p)&&(g=new Float32Array(p));for(let _=0,y=f;_!==v;++_,y+=4)a.copy(d[_]).applyMatrix4(x,o),a.normal.toArray(g,y),g[y+3]=a.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,g}}function Ob(r){let e=new WeakMap;function t(a,o){return o===ch?a.mapping=Ar:o===hh&&(a.mapping=Pr),a}function i(a){if(a&&a.isTexture){const o=a.mapping;if(o===ch||o===hh)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new Tv(l.height);return c.fromEquirectangularTexture(r,a),e.set(a,c),a.addEventListener("dispose",n),t(c.texture,a.mapping)}else return null}}return a}function n(a){const o=a.target;o.removeEventListener("dispose",n);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}const pr=4,wf=[.125,.215,.35,.446,.526,.582],ks=20,Ac=new ho,Ef=new fe;let Pc=null,Lc=0,Rc=0,Dc=!1;const Ds=(1+Math.sqrt(5))/2,hr=1/Ds,Tf=[new M(-Ds,hr,0),new M(Ds,hr,0),new M(-hr,0,Ds),new M(hr,0,Ds),new M(0,Ds,-hr),new M(0,Ds,hr),new M(-1,1,-1),new M(1,1,-1),new M(-1,1,1),new M(1,1,1)],zb=new M;class Cf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,s={}){const{size:a=256,position:o=zb}=s;Pc=this._renderer.getRenderTarget(),Lc=this._renderer.getActiveCubeFace(),Rc=this._renderer.getActiveMipmapLevel(),Dc=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,o),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Lf(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Pf(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Pc,Lc,Rc),this._renderer.xr.enabled=Dc,e.scissorTest=!1,Xo(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ar||e.mapping===Pr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Pc=this._renderer.getRenderTarget(),Lc=this._renderer.getActiveCubeFace(),Rc=this._renderer.getActiveMipmapLevel(),Dc=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Xt,minFilter:Xt,generateMipmaps:!1,type:io,format:vi,colorSpace:oi,depthBuffer:!1},n=Af(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Af(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Ub(s)),this._blurMaterial=Fb(s,e,t)}return n}_compileMaterial(e){const t=new st(this._lodPlanes[0],e);this._renderer.compile(t,Ac)}_sceneToCubeUV(e,t,i,n,s){const l=new Jt(90,1,t,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.toneMapping;d.getClearColor(Ef),d.toneMapping=hs,d.autoClear=!1;const m=new di({name:"PMREM.Background",side:Qt,depthWrite:!1,depthTest:!1}),v=new st(new Zn,m);let g=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,g=!0):(m.color.copy(Ef),g=!0);for(let x=0;x<6;x++){const _=x%3;_===0?(l.up.set(0,c[x],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+h[x],s.y,s.z)):_===1?(l.up.set(0,0,c[x]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+h[x],s.z)):(l.up.set(0,c[x],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+h[x]));const y=this._cubeSize;Xo(n,_*y,x>2?y:0,y,y),d.setRenderTarget(n),g&&d.render(v,l),d.render(e,l)}v.geometry.dispose(),v.material.dispose(),d.toneMapping=f,d.autoClear=u,e.background=p}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===Ar||e.mapping===Pr;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=Lf()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Pf());const s=n?this._cubemapMaterial:this._equirectMaterial,a=new st(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;Xo(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(a,Ac)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=Tf[(n-s-1)%Tf.length];this._blur(e,s-1,s,a,o)}t.autoClear=i}_blur(e,t,i,n,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,n,"latitudinal",s),this._halfBlur(a,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new st(this._lodPlanes[n],c),u=c.uniforms,f=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*ks-1),v=s/m,g=isFinite(s)?1+Math.floor(h*v):ks;g>ks&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${ks}`);const p=[];let x=0;for(let A=0;A<ks;++A){const L=A/v,b=Math.exp(-L*L/2);p.push(b),A===0?x+=b:A<g&&(x+=2*b)}for(let A=0;A<p.length;A++)p[A]=p[A]/x;u.envMap.value=e.texture,u.samples.value=g,u.weights.value=p,u.latitudinal.value=a==="latitudinal",o&&(u.poleAxis.value=o);const{_lodMax:_}=this;u.dTheta.value=m,u.mipInt.value=_-i;const y=this._sizeLods[n],w=3*y*(n>_-pr?n-_+pr:0),C=4*(this._cubeSize-y);Xo(t,w,C,3*y,2*y),l.setRenderTarget(t),l.render(d,Ac)}}function Ub(r){const e=[],t=[],i=[];let n=r;const s=r-pr+1+wf.length;for(let a=0;a<s;a++){const o=Math.pow(2,n);t.push(o);let l=1/o;a>r-pr?l=wf[a-r+pr-1]:a===0&&(l=0),i.push(l);const c=1/(o-2),h=-c,d=1+c,u=[h,h,d,h,d,d,h,h,d,d,h,d],f=6,m=6,v=3,g=2,p=1,x=new Float32Array(v*m*f),_=new Float32Array(g*m*f),y=new Float32Array(p*m*f);for(let C=0;C<f;C++){const A=C%3*2/3-1,L=C>2?0:-1,b=[A,L,0,A+2/3,L,0,A+2/3,L+1,0,A,L,0,A+2/3,L+1,0,A,L+1,0];x.set(b,v*m*C),_.set(u,g*m*C);const S=[C,C,C,C,C,C];y.set(S,p*m*C)}const w=new At;w.setAttribute("position",new Ct(x,v)),w.setAttribute("uv",new Ct(_,g)),w.setAttribute("faceIndex",new Ct(y,p)),e.push(w),n>pr&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function Af(r,e,t){const i=new kt(r,e,t);return i.texture.mapping=zl,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Xo(r,e,t,i,n){r.viewport.set(e,t,i,n),r.scissor.set(e,t,i,n)}function Fb(r,e,t){const i=new Float32Array(ks),n=new M(0,1,0);return new Ot({name:"SphericalGaussianBlur",defines:{n:ks,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Vd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ei,depthTest:!1,depthWrite:!1})}function Pf(){return new Ot({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Vd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ei,depthTest:!1,depthWrite:!1})}function Lf(){return new Ot({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Vd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ei,depthTest:!1,depthWrite:!1})}function Vd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Bb(r){let e=new WeakMap,t=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===ch||l===hh,h=l===Ar||l===Pr;if(c||h){let d=e.get(o);const u=d!==void 0?d.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==u)return t===null&&(t=new Cf(r)),d=c?t.fromEquirectangular(o,d):t.fromCubemap(o,d),d.texture.pmremVersion=o.pmremVersion,e.set(o,d),d.texture;if(d!==void 0)return d.texture;{const f=o.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new Cf(r)),d=c?t.fromEquirectangular(o):t.fromCubemap(o),d.texture.pmremVersion=o.pmremVersion,e.set(o,d),o.addEventListener("dispose",s),d.texture):null}}}return o}function n(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:a}}function Hb(r){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=r.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&yr("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function Gb(r,e,t,i){const n={},s=new WeakMap;function a(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const m in u.attributes)e.remove(u.attributes[m]);u.removeEventListener("dispose",a),delete n[u.id];const f=s.get(u);f&&(e.remove(f),s.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function o(d,u){return n[u.id]===!0||(u.addEventListener("dispose",a),n[u.id]=!0,t.memory.geometries++),u}function l(d){const u=d.attributes;for(const f in u)e.update(u[f],r.ARRAY_BUFFER)}function c(d){const u=[],f=d.index,m=d.attributes.position;let v=0;if(f!==null){const x=f.array;v=f.version;for(let _=0,y=x.length;_<y;_+=3){const w=x[_+0],C=x[_+1],A=x[_+2];u.push(w,C,C,A,A,w)}}else if(m!==void 0){const x=m.array;v=m.version;for(let _=0,y=x.length/3-1;_<y;_+=3){const w=_+0,C=_+1,A=_+2;u.push(w,C,C,A,A,w)}}else return;const g=new(Jp(u)?im:tm)(u,1);g.version=v;const p=s.get(d);p&&e.remove(p),s.set(d,g)}function h(d){const u=s.get(d);if(u){const f=d.index;f!==null&&u.version<f.version&&c(d)}else c(d);return s.get(d)}return{get:o,update:l,getWireframeAttribute:h}}function Vb(r,e,t){let i;function n(u){i=u}let s,a;function o(u){s=u.type,a=u.bytesPerElement}function l(u,f){r.drawElements(i,f,s,u*a),t.update(f,i,1)}function c(u,f,m){m!==0&&(r.drawElementsInstanced(i,f,s,u*a,m),t.update(f,i,m))}function h(u,f,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,s,u,0,m);let g=0;for(let p=0;p<m;p++)g+=f[p];t.update(g,i,1)}function d(u,f,m,v){if(m===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let p=0;p<u.length;p++)c(u[p]/a,f[p],v[p]);else{g.multiDrawElementsInstancedWEBGL(i,f,0,s,u,0,v,0,m);let p=0;for(let x=0;x<m;x++)p+=f[x]*v[x];t.update(p,i,1)}}this.setMode=n,this.setIndex=o,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function Wb(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=o*(s/3);break;case r.LINES:t.lines+=o*(s/2);break;case r.LINE_STRIP:t.lines+=o*(s-1);break;case r.LINE_LOOP:t.lines+=o*s;break;case r.POINTS:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function jb(r,e,t){const i=new WeakMap,n=new Ke;function s(a,o,l){const c=a.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,d=h!==void 0?h.length:0;let u=i.get(o);if(u===void 0||u.count!==d){let b=function(){A.dispose(),i.delete(o),o.removeEventListener("dispose",b)};u!==void 0&&u.texture.dispose();const f=o.morphAttributes.position!==void 0,m=o.morphAttributes.normal!==void 0,v=o.morphAttributes.color!==void 0,g=o.morphAttributes.position||[],p=o.morphAttributes.normal||[],x=o.morphAttributes.color||[];let _=0;f===!0&&(_=1),m===!0&&(_=2),v===!0&&(_=3);let y=o.attributes.position.count*_,w=1;y>e.maxTextureSize&&(w=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const C=new Float32Array(y*w*4*d),A=new Qp(C,y,w,d);A.type=Xi,A.needsUpdate=!0;const L=_*4;for(let S=0;S<d;S++){const N=g[S],O=p[S],k=x[S],H=y*w*4*S;for(let j=0;j<N.count;j++){const B=j*L;f===!0&&(n.fromBufferAttribute(N,j),C[H+B+0]=n.x,C[H+B+1]=n.y,C[H+B+2]=n.z,C[H+B+3]=0),m===!0&&(n.fromBufferAttribute(O,j),C[H+B+4]=n.x,C[H+B+5]=n.y,C[H+B+6]=n.z,C[H+B+7]=0),v===!0&&(n.fromBufferAttribute(k,j),C[H+B+8]=n.x,C[H+B+9]=n.y,C[H+B+10]=n.z,C[H+B+11]=k.itemSize===4?n.w:1)}}u={count:d,texture:A,size:new Z(y,w)},i.set(o,u),o.addEventListener("dispose",b)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)l.getUniforms().setValue(r,"morphTexture",a.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const m=o.morphTargetsRelative?1:1-f;l.getUniforms().setValue(r,"morphTargetBaseInfluence",m),l.getUniforms().setValue(r,"morphTargetInfluences",c)}l.getUniforms().setValue(r,"morphTargetsTexture",u.texture,t),l.getUniforms().setValue(r,"morphTargetsTextureSize",u.size)}return{update:s}}function $b(r,e,t,i){let n=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,d=e.get(l,h);if(n.get(d)!==c&&(e.update(d),n.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),n.get(l)!==c&&(t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const u=l.skeleton;n.get(u)!==c&&(u.update(),n.set(u,c))}return d}function a(){n=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:a}}const Pm=new Ht,Rf=new Dd(1,1),Lm=new Qp,Rm=new hv,Dm=new sm,Df=[],Nf=[],If=new Float32Array(16),kf=new Float32Array(9),Of=new Float32Array(4);function na(r,e,t){const i=r[0];if(i<=0||i>0)return r;const n=e*t;let s=Df[n];if(s===void 0&&(s=new Float32Array(n),Df[n]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,r[a].toArray(s,o)}return s}function Zt(r,e){if(r.length!==e.length)return!1;for(let t=0,i=r.length;t<i;t++)if(r[t]!==e[t])return!1;return!0}function Yt(r,e){for(let t=0,i=e.length;t<i;t++)r[t]=e[t]}function Gl(r,e){let t=Nf[e];t===void 0&&(t=new Int32Array(e),Nf[e]=t);for(let i=0;i!==e;++i)t[i]=r.allocateTextureUnit();return t}function Xb(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function qb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Zt(t,e))return;r.uniform2fv(this.addr,e),Yt(t,e)}}function Zb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Zt(t,e))return;r.uniform3fv(this.addr,e),Yt(t,e)}}function Yb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Zt(t,e))return;r.uniform4fv(this.addr,e),Yt(t,e)}}function Kb(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Zt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Yt(t,e)}else{if(Zt(t,i))return;Of.set(i),r.uniformMatrix2fv(this.addr,!1,Of),Yt(t,i)}}function Jb(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Zt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Yt(t,e)}else{if(Zt(t,i))return;kf.set(i),r.uniformMatrix3fv(this.addr,!1,kf),Yt(t,i)}}function Qb(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Zt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Yt(t,e)}else{if(Zt(t,i))return;If.set(i),r.uniformMatrix4fv(this.addr,!1,If),Yt(t,i)}}function eM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function tM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Zt(t,e))return;r.uniform2iv(this.addr,e),Yt(t,e)}}function iM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Zt(t,e))return;r.uniform3iv(this.addr,e),Yt(t,e)}}function nM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Zt(t,e))return;r.uniform4iv(this.addr,e),Yt(t,e)}}function sM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function rM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Zt(t,e))return;r.uniform2uiv(this.addr,e),Yt(t,e)}}function aM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Zt(t,e))return;r.uniform3uiv(this.addr,e),Yt(t,e)}}function oM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Zt(t,e))return;r.uniform4uiv(this.addr,e),Yt(t,e)}}function lM(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n);let s;this.type===r.SAMPLER_2D_SHADOW?(Rf.compareFunction=Kp,s=Rf):s=Pm,t.setTexture2D(e||s,n)}function cM(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||Rm,n)}function hM(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||Dm,n)}function dM(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||Lm,n)}function uM(r){switch(r){case 5126:return Xb;case 35664:return qb;case 35665:return Zb;case 35666:return Yb;case 35674:return Kb;case 35675:return Jb;case 35676:return Qb;case 5124:case 35670:return eM;case 35667:case 35671:return tM;case 35668:case 35672:return iM;case 35669:case 35673:return nM;case 5125:return sM;case 36294:return rM;case 36295:return aM;case 36296:return oM;case 35678:case 36198:case 36298:case 36306:case 35682:return lM;case 35679:case 36299:case 36307:return cM;case 35680:case 36300:case 36308:case 36293:return hM;case 36289:case 36303:case 36311:case 36292:return dM}}function fM(r,e){r.uniform1fv(this.addr,e)}function pM(r,e){const t=na(e,this.size,2);r.uniform2fv(this.addr,t)}function mM(r,e){const t=na(e,this.size,3);r.uniform3fv(this.addr,t)}function gM(r,e){const t=na(e,this.size,4);r.uniform4fv(this.addr,t)}function vM(r,e){const t=na(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function yM(r,e){const t=na(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function _M(r,e){const t=na(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function xM(r,e){r.uniform1iv(this.addr,e)}function bM(r,e){r.uniform2iv(this.addr,e)}function MM(r,e){r.uniform3iv(this.addr,e)}function SM(r,e){r.uniform4iv(this.addr,e)}function wM(r,e){r.uniform1uiv(this.addr,e)}function EM(r,e){r.uniform2uiv(this.addr,e)}function TM(r,e){r.uniform3uiv(this.addr,e)}function CM(r,e){r.uniform4uiv(this.addr,e)}function AM(r,e,t){const i=this.cache,n=e.length,s=Gl(t,n);Zt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let a=0;a!==n;++a)t.setTexture2D(e[a]||Pm,s[a])}function PM(r,e,t){const i=this.cache,n=e.length,s=Gl(t,n);Zt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let a=0;a!==n;++a)t.setTexture3D(e[a]||Rm,s[a])}function LM(r,e,t){const i=this.cache,n=e.length,s=Gl(t,n);Zt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let a=0;a!==n;++a)t.setTextureCube(e[a]||Dm,s[a])}function RM(r,e,t){const i=this.cache,n=e.length,s=Gl(t,n);Zt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let a=0;a!==n;++a)t.setTexture2DArray(e[a]||Lm,s[a])}function DM(r){switch(r){case 5126:return fM;case 35664:return pM;case 35665:return mM;case 35666:return gM;case 35674:return vM;case 35675:return yM;case 35676:return _M;case 5124:case 35670:return xM;case 35667:case 35671:return bM;case 35668:case 35672:return MM;case 35669:case 35673:return SM;case 5125:return wM;case 36294:return EM;case 36295:return TM;case 36296:return CM;case 35678:case 36198:case 36298:case 36306:case 35682:return AM;case 35679:case 36299:case 36307:return PM;case 35680:case 36300:case 36308:case 36293:return LM;case 36289:case 36303:case 36311:case 36292:return RM}}class NM{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=uM(t.type)}}class IM{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=DM(t.type)}}class kM{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,a=n.length;s!==a;++s){const o=n[s];o.setValue(e,t[o.id],i)}}}const Nc=/(\w+)(\])?(\[|\.)?/g;function zf(r,e){r.seq.push(e),r.map[e.id]=e}function OM(r,e,t){const i=r.name,n=i.length;for(Nc.lastIndex=0;;){const s=Nc.exec(i),a=Nc.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===n){zf(t,c===void 0?new NM(o,r,e):new IM(o,r,e));break}else{let d=t.map[o];d===void 0&&(d=new kM(o),zf(t,d)),t=d}}}class cl{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n),a=e.getUniformLocation(t,s.name);OM(s,a,this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const a=e[n];a.id in t&&i.push(a)}return i}}function Uf(r,e,t){const i=r.createShader(e);return r.shaderSource(i,t),r.compileShader(i),i}const zM=37297;let UM=0;function FM(r,e){const t=r.split(`
`),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=n;a<s;a++){const o=a+1;i.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return i.join(`
`)}const Ff=new qe;function BM(r){nt._getMatrix(Ff,nt.workingColorSpace,r);const e=`mat3( ${Ff.elements.map(t=>t.toFixed(4))} )`;switch(nt.getTransfer(r)){case ml:return[e,"LinearTransferOETF"];case pt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function Bf(r,e,t){const i=r.getShaderParameter(e,r.COMPILE_STATUS),n=r.getShaderInfoLog(e).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+n+`

`+FM(r.getShaderSource(e),a)}else return n}function HM(r,e){const t=BM(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function GM(r,e){let t;switch(e){case b0:t="Linear";break;case M0:t="Reinhard";break;case S0:t="Cineon";break;case w0:t="ACESFilmic";break;case T0:t="AgX";break;case C0:t="Neutral";break;case E0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const qo=new M;function VM(){nt.getLuminanceCoefficients(qo);const r=qo.x.toFixed(4),e=qo.y.toFixed(4),t=qo.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function WM(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(_a).join(`
`)}function jM(r){const e=[];for(const t in r){const i=r[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function $M(r,e){const t={},i=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=r.getActiveAttrib(e,n),a=s.name;let o=1;s.type===r.FLOAT_MAT2&&(o=2),s.type===r.FLOAT_MAT3&&(o=3),s.type===r.FLOAT_MAT4&&(o=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:o}}return t}function _a(r){return r!==""}function Hf(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Gf(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const XM=/^[ \t]*#include +<([\w\d./]+)>/gm;function $h(r){return r.replace(XM,ZM)}const qM=new Map;function ZM(r,e){let t=Ze[e];if(t===void 0){const i=qM.get(e);if(i!==void 0)t=Ze[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return $h(t)}const YM=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vf(r){return r.replace(YM,KM)}function KM(r,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function Wf(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function JM(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Bp?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Hp?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===On&&(e="SHADOWMAP_TYPE_VSM"),e}function QM(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Ar:case Pr:e="ENVMAP_TYPE_CUBE";break;case zl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function eS(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Pr:e="ENVMAP_MODE_REFRACTION";break}return e}function tS(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ol:e="ENVMAP_BLENDING_MULTIPLY";break;case _0:e="ENVMAP_BLENDING_MIX";break;case x0:e="ENVMAP_BLENDING_ADD";break}return e}function iS(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function nS(r,e,t,i){const n=r.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=JM(t),c=QM(t),h=eS(t),d=tS(t),u=iS(t),f=WM(t),m=jM(s),v=n.createProgram();let g,p,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(_a).join(`
`),g.length>0&&(g+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(_a).join(`
`),p.length>0&&(p+=`
`)):(g=[Wf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_a).join(`
`),p=[Wf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==hs?"#define TONE_MAPPING":"",t.toneMapping!==hs?Ze.tonemapping_pars_fragment:"",t.toneMapping!==hs?GM("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ze.colorspace_pars_fragment,HM("linearToOutputTexel",t.outputColorSpace),VM(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(_a).join(`
`)),a=$h(a),a=Hf(a,t),a=Gf(a,t),o=$h(o),o=Hf(o,t),o=Gf(o,t),a=Vf(a),o=Vf(o),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",t.glslVersion===Au?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Au?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const _=x+g+a,y=x+p+o,w=Uf(n,n.VERTEX_SHADER,_),C=Uf(n,n.FRAGMENT_SHADER,y);n.attachShader(v,w),n.attachShader(v,C),t.index0AttributeName!==void 0?n.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(v,0,"position"),n.linkProgram(v);function A(N){if(r.debug.checkShaderErrors){const O=n.getProgramInfoLog(v).trim(),k=n.getShaderInfoLog(w).trim(),H=n.getShaderInfoLog(C).trim();let j=!0,B=!0;if(n.getProgramParameter(v,n.LINK_STATUS)===!1)if(j=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(n,v,w,C);else{const K=Bf(n,w,"vertex"),W=Bf(n,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(v,n.VALIDATE_STATUS)+`

Material Name: `+N.name+`
Material Type: `+N.type+`

Program Info Log: `+O+`
`+K+`
`+W)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):(k===""||H==="")&&(B=!1);B&&(N.diagnostics={runnable:j,programLog:O,vertexShader:{log:k,prefix:g},fragmentShader:{log:H,prefix:p}})}n.deleteShader(w),n.deleteShader(C),L=new cl(n,v),b=$M(n,v)}let L;this.getUniforms=function(){return L===void 0&&A(this),L};let b;this.getAttributes=function(){return b===void 0&&A(this),b};let S=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return S===!1&&(S=n.getProgramParameter(v,zM)),S},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=UM++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=w,this.fragmentShader=C,this}let sS=0;class rS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(n)===!1&&(a.add(n),n.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new aS(e),t.set(e,i)),i}}class aS{constructor(e){this.id=sS++,this.code=e,this.usedTimes=0}}function oS(r,e,t,i,n,s,a){const o=new Cd,l=new rS,c=new Set,h=[],d=n.logarithmicDepthBuffer,u=n.vertexTextures;let f=n.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(b){return c.add(b),b===0?"uv":`uv${b}`}function g(b,S,N,O,k){const H=O.fog,j=k.geometry,B=b.isMeshStandardMaterial?O.environment:null,K=(b.isMeshStandardMaterial?t:e).get(b.envMap||B),W=K&&K.mapping===zl?K.image.height:null,oe=m[b.type];b.precision!==null&&(f=n.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));const me=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,_e=me!==void 0?me.length:0;let ze=0;j.morphAttributes.position!==void 0&&(ze=1),j.morphAttributes.normal!==void 0&&(ze=2),j.morphAttributes.color!==void 0&&(ze=3);let Je,X,re,Re;if(oe){const ct=Mi[oe];Je=ct.vertexShader,X=ct.fragmentShader}else Je=b.vertexShader,X=b.fragmentShader,l.update(b),re=l.getVertexShaderID(b),Re=l.getFragmentShaderID(b);const ye=r.getRenderTarget(),De=r.state.buffers.depth.getReversed(),je=k.isInstancedMesh===!0,ke=k.isBatchedMesh===!0,Mt=!!b.map,rt=!!b.matcap,$e=!!K,R=!!b.aoMap,le=!!b.lightMap,te=!!b.bumpMap,ce=!!b.normalMap,Y=!!b.displacementMap,be=!!b.emissiveMap,ne=!!b.metalnessMap,Me=!!b.roughnessMap,Ve=b.anisotropy>0,D=b.clearcoat>0,T=b.dispersion>0,F=b.iridescence>0,$=b.sheen>0,Q=b.transmission>0,q=Ve&&!!b.anisotropyMap,Pe=D&&!!b.clearcoatMap,de=D&&!!b.clearcoatNormalMap,Te=D&&!!b.clearcoatRoughnessMap,Le=F&&!!b.iridescenceMap,ee=F&&!!b.iridescenceThicknessMap,Se=$&&!!b.sheenColorMap,Fe=$&&!!b.sheenRoughnessMap,Ue=!!b.specularMap,pe=!!b.specularColorMap,Ge=!!b.specularIntensityMap,I=Q&&!!b.transmissionMap,ge=Q&&!!b.thicknessMap,ie=!!b.gradientMap,Ee=!!b.alphaMap,se=b.alphaTest>0,J=!!b.alphaHash,Ce=!!b.extensions;let We=hs;b.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(We=r.toneMapping);const St={shaderID:oe,shaderType:b.type,shaderName:b.name,vertexShader:Je,fragmentShader:X,defines:b.defines,customVertexShaderID:re,customFragmentShaderID:Re,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,batching:ke,batchingColor:ke&&k._colorsTexture!==null,instancing:je,instancingColor:je&&k.instanceColor!==null,instancingMorph:je&&k.morphTexture!==null,supportsVertexTextures:u,outputColorSpace:ye===null?r.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:oi,alphaToCoverage:!!b.alphaToCoverage,map:Mt,matcap:rt,envMap:$e,envMapMode:$e&&K.mapping,envMapCubeUVHeight:W,aoMap:R,lightMap:le,bumpMap:te,normalMap:ce,displacementMap:u&&Y,emissiveMap:be,normalMapObjectSpace:ce&&b.normalMapType===R0,normalMapTangentSpace:ce&&b.normalMapType===so,metalnessMap:ne,roughnessMap:Me,anisotropy:Ve,anisotropyMap:q,clearcoat:D,clearcoatMap:Pe,clearcoatNormalMap:de,clearcoatRoughnessMap:Te,dispersion:T,iridescence:F,iridescenceMap:Le,iridescenceThicknessMap:ee,sheen:$,sheenColorMap:Se,sheenRoughnessMap:Fe,specularMap:Ue,specularColorMap:pe,specularIntensityMap:Ge,transmission:Q,transmissionMap:I,thicknessMap:ge,gradientMap:ie,opaque:b.transparent===!1&&b.blending===vr&&b.alphaToCoverage===!1,alphaMap:Ee,alphaTest:se,alphaHash:J,combine:b.combine,mapUv:Mt&&v(b.map.channel),aoMapUv:R&&v(b.aoMap.channel),lightMapUv:le&&v(b.lightMap.channel),bumpMapUv:te&&v(b.bumpMap.channel),normalMapUv:ce&&v(b.normalMap.channel),displacementMapUv:Y&&v(b.displacementMap.channel),emissiveMapUv:be&&v(b.emissiveMap.channel),metalnessMapUv:ne&&v(b.metalnessMap.channel),roughnessMapUv:Me&&v(b.roughnessMap.channel),anisotropyMapUv:q&&v(b.anisotropyMap.channel),clearcoatMapUv:Pe&&v(b.clearcoatMap.channel),clearcoatNormalMapUv:de&&v(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Te&&v(b.clearcoatRoughnessMap.channel),iridescenceMapUv:Le&&v(b.iridescenceMap.channel),iridescenceThicknessMapUv:ee&&v(b.iridescenceThicknessMap.channel),sheenColorMapUv:Se&&v(b.sheenColorMap.channel),sheenRoughnessMapUv:Fe&&v(b.sheenRoughnessMap.channel),specularMapUv:Ue&&v(b.specularMap.channel),specularColorMapUv:pe&&v(b.specularColorMap.channel),specularIntensityMapUv:Ge&&v(b.specularIntensityMap.channel),transmissionMapUv:I&&v(b.transmissionMap.channel),thicknessMapUv:ge&&v(b.thicknessMap.channel),alphaMapUv:Ee&&v(b.alphaMap.channel),vertexTangents:!!j.attributes.tangent&&(ce||Ve),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!j.attributes.uv&&(Mt||Ee),fog:!!H,useFog:b.fog===!0,fogExp2:!!H&&H.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:d,reverseDepthBuffer:De,skinning:k.isSkinnedMesh===!0,morphTargets:j.morphAttributes.position!==void 0,morphNormals:j.morphAttributes.normal!==void 0,morphColors:j.morphAttributes.color!==void 0,morphTargetsCount:_e,morphTextureStride:ze,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numLightProbes:S.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&N.length>0,shadowMapType:r.shadowMap.type,toneMapping:We,decodeVideoTexture:Mt&&b.map.isVideoTexture===!0&&nt.getTransfer(b.map.colorSpace)===pt,decodeVideoTextureEmissive:be&&b.emissiveMap.isVideoTexture===!0&&nt.getTransfer(b.emissiveMap.colorSpace)===pt,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===$t,flipSided:b.side===Qt,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionClipCullDistance:Ce&&b.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ce&&b.extensions.multiDraw===!0||ke)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()};return St.vertexUv1s=c.has(1),St.vertexUv2s=c.has(2),St.vertexUv3s=c.has(3),c.clear(),St}function p(b){const S=[];if(b.shaderID?S.push(b.shaderID):(S.push(b.customVertexShaderID),S.push(b.customFragmentShaderID)),b.defines!==void 0)for(const N in b.defines)S.push(N),S.push(b.defines[N]);return b.isRawShaderMaterial===!1&&(x(S,b),_(S,b),S.push(r.outputColorSpace)),S.push(b.customProgramCacheKey),S.join()}function x(b,S){b.push(S.precision),b.push(S.outputColorSpace),b.push(S.envMapMode),b.push(S.envMapCubeUVHeight),b.push(S.mapUv),b.push(S.alphaMapUv),b.push(S.lightMapUv),b.push(S.aoMapUv),b.push(S.bumpMapUv),b.push(S.normalMapUv),b.push(S.displacementMapUv),b.push(S.emissiveMapUv),b.push(S.metalnessMapUv),b.push(S.roughnessMapUv),b.push(S.anisotropyMapUv),b.push(S.clearcoatMapUv),b.push(S.clearcoatNormalMapUv),b.push(S.clearcoatRoughnessMapUv),b.push(S.iridescenceMapUv),b.push(S.iridescenceThicknessMapUv),b.push(S.sheenColorMapUv),b.push(S.sheenRoughnessMapUv),b.push(S.specularMapUv),b.push(S.specularColorMapUv),b.push(S.specularIntensityMapUv),b.push(S.transmissionMapUv),b.push(S.thicknessMapUv),b.push(S.combine),b.push(S.fogExp2),b.push(S.sizeAttenuation),b.push(S.morphTargetsCount),b.push(S.morphAttributeCount),b.push(S.numDirLights),b.push(S.numPointLights),b.push(S.numSpotLights),b.push(S.numSpotLightMaps),b.push(S.numHemiLights),b.push(S.numRectAreaLights),b.push(S.numDirLightShadows),b.push(S.numPointLightShadows),b.push(S.numSpotLightShadows),b.push(S.numSpotLightShadowsWithMaps),b.push(S.numLightProbes),b.push(S.shadowMapType),b.push(S.toneMapping),b.push(S.numClippingPlanes),b.push(S.numClipIntersection),b.push(S.depthPacking)}function _(b,S){o.disableAll(),S.supportsVertexTextures&&o.enable(0),S.instancing&&o.enable(1),S.instancingColor&&o.enable(2),S.instancingMorph&&o.enable(3),S.matcap&&o.enable(4),S.envMap&&o.enable(5),S.normalMapObjectSpace&&o.enable(6),S.normalMapTangentSpace&&o.enable(7),S.clearcoat&&o.enable(8),S.iridescence&&o.enable(9),S.alphaTest&&o.enable(10),S.vertexColors&&o.enable(11),S.vertexAlphas&&o.enable(12),S.vertexUv1s&&o.enable(13),S.vertexUv2s&&o.enable(14),S.vertexUv3s&&o.enable(15),S.vertexTangents&&o.enable(16),S.anisotropy&&o.enable(17),S.alphaHash&&o.enable(18),S.batching&&o.enable(19),S.dispersion&&o.enable(20),S.batchingColor&&o.enable(21),b.push(o.mask),o.disableAll(),S.fog&&o.enable(0),S.useFog&&o.enable(1),S.flatShading&&o.enable(2),S.logarithmicDepthBuffer&&o.enable(3),S.reverseDepthBuffer&&o.enable(4),S.skinning&&o.enable(5),S.morphTargets&&o.enable(6),S.morphNormals&&o.enable(7),S.morphColors&&o.enable(8),S.premultipliedAlpha&&o.enable(9),S.shadowMapEnabled&&o.enable(10),S.doubleSided&&o.enable(11),S.flipSided&&o.enable(12),S.useDepthPacking&&o.enable(13),S.dithering&&o.enable(14),S.transmission&&o.enable(15),S.sheen&&o.enable(16),S.opaque&&o.enable(17),S.pointsUvs&&o.enable(18),S.decodeVideoTexture&&o.enable(19),S.decodeVideoTextureEmissive&&o.enable(20),S.alphaToCoverage&&o.enable(21),b.push(o.mask)}function y(b){const S=m[b.type];let N;if(S){const O=Mi[S];N=Ad.clone(O.uniforms)}else N=b.uniforms;return N}function w(b,S){let N;for(let O=0,k=h.length;O<k;O++){const H=h[O];if(H.cacheKey===S){N=H,++N.usedTimes;break}}return N===void 0&&(N=new nS(r,S,b,s),h.push(N)),N}function C(b){if(--b.usedTimes===0){const S=h.indexOf(b);h[S]=h[h.length-1],h.pop(),b.destroy()}}function A(b){l.remove(b)}function L(){l.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:y,acquireProgram:w,releaseProgram:C,releaseShaderCache:A,programs:h,dispose:L}}function lS(){let r=new WeakMap;function e(a){return r.has(a)}function t(a){let o=r.get(a);return o===void 0&&(o={},r.set(a,o)),o}function i(a){r.delete(a)}function n(a,o,l){r.get(a)[o]=l}function s(){r=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:s}}function cS(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function jf(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function $f(){const r=[];let e=0;const t=[],i=[],n=[];function s(){e=0,t.length=0,i.length=0,n.length=0}function a(d,u,f,m,v,g){let p=r[e];return p===void 0?(p={id:d.id,object:d,geometry:u,material:f,groupOrder:m,renderOrder:d.renderOrder,z:v,group:g},r[e]=p):(p.id=d.id,p.object=d,p.geometry=u,p.material=f,p.groupOrder=m,p.renderOrder=d.renderOrder,p.z=v,p.group=g),e++,p}function o(d,u,f,m,v,g){const p=a(d,u,f,m,v,g);f.transmission>0?i.push(p):f.transparent===!0?n.push(p):t.push(p)}function l(d,u,f,m,v,g){const p=a(d,u,f,m,v,g);f.transmission>0?i.unshift(p):f.transparent===!0?n.unshift(p):t.unshift(p)}function c(d,u){t.length>1&&t.sort(d||cS),i.length>1&&i.sort(u||jf),n.length>1&&n.sort(u||jf)}function h(){for(let d=e,u=r.length;d<u;d++){const f=r[d];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:s,push:o,unshift:l,finish:h,sort:c}}function hS(){let r=new WeakMap;function e(i,n){const s=r.get(i);let a;return s===void 0?(a=new $f,r.set(i,[a])):n>=s.length?(a=new $f,s.push(a)):a=s[n],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function dS(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new M,color:new fe};break;case"SpotLight":t={position:new M,direction:new M,color:new fe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new M,color:new fe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new M,skyColor:new fe,groundColor:new fe};break;case"RectAreaLight":t={color:new fe,position:new M,halfWidth:new M,halfHeight:new M};break}return r[e.id]=t,t}}}function uS(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Z};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Z};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Z,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let fS=0;function pS(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function mS(r){const e=new dS,t=uS(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new M);const n=new M,s=new Ne,a=new Ne;function o(c){let h=0,d=0,u=0;for(let b=0;b<9;b++)i.probe[b].set(0,0,0);let f=0,m=0,v=0,g=0,p=0,x=0,_=0,y=0,w=0,C=0,A=0;c.sort(pS);for(let b=0,S=c.length;b<S;b++){const N=c[b],O=N.color,k=N.intensity,H=N.distance,j=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)h+=O.r*k,d+=O.g*k,u+=O.b*k;else if(N.isLightProbe){for(let B=0;B<9;B++)i.probe[B].addScaledVector(N.sh.coefficients[B],k);A++}else if(N.isDirectionalLight){const B=e.get(N);if(B.color.copy(N.color).multiplyScalar(N.intensity),N.castShadow){const K=N.shadow,W=t.get(N);W.shadowIntensity=K.intensity,W.shadowBias=K.bias,W.shadowNormalBias=K.normalBias,W.shadowRadius=K.radius,W.shadowMapSize=K.mapSize,i.directionalShadow[f]=W,i.directionalShadowMap[f]=j,i.directionalShadowMatrix[f]=N.shadow.matrix,x++}i.directional[f]=B,f++}else if(N.isSpotLight){const B=e.get(N);B.position.setFromMatrixPosition(N.matrixWorld),B.color.copy(O).multiplyScalar(k),B.distance=H,B.coneCos=Math.cos(N.angle),B.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),B.decay=N.decay,i.spot[v]=B;const K=N.shadow;if(N.map&&(i.spotLightMap[w]=N.map,w++,K.updateMatrices(N),N.castShadow&&C++),i.spotLightMatrix[v]=K.matrix,N.castShadow){const W=t.get(N);W.shadowIntensity=K.intensity,W.shadowBias=K.bias,W.shadowNormalBias=K.normalBias,W.shadowRadius=K.radius,W.shadowMapSize=K.mapSize,i.spotShadow[v]=W,i.spotShadowMap[v]=j,y++}v++}else if(N.isRectAreaLight){const B=e.get(N);B.color.copy(O).multiplyScalar(k),B.halfWidth.set(N.width*.5,0,0),B.halfHeight.set(0,N.height*.5,0),i.rectArea[g]=B,g++}else if(N.isPointLight){const B=e.get(N);if(B.color.copy(N.color).multiplyScalar(N.intensity),B.distance=N.distance,B.decay=N.decay,N.castShadow){const K=N.shadow,W=t.get(N);W.shadowIntensity=K.intensity,W.shadowBias=K.bias,W.shadowNormalBias=K.normalBias,W.shadowRadius=K.radius,W.shadowMapSize=K.mapSize,W.shadowCameraNear=K.camera.near,W.shadowCameraFar=K.camera.far,i.pointShadow[m]=W,i.pointShadowMap[m]=j,i.pointShadowMatrix[m]=N.shadow.matrix,_++}i.point[m]=B,m++}else if(N.isHemisphereLight){const B=e.get(N);B.skyColor.copy(N.color).multiplyScalar(k),B.groundColor.copy(N.groundColor).multiplyScalar(k),i.hemi[p]=B,p++}}g>0&&(r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=he.LTC_FLOAT_1,i.rectAreaLTC2=he.LTC_FLOAT_2):(i.rectAreaLTC1=he.LTC_HALF_1,i.rectAreaLTC2=he.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=u;const L=i.hash;(L.directionalLength!==f||L.pointLength!==m||L.spotLength!==v||L.rectAreaLength!==g||L.hemiLength!==p||L.numDirectionalShadows!==x||L.numPointShadows!==_||L.numSpotShadows!==y||L.numSpotMaps!==w||L.numLightProbes!==A)&&(i.directional.length=f,i.spot.length=v,i.rectArea.length=g,i.point.length=m,i.hemi.length=p,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=_,i.pointShadowMap.length=_,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=_,i.spotLightMatrix.length=y+w-C,i.spotLightMap.length=w,i.numSpotLightShadowsWithMaps=C,i.numLightProbes=A,L.directionalLength=f,L.pointLength=m,L.spotLength=v,L.rectAreaLength=g,L.hemiLength=p,L.numDirectionalShadows=x,L.numPointShadows=_,L.numSpotShadows=y,L.numSpotMaps=w,L.numLightProbes=A,i.version=fS++)}function l(c,h){let d=0,u=0,f=0,m=0,v=0;const g=h.matrixWorldInverse;for(let p=0,x=c.length;p<x;p++){const _=c[p];if(_.isDirectionalLight){const y=i.directional[d];y.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),y.direction.sub(n),y.direction.transformDirection(g),d++}else if(_.isSpotLight){const y=i.spot[f];y.position.setFromMatrixPosition(_.matrixWorld),y.position.applyMatrix4(g),y.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),y.direction.sub(n),y.direction.transformDirection(g),f++}else if(_.isRectAreaLight){const y=i.rectArea[m];y.position.setFromMatrixPosition(_.matrixWorld),y.position.applyMatrix4(g),a.identity(),s.copy(_.matrixWorld),s.premultiply(g),a.extractRotation(s),y.halfWidth.set(_.width*.5,0,0),y.halfHeight.set(0,_.height*.5,0),y.halfWidth.applyMatrix4(a),y.halfHeight.applyMatrix4(a),m++}else if(_.isPointLight){const y=i.point[u];y.position.setFromMatrixPosition(_.matrixWorld),y.position.applyMatrix4(g),u++}else if(_.isHemisphereLight){const y=i.hemi[v];y.direction.setFromMatrixPosition(_.matrixWorld),y.direction.transformDirection(g),v++}}}return{setup:o,setupView:l,state:i}}function Xf(r){const e=new mS(r),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function s(h){t.push(h)}function a(h){i.push(h)}function o(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:o,setupLightsView:l,pushLight:s,pushShadow:a}}function gS(r){let e=new WeakMap;function t(n,s=0){const a=e.get(n);let o;return a===void 0?(o=new Xf(r),e.set(n,[o])):s>=a.length?(o=new Xf(r),a.push(o)):o=a[s],o}function i(){e=new WeakMap}return{get:t,dispose:i}}const vS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,yS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function _S(r,e,t){let i=new Ul;const n=new Z,s=new Z,a=new Ke,o=new Mm({depthPacking:pl}),l=new fy,c={},h=t.maxTextureSize,d={[En]:Qt,[Qt]:En,[$t]:$t},u=new Ot({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Z},radius:{value:4}},vertexShader:vS,fragmentShader:yS}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const m=new At;m.setAttribute("position",new Ct(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new st(m,u),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Bp;let p=this.type;this.render=function(C,A,L){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||C.length===0)return;const b=r.getRenderTarget(),S=r.getActiveCubeFace(),N=r.getActiveMipmapLevel(),O=r.state;O.setBlending(ei),O.buffers.color.setClear(1,1,1,1),O.buffers.depth.setTest(!0),O.setScissorTest(!1);const k=p!==On&&this.type===On,H=p===On&&this.type!==On;for(let j=0,B=C.length;j<B;j++){const K=C[j],W=K.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",K,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;n.copy(W.mapSize);const oe=W.getFrameExtents();if(n.multiply(oe),s.copy(W.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(s.x=Math.floor(h/oe.x),n.x=s.x*oe.x,W.mapSize.x=s.x),n.y>h&&(s.y=Math.floor(h/oe.y),n.y=s.y*oe.y,W.mapSize.y=s.y)),W.map===null||k===!0||H===!0){const _e=this.type!==On?{minFilter:Bt,magFilter:Bt}:{};W.map!==null&&W.map.dispose(),W.map=new kt(n.x,n.y,_e),W.map.texture.name=K.name+".shadowMap",W.camera.updateProjectionMatrix()}r.setRenderTarget(W.map),r.clear();const me=W.getViewportCount();for(let _e=0;_e<me;_e++){const ze=W.getViewport(_e);a.set(s.x*ze.x,s.y*ze.y,s.x*ze.z,s.y*ze.w),O.viewport(a),W.updateMatrices(K,_e),i=W.getFrustum(),y(A,L,W.camera,K,this.type)}W.isPointLightShadow!==!0&&this.type===On&&x(W,L),W.needsUpdate=!1}p=this.type,g.needsUpdate=!1,r.setRenderTarget(b,S,N)};function x(C,A){const L=e.update(v);u.defines.VSM_SAMPLES!==C.blurSamples&&(u.defines.VSM_SAMPLES=C.blurSamples,f.defines.VSM_SAMPLES=C.blurSamples,u.needsUpdate=!0,f.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new kt(n.x,n.y)),u.uniforms.shadow_pass.value=C.map.texture,u.uniforms.resolution.value=C.mapSize,u.uniforms.radius.value=C.radius,r.setRenderTarget(C.mapPass),r.clear(),r.renderBufferDirect(A,null,L,u,v,null),f.uniforms.shadow_pass.value=C.mapPass.texture,f.uniforms.resolution.value=C.mapSize,f.uniforms.radius.value=C.radius,r.setRenderTarget(C.map),r.clear(),r.renderBufferDirect(A,null,L,f,v,null)}function _(C,A,L,b){let S=null;const N=L.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(N!==void 0)S=N;else if(S=L.isPointLight===!0?l:o,r.localClippingEnabled&&A.clipShadows===!0&&Array.isArray(A.clippingPlanes)&&A.clippingPlanes.length!==0||A.displacementMap&&A.displacementScale!==0||A.alphaMap&&A.alphaTest>0||A.map&&A.alphaTest>0||A.alphaToCoverage===!0){const O=S.uuid,k=A.uuid;let H=c[O];H===void 0&&(H={},c[O]=H);let j=H[k];j===void 0&&(j=S.clone(),H[k]=j,A.addEventListener("dispose",w)),S=j}if(S.visible=A.visible,S.wireframe=A.wireframe,b===On?S.side=A.shadowSide!==null?A.shadowSide:A.side:S.side=A.shadowSide!==null?A.shadowSide:d[A.side],S.alphaMap=A.alphaMap,S.alphaTest=A.alphaToCoverage===!0?.5:A.alphaTest,S.map=A.map,S.clipShadows=A.clipShadows,S.clippingPlanes=A.clippingPlanes,S.clipIntersection=A.clipIntersection,S.displacementMap=A.displacementMap,S.displacementScale=A.displacementScale,S.displacementBias=A.displacementBias,S.wireframeLinewidth=A.wireframeLinewidth,S.linewidth=A.linewidth,L.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const O=r.properties.get(S);O.light=L}return S}function y(C,A,L,b,S){if(C.visible===!1)return;if(C.layers.test(A.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&S===On)&&(!C.frustumCulled||i.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,C.matrixWorld);const k=e.update(C),H=C.material;if(Array.isArray(H)){const j=k.groups;for(let B=0,K=j.length;B<K;B++){const W=j[B],oe=H[W.materialIndex];if(oe&&oe.visible){const me=_(C,oe,b,S);C.onBeforeShadow(r,C,A,L,k,me,W),r.renderBufferDirect(L,null,k,me,C,W),C.onAfterShadow(r,C,A,L,k,me,W)}}}else if(H.visible){const j=_(C,H,b,S);C.onBeforeShadow(r,C,A,L,k,j,null),r.renderBufferDirect(L,null,k,j,C,null),C.onAfterShadow(r,C,A,L,k,j,null)}}const O=C.children;for(let k=0,H=O.length;k<H;k++)y(O[k],A,L,b,S)}function w(C){C.target.removeEventListener("dispose",w);for(const L in c){const b=c[L],S=C.target.uuid;S in b&&(b[S].dispose(),delete b[S])}}}const xS={[ih]:nh,[sh]:oh,[rh]:lh,[Cr]:ah,[nh]:ih,[oh]:sh,[lh]:rh,[ah]:Cr};function bS(r,e){function t(){let I=!1;const ge=new Ke;let ie=null;const Ee=new Ke(0,0,0,0);return{setMask:function(se){ie!==se&&!I&&(r.colorMask(se,se,se,se),ie=se)},setLocked:function(se){I=se},setClear:function(se,J,Ce,We,St){St===!0&&(se*=We,J*=We,Ce*=We),ge.set(se,J,Ce,We),Ee.equals(ge)===!1&&(r.clearColor(se,J,Ce,We),Ee.copy(ge))},reset:function(){I=!1,ie=null,Ee.set(-1,0,0,0)}}}function i(){let I=!1,ge=!1,ie=null,Ee=null,se=null;return{setReversed:function(J){if(ge!==J){const Ce=e.get("EXT_clip_control");J?Ce.clipControlEXT(Ce.LOWER_LEFT_EXT,Ce.ZERO_TO_ONE_EXT):Ce.clipControlEXT(Ce.LOWER_LEFT_EXT,Ce.NEGATIVE_ONE_TO_ONE_EXT),ge=J;const We=se;se=null,this.setClear(We)}},getReversed:function(){return ge},setTest:function(J){J?ye(r.DEPTH_TEST):De(r.DEPTH_TEST)},setMask:function(J){ie!==J&&!I&&(r.depthMask(J),ie=J)},setFunc:function(J){if(ge&&(J=xS[J]),Ee!==J){switch(J){case ih:r.depthFunc(r.NEVER);break;case nh:r.depthFunc(r.ALWAYS);break;case sh:r.depthFunc(r.LESS);break;case Cr:r.depthFunc(r.LEQUAL);break;case rh:r.depthFunc(r.EQUAL);break;case ah:r.depthFunc(r.GEQUAL);break;case oh:r.depthFunc(r.GREATER);break;case lh:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Ee=J}},setLocked:function(J){I=J},setClear:function(J){se!==J&&(ge&&(J=1-J),r.clearDepth(J),se=J)},reset:function(){I=!1,ie=null,Ee=null,se=null,ge=!1}}}function n(){let I=!1,ge=null,ie=null,Ee=null,se=null,J=null,Ce=null,We=null,St=null;return{setTest:function(ct){I||(ct?ye(r.STENCIL_TEST):De(r.STENCIL_TEST))},setMask:function(ct){ge!==ct&&!I&&(r.stencilMask(ct),ge=ct)},setFunc:function(ct,tn,Pn){(ie!==ct||Ee!==tn||se!==Pn)&&(r.stencilFunc(ct,tn,Pn),ie=ct,Ee=tn,se=Pn)},setOp:function(ct,tn,Pn){(J!==ct||Ce!==tn||We!==Pn)&&(r.stencilOp(ct,tn,Pn),J=ct,Ce=tn,We=Pn)},setLocked:function(ct){I=ct},setClear:function(ct){St!==ct&&(r.clearStencil(ct),St=ct)},reset:function(){I=!1,ge=null,ie=null,Ee=null,se=null,J=null,Ce=null,We=null,St=null}}}const s=new t,a=new i,o=new n,l=new WeakMap,c=new WeakMap;let h={},d={},u=new WeakMap,f=[],m=null,v=!1,g=null,p=null,x=null,_=null,y=null,w=null,C=null,A=new fe(0,0,0),L=0,b=!1,S=null,N=null,O=null,k=null,H=null;const j=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let B=!1,K=0;const W=r.getParameter(r.VERSION);W.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(W)[1]),B=K>=1):W.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),B=K>=2);let oe=null,me={};const _e=r.getParameter(r.SCISSOR_BOX),ze=r.getParameter(r.VIEWPORT),Je=new Ke().fromArray(_e),X=new Ke().fromArray(ze);function re(I,ge,ie,Ee){const se=new Uint8Array(4),J=r.createTexture();r.bindTexture(I,J),r.texParameteri(I,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(I,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Ce=0;Ce<ie;Ce++)I===r.TEXTURE_3D||I===r.TEXTURE_2D_ARRAY?r.texImage3D(ge,0,r.RGBA,1,1,Ee,0,r.RGBA,r.UNSIGNED_BYTE,se):r.texImage2D(ge+Ce,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,se);return J}const Re={};Re[r.TEXTURE_2D]=re(r.TEXTURE_2D,r.TEXTURE_2D,1),Re[r.TEXTURE_CUBE_MAP]=re(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Re[r.TEXTURE_2D_ARRAY]=re(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Re[r.TEXTURE_3D]=re(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),ye(r.DEPTH_TEST),a.setFunc(Cr),te(!1),ce(xu),ye(r.CULL_FACE),R(ei);function ye(I){h[I]!==!0&&(r.enable(I),h[I]=!0)}function De(I){h[I]!==!1&&(r.disable(I),h[I]=!1)}function je(I,ge){return d[I]!==ge?(r.bindFramebuffer(I,ge),d[I]=ge,I===r.DRAW_FRAMEBUFFER&&(d[r.FRAMEBUFFER]=ge),I===r.FRAMEBUFFER&&(d[r.DRAW_FRAMEBUFFER]=ge),!0):!1}function ke(I,ge){let ie=f,Ee=!1;if(I){ie=u.get(ge),ie===void 0&&(ie=[],u.set(ge,ie));const se=I.textures;if(ie.length!==se.length||ie[0]!==r.COLOR_ATTACHMENT0){for(let J=0,Ce=se.length;J<Ce;J++)ie[J]=r.COLOR_ATTACHMENT0+J;ie.length=se.length,Ee=!0}}else ie[0]!==r.BACK&&(ie[0]=r.BACK,Ee=!0);Ee&&r.drawBuffers(ie)}function Mt(I){return m!==I?(r.useProgram(I),m=I,!0):!1}const rt={[Is]:r.FUNC_ADD,[i0]:r.FUNC_SUBTRACT,[n0]:r.FUNC_REVERSE_SUBTRACT};rt[s0]=r.MIN,rt[r0]=r.MAX;const $e={[a0]:r.ZERO,[o0]:r.ONE,[l0]:r.SRC_COLOR,[eh]:r.SRC_ALPHA,[p0]:r.SRC_ALPHA_SATURATE,[u0]:r.DST_COLOR,[h0]:r.DST_ALPHA,[c0]:r.ONE_MINUS_SRC_COLOR,[th]:r.ONE_MINUS_SRC_ALPHA,[f0]:r.ONE_MINUS_DST_COLOR,[d0]:r.ONE_MINUS_DST_ALPHA,[m0]:r.CONSTANT_COLOR,[g0]:r.ONE_MINUS_CONSTANT_COLOR,[v0]:r.CONSTANT_ALPHA,[y0]:r.ONE_MINUS_CONSTANT_ALPHA};function R(I,ge,ie,Ee,se,J,Ce,We,St,ct){if(I===ei){v===!0&&(De(r.BLEND),v=!1);return}if(v===!1&&(ye(r.BLEND),v=!0),I!==t0){if(I!==g||ct!==b){if((p!==Is||y!==Is)&&(r.blendEquation(r.FUNC_ADD),p=Is,y=Is),ct)switch(I){case vr:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Qc:r.blendFunc(r.ONE,r.ONE);break;case bu:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Mu:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}else switch(I){case vr:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Qc:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case bu:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Mu:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}x=null,_=null,w=null,C=null,A.set(0,0,0),L=0,g=I,b=ct}return}se=se||ge,J=J||ie,Ce=Ce||Ee,(ge!==p||se!==y)&&(r.blendEquationSeparate(rt[ge],rt[se]),p=ge,y=se),(ie!==x||Ee!==_||J!==w||Ce!==C)&&(r.blendFuncSeparate($e[ie],$e[Ee],$e[J],$e[Ce]),x=ie,_=Ee,w=J,C=Ce),(We.equals(A)===!1||St!==L)&&(r.blendColor(We.r,We.g,We.b,St),A.copy(We),L=St),g=I,b=!1}function le(I,ge){I.side===$t?De(r.CULL_FACE):ye(r.CULL_FACE);let ie=I.side===Qt;ge&&(ie=!ie),te(ie),I.blending===vr&&I.transparent===!1?R(ei):R(I.blending,I.blendEquation,I.blendSrc,I.blendDst,I.blendEquationAlpha,I.blendSrcAlpha,I.blendDstAlpha,I.blendColor,I.blendAlpha,I.premultipliedAlpha),a.setFunc(I.depthFunc),a.setTest(I.depthTest),a.setMask(I.depthWrite),s.setMask(I.colorWrite);const Ee=I.stencilWrite;o.setTest(Ee),Ee&&(o.setMask(I.stencilWriteMask),o.setFunc(I.stencilFunc,I.stencilRef,I.stencilFuncMask),o.setOp(I.stencilFail,I.stencilZFail,I.stencilZPass)),be(I.polygonOffset,I.polygonOffsetFactor,I.polygonOffsetUnits),I.alphaToCoverage===!0?ye(r.SAMPLE_ALPHA_TO_COVERAGE):De(r.SAMPLE_ALPHA_TO_COVERAGE)}function te(I){S!==I&&(I?r.frontFace(r.CW):r.frontFace(r.CCW),S=I)}function ce(I){I!==Qg?(ye(r.CULL_FACE),I!==N&&(I===xu?r.cullFace(r.BACK):I===e0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):De(r.CULL_FACE),N=I}function Y(I){I!==O&&(B&&r.lineWidth(I),O=I)}function be(I,ge,ie){I?(ye(r.POLYGON_OFFSET_FILL),(k!==ge||H!==ie)&&(r.polygonOffset(ge,ie),k=ge,H=ie)):De(r.POLYGON_OFFSET_FILL)}function ne(I){I?ye(r.SCISSOR_TEST):De(r.SCISSOR_TEST)}function Me(I){I===void 0&&(I=r.TEXTURE0+j-1),oe!==I&&(r.activeTexture(I),oe=I)}function Ve(I,ge,ie){ie===void 0&&(oe===null?ie=r.TEXTURE0+j-1:ie=oe);let Ee=me[ie];Ee===void 0&&(Ee={type:void 0,texture:void 0},me[ie]=Ee),(Ee.type!==I||Ee.texture!==ge)&&(oe!==ie&&(r.activeTexture(ie),oe=ie),r.bindTexture(I,ge||Re[I]),Ee.type=I,Ee.texture=ge)}function D(){const I=me[oe];I!==void 0&&I.type!==void 0&&(r.bindTexture(I.type,null),I.type=void 0,I.texture=void 0)}function T(){try{r.compressedTexImage2D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function F(){try{r.compressedTexImage3D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function $(){try{r.texSubImage2D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Q(){try{r.texSubImage3D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function q(){try{r.compressedTexSubImage2D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Pe(){try{r.compressedTexSubImage3D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function de(){try{r.texStorage2D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Te(){try{r.texStorage3D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Le(){try{r.texImage2D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function ee(){try{r.texImage3D(...arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Se(I){Je.equals(I)===!1&&(r.scissor(I.x,I.y,I.z,I.w),Je.copy(I))}function Fe(I){X.equals(I)===!1&&(r.viewport(I.x,I.y,I.z,I.w),X.copy(I))}function Ue(I,ge){let ie=c.get(ge);ie===void 0&&(ie=new WeakMap,c.set(ge,ie));let Ee=ie.get(I);Ee===void 0&&(Ee=r.getUniformBlockIndex(ge,I.name),ie.set(I,Ee))}function pe(I,ge){const Ee=c.get(ge).get(I);l.get(ge)!==Ee&&(r.uniformBlockBinding(ge,Ee,I.__bindingPointIndex),l.set(ge,Ee))}function Ge(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},oe=null,me={},d={},u=new WeakMap,f=[],m=null,v=!1,g=null,p=null,x=null,_=null,y=null,w=null,C=null,A=new fe(0,0,0),L=0,b=!1,S=null,N=null,O=null,k=null,H=null,Je.set(0,0,r.canvas.width,r.canvas.height),X.set(0,0,r.canvas.width,r.canvas.height),s.reset(),a.reset(),o.reset()}return{buffers:{color:s,depth:a,stencil:o},enable:ye,disable:De,bindFramebuffer:je,drawBuffers:ke,useProgram:Mt,setBlending:R,setMaterial:le,setFlipSided:te,setCullFace:ce,setLineWidth:Y,setPolygonOffset:be,setScissorTest:ne,activeTexture:Me,bindTexture:Ve,unbindTexture:D,compressedTexImage2D:T,compressedTexImage3D:F,texImage2D:Le,texImage3D:ee,updateUBOMapping:Ue,uniformBlockBinding:pe,texStorage2D:de,texStorage3D:Te,texSubImage2D:$,texSubImage3D:Q,compressedTexSubImage2D:q,compressedTexSubImage3D:Pe,scissor:Se,viewport:Fe,reset:Ge}}function MS(r,e,t,i,n,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Z,h=new WeakMap;let d;const u=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(D,T){return f?new OffscreenCanvas(D,T):Oa("canvas")}function v(D,T,F){let $=1;const Q=Ve(D);if((Q.width>F||Q.height>F)&&($=F/Math.max(Q.width,Q.height)),$<1)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap||typeof VideoFrame<"u"&&D instanceof VideoFrame){const q=Math.floor($*Q.width),Pe=Math.floor($*Q.height);d===void 0&&(d=m(q,Pe));const de=T?m(q,Pe):d;return de.width=q,de.height=Pe,de.getContext("2d").drawImage(D,0,0,q,Pe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+Q.width+"x"+Q.height+") to ("+q+"x"+Pe+")."),de}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+Q.width+"x"+Q.height+")."),D;return D}function g(D){return D.generateMipmaps}function p(D){r.generateMipmap(D)}function x(D){return D.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:D.isWebGL3DRenderTarget?r.TEXTURE_3D:D.isWebGLArrayRenderTarget||D.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function _(D,T,F,$,Q=!1){if(D!==null){if(r[D]!==void 0)return r[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let q=T;if(T===r.RED&&(F===r.FLOAT&&(q=r.R32F),F===r.HALF_FLOAT&&(q=r.R16F),F===r.UNSIGNED_BYTE&&(q=r.R8)),T===r.RED_INTEGER&&(F===r.UNSIGNED_BYTE&&(q=r.R8UI),F===r.UNSIGNED_SHORT&&(q=r.R16UI),F===r.UNSIGNED_INT&&(q=r.R32UI),F===r.BYTE&&(q=r.R8I),F===r.SHORT&&(q=r.R16I),F===r.INT&&(q=r.R32I)),T===r.RG&&(F===r.FLOAT&&(q=r.RG32F),F===r.HALF_FLOAT&&(q=r.RG16F),F===r.UNSIGNED_BYTE&&(q=r.RG8)),T===r.RG_INTEGER&&(F===r.UNSIGNED_BYTE&&(q=r.RG8UI),F===r.UNSIGNED_SHORT&&(q=r.RG16UI),F===r.UNSIGNED_INT&&(q=r.RG32UI),F===r.BYTE&&(q=r.RG8I),F===r.SHORT&&(q=r.RG16I),F===r.INT&&(q=r.RG32I)),T===r.RGB_INTEGER&&(F===r.UNSIGNED_BYTE&&(q=r.RGB8UI),F===r.UNSIGNED_SHORT&&(q=r.RGB16UI),F===r.UNSIGNED_INT&&(q=r.RGB32UI),F===r.BYTE&&(q=r.RGB8I),F===r.SHORT&&(q=r.RGB16I),F===r.INT&&(q=r.RGB32I)),T===r.RGBA_INTEGER&&(F===r.UNSIGNED_BYTE&&(q=r.RGBA8UI),F===r.UNSIGNED_SHORT&&(q=r.RGBA16UI),F===r.UNSIGNED_INT&&(q=r.RGBA32UI),F===r.BYTE&&(q=r.RGBA8I),F===r.SHORT&&(q=r.RGBA16I),F===r.INT&&(q=r.RGBA32I)),T===r.RGB&&F===r.UNSIGNED_INT_5_9_9_9_REV&&(q=r.RGB9_E5),T===r.RGBA){const Pe=Q?ml:nt.getTransfer($);F===r.FLOAT&&(q=r.RGBA32F),F===r.HALF_FLOAT&&(q=r.RGBA16F),F===r.UNSIGNED_BYTE&&(q=Pe===pt?r.SRGB8_ALPHA8:r.RGBA8),F===r.UNSIGNED_SHORT_4_4_4_4&&(q=r.RGBA4),F===r.UNSIGNED_SHORT_5_5_5_1&&(q=r.RGB5_A1)}return(q===r.R16F||q===r.R32F||q===r.RG16F||q===r.RG32F||q===r.RGBA16F||q===r.RGBA32F)&&e.get("EXT_color_buffer_float"),q}function y(D,T){let F;return D?T===null||T===ms||T===Lr?F=r.DEPTH24_STENCIL8:T===Xi?F=r.DEPTH32F_STENCIL8:T===Da&&(F=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):T===null||T===ms||T===Lr?F=r.DEPTH_COMPONENT24:T===Xi?F=r.DEPTH_COMPONENT32F:T===Da&&(F=r.DEPTH_COMPONENT16),F}function w(D,T){return g(D)===!0||D.isFramebufferTexture&&D.minFilter!==Bt&&D.minFilter!==Xt?Math.log2(Math.max(T.width,T.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?T.mipmaps.length:1}function C(D){const T=D.target;T.removeEventListener("dispose",C),L(T),T.isVideoTexture&&h.delete(T)}function A(D){const T=D.target;T.removeEventListener("dispose",A),S(T)}function L(D){const T=i.get(D);if(T.__webglInit===void 0)return;const F=D.source,$=u.get(F);if($){const Q=$[T.__cacheKey];Q.usedTimes--,Q.usedTimes===0&&b(D),Object.keys($).length===0&&u.delete(F)}i.remove(D)}function b(D){const T=i.get(D);r.deleteTexture(T.__webglTexture);const F=D.source,$=u.get(F);delete $[T.__cacheKey],a.memory.textures--}function S(D){const T=i.get(D);if(D.depthTexture&&(D.depthTexture.dispose(),i.remove(D.depthTexture)),D.isWebGLCubeRenderTarget)for(let $=0;$<6;$++){if(Array.isArray(T.__webglFramebuffer[$]))for(let Q=0;Q<T.__webglFramebuffer[$].length;Q++)r.deleteFramebuffer(T.__webglFramebuffer[$][Q]);else r.deleteFramebuffer(T.__webglFramebuffer[$]);T.__webglDepthbuffer&&r.deleteRenderbuffer(T.__webglDepthbuffer[$])}else{if(Array.isArray(T.__webglFramebuffer))for(let $=0;$<T.__webglFramebuffer.length;$++)r.deleteFramebuffer(T.__webglFramebuffer[$]);else r.deleteFramebuffer(T.__webglFramebuffer);if(T.__webglDepthbuffer&&r.deleteRenderbuffer(T.__webglDepthbuffer),T.__webglMultisampledFramebuffer&&r.deleteFramebuffer(T.__webglMultisampledFramebuffer),T.__webglColorRenderbuffer)for(let $=0;$<T.__webglColorRenderbuffer.length;$++)T.__webglColorRenderbuffer[$]&&r.deleteRenderbuffer(T.__webglColorRenderbuffer[$]);T.__webglDepthRenderbuffer&&r.deleteRenderbuffer(T.__webglDepthRenderbuffer)}const F=D.textures;for(let $=0,Q=F.length;$<Q;$++){const q=i.get(F[$]);q.__webglTexture&&(r.deleteTexture(q.__webglTexture),a.memory.textures--),i.remove(F[$])}i.remove(D)}let N=0;function O(){N=0}function k(){const D=N;return D>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+n.maxTextures),N+=1,D}function H(D){const T=[];return T.push(D.wrapS),T.push(D.wrapT),T.push(D.wrapR||0),T.push(D.magFilter),T.push(D.minFilter),T.push(D.anisotropy),T.push(D.internalFormat),T.push(D.format),T.push(D.type),T.push(D.generateMipmaps),T.push(D.premultiplyAlpha),T.push(D.flipY),T.push(D.unpackAlignment),T.push(D.colorSpace),T.join()}function j(D,T){const F=i.get(D);if(D.isVideoTexture&&ne(D),D.isRenderTargetTexture===!1&&D.version>0&&F.__version!==D.version){const $=D.image;if($===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if($.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Re(F,D,T);return}}t.bindTexture(r.TEXTURE_2D,F.__webglTexture,r.TEXTURE0+T)}function B(D,T){const F=i.get(D);if(D.version>0&&F.__version!==D.version){Re(F,D,T);return}t.bindTexture(r.TEXTURE_2D_ARRAY,F.__webglTexture,r.TEXTURE0+T)}function K(D,T){const F=i.get(D);if(D.version>0&&F.__version!==D.version){Re(F,D,T);return}t.bindTexture(r.TEXTURE_3D,F.__webglTexture,r.TEXTURE0+T)}function W(D,T){const F=i.get(D);if(D.version>0&&F.__version!==D.version){ye(F,D,T);return}t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+T)}const oe={[ps]:r.REPEAT,[rs]:r.CLAMP_TO_EDGE,[fl]:r.MIRRORED_REPEAT},me={[Bt]:r.NEAREST,[Vp]:r.NEAREST_MIPMAP_NEAREST,[va]:r.NEAREST_MIPMAP_LINEAR,[Xt]:r.LINEAR,[il]:r.LINEAR_MIPMAP_NEAREST,[Gn]:r.LINEAR_MIPMAP_LINEAR},_e={[D0]:r.NEVER,[U0]:r.ALWAYS,[N0]:r.LESS,[Kp]:r.LEQUAL,[I0]:r.EQUAL,[z0]:r.GEQUAL,[k0]:r.GREATER,[O0]:r.NOTEQUAL};function ze(D,T){if(T.type===Xi&&e.has("OES_texture_float_linear")===!1&&(T.magFilter===Xt||T.magFilter===il||T.magFilter===va||T.magFilter===Gn||T.minFilter===Xt||T.minFilter===il||T.minFilter===va||T.minFilter===Gn)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(D,r.TEXTURE_WRAP_S,oe[T.wrapS]),r.texParameteri(D,r.TEXTURE_WRAP_T,oe[T.wrapT]),(D===r.TEXTURE_3D||D===r.TEXTURE_2D_ARRAY)&&r.texParameteri(D,r.TEXTURE_WRAP_R,oe[T.wrapR]),r.texParameteri(D,r.TEXTURE_MAG_FILTER,me[T.magFilter]),r.texParameteri(D,r.TEXTURE_MIN_FILTER,me[T.minFilter]),T.compareFunction&&(r.texParameteri(D,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(D,r.TEXTURE_COMPARE_FUNC,_e[T.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(T.magFilter===Bt||T.minFilter!==va&&T.minFilter!==Gn||T.type===Xi&&e.has("OES_texture_float_linear")===!1)return;if(T.anisotropy>1||i.get(T).__currentAnisotropy){const F=e.get("EXT_texture_filter_anisotropic");r.texParameterf(D,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,n.getMaxAnisotropy())),i.get(T).__currentAnisotropy=T.anisotropy}}}function Je(D,T){let F=!1;D.__webglInit===void 0&&(D.__webglInit=!0,T.addEventListener("dispose",C));const $=T.source;let Q=u.get($);Q===void 0&&(Q={},u.set($,Q));const q=H(T);if(q!==D.__cacheKey){Q[q]===void 0&&(Q[q]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,F=!0),Q[q].usedTimes++;const Pe=Q[D.__cacheKey];Pe!==void 0&&(Q[D.__cacheKey].usedTimes--,Pe.usedTimes===0&&b(T)),D.__cacheKey=q,D.__webglTexture=Q[q].texture}return F}function X(D,T,F){return Math.floor(Math.floor(D/F)/T)}function re(D,T,F,$){const q=D.updateRanges;if(q.length===0)t.texSubImage2D(r.TEXTURE_2D,0,0,0,T.width,T.height,F,$,T.data);else{q.sort((ee,Se)=>ee.start-Se.start);let Pe=0;for(let ee=1;ee<q.length;ee++){const Se=q[Pe],Fe=q[ee],Ue=Se.start+Se.count,pe=X(Fe.start,T.width,4),Ge=X(Se.start,T.width,4);Fe.start<=Ue+1&&pe===Ge&&X(Fe.start+Fe.count-1,T.width,4)===pe?Se.count=Math.max(Se.count,Fe.start+Fe.count-Se.start):(++Pe,q[Pe]=Fe)}q.length=Pe+1;const de=r.getParameter(r.UNPACK_ROW_LENGTH),Te=r.getParameter(r.UNPACK_SKIP_PIXELS),Le=r.getParameter(r.UNPACK_SKIP_ROWS);r.pixelStorei(r.UNPACK_ROW_LENGTH,T.width);for(let ee=0,Se=q.length;ee<Se;ee++){const Fe=q[ee],Ue=Math.floor(Fe.start/4),pe=Math.ceil(Fe.count/4),Ge=Ue%T.width,I=Math.floor(Ue/T.width),ge=pe,ie=1;r.pixelStorei(r.UNPACK_SKIP_PIXELS,Ge),r.pixelStorei(r.UNPACK_SKIP_ROWS,I),t.texSubImage2D(r.TEXTURE_2D,0,Ge,I,ge,ie,F,$,T.data)}D.clearUpdateRanges(),r.pixelStorei(r.UNPACK_ROW_LENGTH,de),r.pixelStorei(r.UNPACK_SKIP_PIXELS,Te),r.pixelStorei(r.UNPACK_SKIP_ROWS,Le)}}function Re(D,T,F){let $=r.TEXTURE_2D;(T.isDataArrayTexture||T.isCompressedArrayTexture)&&($=r.TEXTURE_2D_ARRAY),T.isData3DTexture&&($=r.TEXTURE_3D);const Q=Je(D,T),q=T.source;t.bindTexture($,D.__webglTexture,r.TEXTURE0+F);const Pe=i.get(q);if(q.version!==Pe.__version||Q===!0){t.activeTexture(r.TEXTURE0+F);const de=nt.getPrimaries(nt.workingColorSpace),Te=T.colorSpace===xn?null:nt.getPrimaries(T.colorSpace),Le=T.colorSpace===xn||de===Te?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,T.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,T.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Le);let ee=v(T.image,!1,n.maxTextureSize);ee=Me(T,ee);const Se=s.convert(T.format,T.colorSpace),Fe=s.convert(T.type);let Ue=_(T.internalFormat,Se,Fe,T.colorSpace,T.isVideoTexture);ze($,T);let pe;const Ge=T.mipmaps,I=T.isVideoTexture!==!0,ge=Pe.__version===void 0||Q===!0,ie=q.dataReady,Ee=w(T,ee);if(T.isDepthTexture)Ue=y(T.format===Rr,T.type),ge&&(I?t.texStorage2D(r.TEXTURE_2D,1,Ue,ee.width,ee.height):t.texImage2D(r.TEXTURE_2D,0,Ue,ee.width,ee.height,0,Se,Fe,null));else if(T.isDataTexture)if(Ge.length>0){I&&ge&&t.texStorage2D(r.TEXTURE_2D,Ee,Ue,Ge[0].width,Ge[0].height);for(let se=0,J=Ge.length;se<J;se++)pe=Ge[se],I?ie&&t.texSubImage2D(r.TEXTURE_2D,se,0,0,pe.width,pe.height,Se,Fe,pe.data):t.texImage2D(r.TEXTURE_2D,se,Ue,pe.width,pe.height,0,Se,Fe,pe.data);T.generateMipmaps=!1}else I?(ge&&t.texStorage2D(r.TEXTURE_2D,Ee,Ue,ee.width,ee.height),ie&&re(T,ee,Se,Fe)):t.texImage2D(r.TEXTURE_2D,0,Ue,ee.width,ee.height,0,Se,Fe,ee.data);else if(T.isCompressedTexture)if(T.isCompressedArrayTexture){I&&ge&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ee,Ue,Ge[0].width,Ge[0].height,ee.depth);for(let se=0,J=Ge.length;se<J;se++)if(pe=Ge[se],T.format!==vi)if(Se!==null)if(I){if(ie)if(T.layerUpdates.size>0){const Ce=Sf(pe.width,pe.height,T.format,T.type);for(const We of T.layerUpdates){const St=pe.data.subarray(We*Ce/pe.data.BYTES_PER_ELEMENT,(We+1)*Ce/pe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,se,0,0,We,pe.width,pe.height,1,Se,St)}T.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,se,0,0,0,pe.width,pe.height,ee.depth,Se,pe.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,se,Ue,pe.width,pe.height,ee.depth,0,pe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else I?ie&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,se,0,0,0,pe.width,pe.height,ee.depth,Se,Fe,pe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,se,Ue,pe.width,pe.height,ee.depth,0,Se,Fe,pe.data)}else{I&&ge&&t.texStorage2D(r.TEXTURE_2D,Ee,Ue,Ge[0].width,Ge[0].height);for(let se=0,J=Ge.length;se<J;se++)pe=Ge[se],T.format!==vi?Se!==null?I?ie&&t.compressedTexSubImage2D(r.TEXTURE_2D,se,0,0,pe.width,pe.height,Se,pe.data):t.compressedTexImage2D(r.TEXTURE_2D,se,Ue,pe.width,pe.height,0,pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):I?ie&&t.texSubImage2D(r.TEXTURE_2D,se,0,0,pe.width,pe.height,Se,Fe,pe.data):t.texImage2D(r.TEXTURE_2D,se,Ue,pe.width,pe.height,0,Se,Fe,pe.data)}else if(T.isDataArrayTexture)if(I){if(ge&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ee,Ue,ee.width,ee.height,ee.depth),ie)if(T.layerUpdates.size>0){const se=Sf(ee.width,ee.height,T.format,T.type);for(const J of T.layerUpdates){const Ce=ee.data.subarray(J*se/ee.data.BYTES_PER_ELEMENT,(J+1)*se/ee.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,J,ee.width,ee.height,1,Se,Fe,Ce)}T.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ee.width,ee.height,ee.depth,Se,Fe,ee.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ue,ee.width,ee.height,ee.depth,0,Se,Fe,ee.data);else if(T.isData3DTexture)I?(ge&&t.texStorage3D(r.TEXTURE_3D,Ee,Ue,ee.width,ee.height,ee.depth),ie&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ee.width,ee.height,ee.depth,Se,Fe,ee.data)):t.texImage3D(r.TEXTURE_3D,0,Ue,ee.width,ee.height,ee.depth,0,Se,Fe,ee.data);else if(T.isFramebufferTexture){if(ge)if(I)t.texStorage2D(r.TEXTURE_2D,Ee,Ue,ee.width,ee.height);else{let se=ee.width,J=ee.height;for(let Ce=0;Ce<Ee;Ce++)t.texImage2D(r.TEXTURE_2D,Ce,Ue,se,J,0,Se,Fe,null),se>>=1,J>>=1}}else if(Ge.length>0){if(I&&ge){const se=Ve(Ge[0]);t.texStorage2D(r.TEXTURE_2D,Ee,Ue,se.width,se.height)}for(let se=0,J=Ge.length;se<J;se++)pe=Ge[se],I?ie&&t.texSubImage2D(r.TEXTURE_2D,se,0,0,Se,Fe,pe):t.texImage2D(r.TEXTURE_2D,se,Ue,Se,Fe,pe);T.generateMipmaps=!1}else if(I){if(ge){const se=Ve(ee);t.texStorage2D(r.TEXTURE_2D,Ee,Ue,se.width,se.height)}ie&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Se,Fe,ee)}else t.texImage2D(r.TEXTURE_2D,0,Ue,Se,Fe,ee);g(T)&&p($),Pe.__version=q.version,T.onUpdate&&T.onUpdate(T)}D.__version=T.version}function ye(D,T,F){if(T.image.length!==6)return;const $=Je(D,T),Q=T.source;t.bindTexture(r.TEXTURE_CUBE_MAP,D.__webglTexture,r.TEXTURE0+F);const q=i.get(Q);if(Q.version!==q.__version||$===!0){t.activeTexture(r.TEXTURE0+F);const Pe=nt.getPrimaries(nt.workingColorSpace),de=T.colorSpace===xn?null:nt.getPrimaries(T.colorSpace),Te=T.colorSpace===xn||Pe===de?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,T.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,T.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Te);const Le=T.isCompressedTexture||T.image[0].isCompressedTexture,ee=T.image[0]&&T.image[0].isDataTexture,Se=[];for(let J=0;J<6;J++)!Le&&!ee?Se[J]=v(T.image[J],!0,n.maxCubemapSize):Se[J]=ee?T.image[J].image:T.image[J],Se[J]=Me(T,Se[J]);const Fe=Se[0],Ue=s.convert(T.format,T.colorSpace),pe=s.convert(T.type),Ge=_(T.internalFormat,Ue,pe,T.colorSpace),I=T.isVideoTexture!==!0,ge=q.__version===void 0||$===!0,ie=Q.dataReady;let Ee=w(T,Fe);ze(r.TEXTURE_CUBE_MAP,T);let se;if(Le){I&&ge&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ee,Ge,Fe.width,Fe.height);for(let J=0;J<6;J++){se=Se[J].mipmaps;for(let Ce=0;Ce<se.length;Ce++){const We=se[Ce];T.format!==vi?Ue!==null?I?ie&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce,0,0,We.width,We.height,Ue,We.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce,Ge,We.width,We.height,0,We.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):I?ie&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce,0,0,We.width,We.height,Ue,pe,We.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce,Ge,We.width,We.height,0,Ue,pe,We.data)}}}else{if(se=T.mipmaps,I&&ge){se.length>0&&Ee++;const J=Ve(Se[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Ee,Ge,J.width,J.height)}for(let J=0;J<6;J++)if(ee){I?ie&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,0,0,Se[J].width,Se[J].height,Ue,pe,Se[J].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,Ge,Se[J].width,Se[J].height,0,Ue,pe,Se[J].data);for(let Ce=0;Ce<se.length;Ce++){const St=se[Ce].image[J].image;I?ie&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce+1,0,0,St.width,St.height,Ue,pe,St.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce+1,Ge,St.width,St.height,0,Ue,pe,St.data)}}else{I?ie&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,0,0,Ue,pe,Se[J]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,Ge,Ue,pe,Se[J]);for(let Ce=0;Ce<se.length;Ce++){const We=se[Ce];I?ie&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce+1,0,0,Ue,pe,We.image[J]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ce+1,Ge,Ue,pe,We.image[J])}}}g(T)&&p(r.TEXTURE_CUBE_MAP),q.__version=Q.version,T.onUpdate&&T.onUpdate(T)}D.__version=T.version}function De(D,T,F,$,Q,q){const Pe=s.convert(F.format,F.colorSpace),de=s.convert(F.type),Te=_(F.internalFormat,Pe,de,F.colorSpace),Le=i.get(T),ee=i.get(F);if(ee.__renderTarget=T,!Le.__hasExternalTextures){const Se=Math.max(1,T.width>>q),Fe=Math.max(1,T.height>>q);Q===r.TEXTURE_3D||Q===r.TEXTURE_2D_ARRAY?t.texImage3D(Q,q,Te,Se,Fe,T.depth,0,Pe,de,null):t.texImage2D(Q,q,Te,Se,Fe,0,Pe,de,null)}t.bindFramebuffer(r.FRAMEBUFFER,D),be(T)?o.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,$,Q,ee.__webglTexture,0,Y(T)):(Q===r.TEXTURE_2D||Q>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&Q<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,$,Q,ee.__webglTexture,q),t.bindFramebuffer(r.FRAMEBUFFER,null)}function je(D,T,F){if(r.bindRenderbuffer(r.RENDERBUFFER,D),T.depthBuffer){const $=T.depthTexture,Q=$&&$.isDepthTexture?$.type:null,q=y(T.stencilBuffer,Q),Pe=T.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,de=Y(T);be(T)?o.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,de,q,T.width,T.height):F?r.renderbufferStorageMultisample(r.RENDERBUFFER,de,q,T.width,T.height):r.renderbufferStorage(r.RENDERBUFFER,q,T.width,T.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Pe,r.RENDERBUFFER,D)}else{const $=T.textures;for(let Q=0;Q<$.length;Q++){const q=$[Q],Pe=s.convert(q.format,q.colorSpace),de=s.convert(q.type),Te=_(q.internalFormat,Pe,de,q.colorSpace),Le=Y(T);F&&be(T)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Le,Te,T.width,T.height):be(T)?o.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Le,Te,T.width,T.height):r.renderbufferStorage(r.RENDERBUFFER,Te,T.width,T.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function ke(D,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,D),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const $=i.get(T.depthTexture);$.__renderTarget=T,(!$.__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),j(T.depthTexture,0);const Q=$.__webglTexture,q=Y(T);if(T.depthTexture.format===Na)be(T)?o.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Q,0,q):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Q,0);else if(T.depthTexture.format===Rr)be(T)?o.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Q,0,q):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Q,0);else throw new Error("Unknown depthTexture format")}function Mt(D){const T=i.get(D),F=D.isWebGLCubeRenderTarget===!0;if(T.__boundDepthTexture!==D.depthTexture){const $=D.depthTexture;if(T.__depthDisposeCallback&&T.__depthDisposeCallback(),$){const Q=()=>{delete T.__boundDepthTexture,delete T.__depthDisposeCallback,$.removeEventListener("dispose",Q)};$.addEventListener("dispose",Q),T.__depthDisposeCallback=Q}T.__boundDepthTexture=$}if(D.depthTexture&&!T.__autoAllocateDepthBuffer){if(F)throw new Error("target.depthTexture not supported in Cube render targets");const $=D.texture.mipmaps;$&&$.length>0?ke(T.__webglFramebuffer[0],D):ke(T.__webglFramebuffer,D)}else if(F){T.__webglDepthbuffer=[];for(let $=0;$<6;$++)if(t.bindFramebuffer(r.FRAMEBUFFER,T.__webglFramebuffer[$]),T.__webglDepthbuffer[$]===void 0)T.__webglDepthbuffer[$]=r.createRenderbuffer(),je(T.__webglDepthbuffer[$],D,!1);else{const Q=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,q=T.__webglDepthbuffer[$];r.bindRenderbuffer(r.RENDERBUFFER,q),r.framebufferRenderbuffer(r.FRAMEBUFFER,Q,r.RENDERBUFFER,q)}}else{const $=D.texture.mipmaps;if($&&$.length>0?t.bindFramebuffer(r.FRAMEBUFFER,T.__webglFramebuffer[0]):t.bindFramebuffer(r.FRAMEBUFFER,T.__webglFramebuffer),T.__webglDepthbuffer===void 0)T.__webglDepthbuffer=r.createRenderbuffer(),je(T.__webglDepthbuffer,D,!1);else{const Q=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,q=T.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,q),r.framebufferRenderbuffer(r.FRAMEBUFFER,Q,r.RENDERBUFFER,q)}}t.bindFramebuffer(r.FRAMEBUFFER,null)}function rt(D,T,F){const $=i.get(D);T!==void 0&&De($.__webglFramebuffer,D,D.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),F!==void 0&&Mt(D)}function $e(D){const T=D.texture,F=i.get(D),$=i.get(T);D.addEventListener("dispose",A);const Q=D.textures,q=D.isWebGLCubeRenderTarget===!0,Pe=Q.length>1;if(Pe||($.__webglTexture===void 0&&($.__webglTexture=r.createTexture()),$.__version=T.version,a.memory.textures++),q){F.__webglFramebuffer=[];for(let de=0;de<6;de++)if(T.mipmaps&&T.mipmaps.length>0){F.__webglFramebuffer[de]=[];for(let Te=0;Te<T.mipmaps.length;Te++)F.__webglFramebuffer[de][Te]=r.createFramebuffer()}else F.__webglFramebuffer[de]=r.createFramebuffer()}else{if(T.mipmaps&&T.mipmaps.length>0){F.__webglFramebuffer=[];for(let de=0;de<T.mipmaps.length;de++)F.__webglFramebuffer[de]=r.createFramebuffer()}else F.__webglFramebuffer=r.createFramebuffer();if(Pe)for(let de=0,Te=Q.length;de<Te;de++){const Le=i.get(Q[de]);Le.__webglTexture===void 0&&(Le.__webglTexture=r.createTexture(),a.memory.textures++)}if(D.samples>0&&be(D)===!1){F.__webglMultisampledFramebuffer=r.createFramebuffer(),F.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,F.__webglMultisampledFramebuffer);for(let de=0;de<Q.length;de++){const Te=Q[de];F.__webglColorRenderbuffer[de]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,F.__webglColorRenderbuffer[de]);const Le=s.convert(Te.format,Te.colorSpace),ee=s.convert(Te.type),Se=_(Te.internalFormat,Le,ee,Te.colorSpace,D.isXRRenderTarget===!0),Fe=Y(D);r.renderbufferStorageMultisample(r.RENDERBUFFER,Fe,Se,D.width,D.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+de,r.RENDERBUFFER,F.__webglColorRenderbuffer[de])}r.bindRenderbuffer(r.RENDERBUFFER,null),D.depthBuffer&&(F.__webglDepthRenderbuffer=r.createRenderbuffer(),je(F.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(q){t.bindTexture(r.TEXTURE_CUBE_MAP,$.__webglTexture),ze(r.TEXTURE_CUBE_MAP,T);for(let de=0;de<6;de++)if(T.mipmaps&&T.mipmaps.length>0)for(let Te=0;Te<T.mipmaps.length;Te++)De(F.__webglFramebuffer[de][Te],D,T,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Te);else De(F.__webglFramebuffer[de],D,T,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0);g(T)&&p(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Pe){for(let de=0,Te=Q.length;de<Te;de++){const Le=Q[de],ee=i.get(Le);t.bindTexture(r.TEXTURE_2D,ee.__webglTexture),ze(r.TEXTURE_2D,Le),De(F.__webglFramebuffer,D,Le,r.COLOR_ATTACHMENT0+de,r.TEXTURE_2D,0),g(Le)&&p(r.TEXTURE_2D)}t.unbindTexture()}else{let de=r.TEXTURE_2D;if((D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(de=D.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(de,$.__webglTexture),ze(de,T),T.mipmaps&&T.mipmaps.length>0)for(let Te=0;Te<T.mipmaps.length;Te++)De(F.__webglFramebuffer[Te],D,T,r.COLOR_ATTACHMENT0,de,Te);else De(F.__webglFramebuffer,D,T,r.COLOR_ATTACHMENT0,de,0);g(T)&&p(de),t.unbindTexture()}D.depthBuffer&&Mt(D)}function R(D){const T=D.textures;for(let F=0,$=T.length;F<$;F++){const Q=T[F];if(g(Q)){const q=x(D),Pe=i.get(Q).__webglTexture;t.bindTexture(q,Pe),p(q),t.unbindTexture()}}}const le=[],te=[];function ce(D){if(D.samples>0){if(be(D)===!1){const T=D.textures,F=D.width,$=D.height;let Q=r.COLOR_BUFFER_BIT;const q=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Pe=i.get(D),de=T.length>1;if(de)for(let Le=0;Le<T.length;Le++)t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Le,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Le,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer);const Te=D.texture.mipmaps;Te&&Te.length>0?t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer[0]):t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer);for(let Le=0;Le<T.length;Le++){if(D.resolveDepthBuffer&&(D.depthBuffer&&(Q|=r.DEPTH_BUFFER_BIT),D.stencilBuffer&&D.resolveStencilBuffer&&(Q|=r.STENCIL_BUFFER_BIT)),de){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Pe.__webglColorRenderbuffer[Le]);const ee=i.get(T[Le]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,ee,0)}r.blitFramebuffer(0,0,F,$,0,0,F,$,Q,r.NEAREST),l===!0&&(le.length=0,te.length=0,le.push(r.COLOR_ATTACHMENT0+Le),D.depthBuffer&&D.resolveDepthBuffer===!1&&(le.push(q),te.push(q),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,te)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,le))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),de)for(let Le=0;Le<T.length;Le++){t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Le,r.RENDERBUFFER,Pe.__webglColorRenderbuffer[Le]);const ee=i.get(T[Le]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Le,r.TEXTURE_2D,ee,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer)}else if(D.depthBuffer&&D.resolveDepthBuffer===!1&&l){const T=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[T])}}}function Y(D){return Math.min(n.maxSamples,D.samples)}function be(D){const T=i.get(D);return D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&T.__useRenderToTexture!==!1}function ne(D){const T=a.render.frame;h.get(D)!==T&&(h.set(D,T),D.update())}function Me(D,T){const F=D.colorSpace,$=D.format,Q=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||F!==oi&&F!==xn&&(nt.getTransfer(F)===pt?($!==vi||Q!==Gt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",F)),T}function Ve(D){return typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement?(c.width=D.naturalWidth||D.width,c.height=D.naturalHeight||D.height):typeof VideoFrame<"u"&&D instanceof VideoFrame?(c.width=D.displayWidth,c.height=D.displayHeight):(c.width=D.width,c.height=D.height),c}this.allocateTextureUnit=k,this.resetTextureUnits=O,this.setTexture2D=j,this.setTexture2DArray=B,this.setTexture3D=K,this.setTextureCube=W,this.rebindTextures=rt,this.setupRenderTarget=$e,this.updateRenderTargetMipmap=R,this.updateMultisampleRenderTarget=ce,this.setupDepthRenderbuffer=Mt,this.setupFrameBufferTexture=De,this.useMultisampledRTT=be}function SS(r,e){function t(i,n=xn){let s;const a=nt.getTransfer(n);if(i===Gt)return r.UNSIGNED_BYTE;if(i===_d)return r.UNSIGNED_SHORT_4_4_4_4;if(i===xd)return r.UNSIGNED_SHORT_5_5_5_1;if(i===$p)return r.UNSIGNED_INT_5_9_9_9_REV;if(i===Wp)return r.BYTE;if(i===jp)return r.SHORT;if(i===Da)return r.UNSIGNED_SHORT;if(i===yd)return r.INT;if(i===ms)return r.UNSIGNED_INT;if(i===Xi)return r.FLOAT;if(i===io)return r.HALF_FLOAT;if(i===Xp)return r.ALPHA;if(i===qp)return r.RGB;if(i===vi)return r.RGBA;if(i===Na)return r.DEPTH_COMPONENT;if(i===Rr)return r.DEPTH_STENCIL;if(i===no)return r.RED;if(i===bd)return r.RED_INTEGER;if(i===Md)return r.RG;if(i===Sd)return r.RG_INTEGER;if(i===wd)return r.RGBA_INTEGER;if(i===nl||i===sl||i===rl||i===al)if(a===pt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===nl)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===sl)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===rl)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===al)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===nl)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===sl)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===rl)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===al)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===dh||i===uh||i===fh||i===ph)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===dh)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===uh)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===fh)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===ph)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===mh||i===gh||i===vh)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===mh||i===gh)return a===pt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===vh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===yh||i===_h||i===xh||i===bh||i===Mh||i===Sh||i===wh||i===Eh||i===Th||i===Ch||i===Ah||i===Ph||i===Lh||i===Rh)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===yh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===_h)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===xh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===bh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Mh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Sh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===wh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Eh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Th)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Ch)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Ah)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Ph)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Lh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Rh)return a===pt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===ol||i===Dh||i===Nh)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===ol)return a===pt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Dh)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Nh)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Zp||i===Ih||i===kh||i===Oh)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===ol)return s.COMPRESSED_RED_RGTC1_EXT;if(i===Ih)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===kh)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Oh)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Lr?r.UNSIGNED_INT_24_8:r[i]!==void 0?r[i]:null}return{convert:t}}const wS=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,ES=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class TS{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new Ht,s=e.properties.get(n);s.__webglTexture=t.texture,(t.depthNear!==i.depthNear||t.depthFar!==i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Ot({vertexShader:wS,fragmentShader:ES,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new st(new ys(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class CS extends Cn{constructor(e,t){super();const i=this;let n=null,s=1,a=null,o="local-floor",l=1,c=null,h=null,d=null,u=null,f=null,m=null;const v=new TS,g=t.getContextAttributes();let p=null,x=null;const _=[],y=[],w=new Z;let C=null;const A=new Jt;A.viewport=new Ke;const L=new Jt;L.viewport=new Ke;const b=[A,L],S=new ky;let N=null,O=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(X){let re=_[X];return re===void 0&&(re=new vc,_[X]=re),re.getTargetRaySpace()},this.getControllerGrip=function(X){let re=_[X];return re===void 0&&(re=new vc,_[X]=re),re.getGripSpace()},this.getHand=function(X){let re=_[X];return re===void 0&&(re=new vc,_[X]=re),re.getHandSpace()};function k(X){const re=y.indexOf(X.inputSource);if(re===-1)return;const Re=_[re];Re!==void 0&&(Re.update(X.inputSource,X.frame,c||a),Re.dispatchEvent({type:X.type,data:X.inputSource}))}function H(){n.removeEventListener("select",k),n.removeEventListener("selectstart",k),n.removeEventListener("selectend",k),n.removeEventListener("squeeze",k),n.removeEventListener("squeezestart",k),n.removeEventListener("squeezeend",k),n.removeEventListener("end",H),n.removeEventListener("inputsourceschange",j);for(let X=0;X<_.length;X++){const re=y[X];re!==null&&(y[X]=null,_[X].disconnect(re))}N=null,O=null,v.reset(),e.setRenderTarget(p),f=null,u=null,d=null,n=null,x=null,Je.stop(),i.isPresenting=!1,e.setPixelRatio(C),e.setSize(w.width,w.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(X){s=X,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(X){o=X,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(X){c=X},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d},this.getFrame=function(){return m},this.getSession=function(){return n},this.setSession=async function(X){if(n=X,n!==null){if(p=e.getRenderTarget(),n.addEventListener("select",k),n.addEventListener("selectstart",k),n.addEventListener("selectend",k),n.addEventListener("squeeze",k),n.addEventListener("squeezestart",k),n.addEventListener("squeezeend",k),n.addEventListener("end",H),n.addEventListener("inputsourceschange",j),g.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(w),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Re=null,ye=null,De=null;g.depth&&(De=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Re=g.stencil?Rr:Na,ye=g.stencil?Lr:ms);const je={colorFormat:t.RGBA8,depthFormat:De,scaleFactor:s};d=new XRWebGLBinding(n,t),u=d.createProjectionLayer(je),n.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),x=new kt(u.textureWidth,u.textureHeight,{format:vi,type:Gt,depthTexture:new Dd(u.textureWidth,u.textureHeight,ye,void 0,void 0,void 0,void 0,void 0,void 0,Re),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:u.ignoreDepthValues===!1,resolveStencilBuffer:u.ignoreDepthValues===!1})}else{const Re={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,t,Re),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new kt(f.framebufferWidth,f.framebufferHeight,{format:vi,type:Gt,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await n.requestReferenceSpace(o),Je.setContext(n),Je.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function j(X){for(let re=0;re<X.removed.length;re++){const Re=X.removed[re],ye=y.indexOf(Re);ye>=0&&(y[ye]=null,_[ye].disconnect(Re))}for(let re=0;re<X.added.length;re++){const Re=X.added[re];let ye=y.indexOf(Re);if(ye===-1){for(let je=0;je<_.length;je++)if(je>=y.length){y.push(Re),ye=je;break}else if(y[je]===null){y[je]=Re,ye=je;break}if(ye===-1)break}const De=_[ye];De&&De.connect(Re)}}const B=new M,K=new M;function W(X,re,Re){B.setFromMatrixPosition(re.matrixWorld),K.setFromMatrixPosition(Re.matrixWorld);const ye=B.distanceTo(K),De=re.projectionMatrix.elements,je=Re.projectionMatrix.elements,ke=De[14]/(De[10]-1),Mt=De[14]/(De[10]+1),rt=(De[9]+1)/De[5],$e=(De[9]-1)/De[5],R=(De[8]-1)/De[0],le=(je[8]+1)/je[0],te=ke*R,ce=ke*le,Y=ye/(-R+le),be=Y*-R;if(re.matrixWorld.decompose(X.position,X.quaternion,X.scale),X.translateX(be),X.translateZ(Y),X.matrixWorld.compose(X.position,X.quaternion,X.scale),X.matrixWorldInverse.copy(X.matrixWorld).invert(),De[10]===-1)X.projectionMatrix.copy(re.projectionMatrix),X.projectionMatrixInverse.copy(re.projectionMatrixInverse);else{const ne=ke+Y,Me=Mt+Y,Ve=te-be,D=ce+(ye-be),T=rt*Mt/Me*ne,F=$e*Mt/Me*ne;X.projectionMatrix.makePerspective(Ve,D,T,F,ne,Me),X.projectionMatrixInverse.copy(X.projectionMatrix).invert()}}function oe(X,re){re===null?X.matrixWorld.copy(X.matrix):X.matrixWorld.multiplyMatrices(re.matrixWorld,X.matrix),X.matrixWorldInverse.copy(X.matrixWorld).invert()}this.updateCamera=function(X){if(n===null)return;let re=X.near,Re=X.far;v.texture!==null&&(v.depthNear>0&&(re=v.depthNear),v.depthFar>0&&(Re=v.depthFar)),S.near=L.near=A.near=re,S.far=L.far=A.far=Re,(N!==S.near||O!==S.far)&&(n.updateRenderState({depthNear:S.near,depthFar:S.far}),N=S.near,O=S.far),A.layers.mask=X.layers.mask|2,L.layers.mask=X.layers.mask|4,S.layers.mask=A.layers.mask|L.layers.mask;const ye=X.parent,De=S.cameras;oe(S,ye);for(let je=0;je<De.length;je++)oe(De[je],ye);De.length===2?W(S,A,L):S.projectionMatrix.copy(A.projectionMatrix),me(X,S,ye)};function me(X,re,Re){Re===null?X.matrix.copy(re.matrixWorld):(X.matrix.copy(Re.matrixWorld),X.matrix.invert(),X.matrix.multiply(re.matrixWorld)),X.matrix.decompose(X.position,X.quaternion,X.scale),X.updateMatrixWorld(!0),X.projectionMatrix.copy(re.projectionMatrix),X.projectionMatrixInverse.copy(re.projectionMatrixInverse),X.isPerspectiveCamera&&(X.fov=Nr*2*Math.atan(1/X.projectionMatrix.elements[5]),X.zoom=1)}this.getCamera=function(){return S},this.getFoveation=function(){if(!(u===null&&f===null))return l},this.setFoveation=function(X){l=X,u!==null&&(u.fixedFoveation=X),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=X)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(S)};let _e=null;function ze(X,re){if(h=re.getViewerPose(c||a),m=re,h!==null){const Re=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let ye=!1;Re.length!==S.cameras.length&&(S.cameras.length=0,ye=!0);for(let ke=0;ke<Re.length;ke++){const Mt=Re[ke];let rt=null;if(f!==null)rt=f.getViewport(Mt);else{const R=d.getViewSubImage(u,Mt);rt=R.viewport,ke===0&&(e.setRenderTargetTextures(x,R.colorTexture,R.depthStencilTexture),e.setRenderTarget(x))}let $e=b[ke];$e===void 0&&($e=new Jt,$e.layers.enable(ke),$e.viewport=new Ke,b[ke]=$e),$e.matrix.fromArray(Mt.transform.matrix),$e.matrix.decompose($e.position,$e.quaternion,$e.scale),$e.projectionMatrix.fromArray(Mt.projectionMatrix),$e.projectionMatrixInverse.copy($e.projectionMatrix).invert(),$e.viewport.set(rt.x,rt.y,rt.width,rt.height),ke===0&&(S.matrix.copy($e.matrix),S.matrix.decompose(S.position,S.quaternion,S.scale)),ye===!0&&S.cameras.push($e)}const De=n.enabledFeatures;if(De&&De.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&d){const ke=d.getDepthInformation(Re[0]);ke&&ke.isValid&&ke.texture&&v.init(e,ke,n.renderState)}}for(let Re=0;Re<_.length;Re++){const ye=y[Re],De=_[Re];ye!==null&&De!==void 0&&De.update(ye,re,c||a)}_e&&_e(X,re),re.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:re}),m=null}const Je=new Am;Je.setAnimationLoop(ze),this.setAnimationLoop=function(X){_e=X},this.dispose=function(){}}}const As=new Ui,AS=new Ne;function PS(r,e){function t(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function i(g,p){p.color.getRGB(g.fogColor.value,nm(r)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function n(g,p,x,_,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(g,p):p.isMeshToonMaterial?(s(g,p),d(g,p)):p.isMeshPhongMaterial?(s(g,p),h(g,p)):p.isMeshStandardMaterial?(s(g,p),u(g,p),p.isMeshPhysicalMaterial&&f(g,p,y)):p.isMeshMatcapMaterial?(s(g,p),m(g,p)):p.isMeshDepthMaterial?s(g,p):p.isMeshDistanceMaterial?(s(g,p),v(g,p)):p.isMeshNormalMaterial?s(g,p):p.isLineBasicMaterial?(a(g,p),p.isLineDashedMaterial&&o(g,p)):p.isPointsMaterial?l(g,p,x,_):p.isSpriteMaterial?c(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,t(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===Qt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,t(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===Qt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,t(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,t(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const x=e.get(p),_=x.envMap,y=x.envMapRotation;_&&(g.envMap.value=_,As.copy(y),As.x*=-1,As.y*=-1,As.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(As.y*=-1,As.z*=-1),g.envMapRotation.value.setFromMatrix4(AS.makeRotationFromEuler(As)),g.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,g.lightMapTransform)),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,g.aoMapTransform))}function a(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform))}function o(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function l(g,p,x,_){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*x,g.scale.value=_*.5,p.map&&(g.map.value=p.map,t(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function c(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function h(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function d(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function u(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,g.roughnessMapTransform)),p.envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,x){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===Qt&&g.clearcoatNormalScale.value.negate())),p.dispersion>0&&(g.dispersion.value=p.dispersion),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(g.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(g.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function v(g,p){const x=e.get(p).light;g.referencePosition.value.setFromMatrixPosition(x.matrixWorld),g.nearDistance.value=x.shadow.camera.near,g.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function LS(r,e,t,i){let n={},s={},a=[];const o=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,_){const y=_.program;i.uniformBlockBinding(x,y)}function c(x,_){let y=n[x.id];y===void 0&&(m(x),y=h(x),n[x.id]=y,x.addEventListener("dispose",g));const w=_.program;i.updateUBOMapping(x,w);const C=e.render.frame;s[x.id]!==C&&(u(x),s[x.id]=C)}function h(x){const _=d();x.__bindingPointIndex=_;const y=r.createBuffer(),w=x.__size,C=x.usage;return r.bindBuffer(r.UNIFORM_BUFFER,y),r.bufferData(r.UNIFORM_BUFFER,w,C),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,_,y),y}function d(){for(let x=0;x<o;x++)if(a.indexOf(x)===-1)return a.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function u(x){const _=n[x.id],y=x.uniforms,w=x.__cache;r.bindBuffer(r.UNIFORM_BUFFER,_);for(let C=0,A=y.length;C<A;C++){const L=Array.isArray(y[C])?y[C]:[y[C]];for(let b=0,S=L.length;b<S;b++){const N=L[b];if(f(N,C,b,w)===!0){const O=N.__offset,k=Array.isArray(N.value)?N.value:[N.value];let H=0;for(let j=0;j<k.length;j++){const B=k[j],K=v(B);typeof B=="number"||typeof B=="boolean"?(N.__data[0]=B,r.bufferSubData(r.UNIFORM_BUFFER,O+H,N.__data)):B.isMatrix3?(N.__data[0]=B.elements[0],N.__data[1]=B.elements[1],N.__data[2]=B.elements[2],N.__data[3]=0,N.__data[4]=B.elements[3],N.__data[5]=B.elements[4],N.__data[6]=B.elements[5],N.__data[7]=0,N.__data[8]=B.elements[6],N.__data[9]=B.elements[7],N.__data[10]=B.elements[8],N.__data[11]=0):(B.toArray(N.__data,H),H+=K.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,O,N.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(x,_,y,w){const C=x.value,A=_+"_"+y;if(w[A]===void 0)return typeof C=="number"||typeof C=="boolean"?w[A]=C:w[A]=C.clone(),!0;{const L=w[A];if(typeof C=="number"||typeof C=="boolean"){if(L!==C)return w[A]=C,!0}else if(L.equals(C)===!1)return L.copy(C),!0}return!1}function m(x){const _=x.uniforms;let y=0;const w=16;for(let A=0,L=_.length;A<L;A++){const b=Array.isArray(_[A])?_[A]:[_[A]];for(let S=0,N=b.length;S<N;S++){const O=b[S],k=Array.isArray(O.value)?O.value:[O.value];for(let H=0,j=k.length;H<j;H++){const B=k[H],K=v(B),W=y%w,oe=W%K.boundary,me=W+oe;y+=oe,me!==0&&w-me<K.storage&&(y+=w-me),O.__data=new Float32Array(K.storage/Float32Array.BYTES_PER_ELEMENT),O.__offset=y,y+=K.storage}}}const C=y%w;return C>0&&(y+=w-C),x.__size=y,x.__cache={},this}function v(x){const _={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(_.boundary=4,_.storage=4):x.isVector2?(_.boundary=8,_.storage=8):x.isVector3||x.isColor?(_.boundary=16,_.storage=12):x.isVector4?(_.boundary=16,_.storage=16):x.isMatrix3?(_.boundary=48,_.storage=48):x.isMatrix4?(_.boundary=64,_.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),_}function g(x){const _=x.target;_.removeEventListener("dispose",g);const y=a.indexOf(_.__bindingPointIndex);a.splice(y,1),r.deleteBuffer(n[_.id]),delete n[_.id],delete s[_.id]}function p(){for(const x in n)r.deleteBuffer(n[x]);a=[],n={},s={}}return{bind:l,update:c,dispose:p}}class RS{constructor(e={}){const{canvas:t=tv(),context:i=null,depth:n=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:u=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=a;const m=new Uint32Array(4),v=new Int32Array(4);let g=null,p=null;const x=[],_=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=hs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let w=!1;this._outputColorSpace=et;let C=0,A=0,L=null,b=-1,S=null;const N=new Ke,O=new Ke;let k=null;const H=new fe(0);let j=0,B=t.width,K=t.height,W=1,oe=null,me=null;const _e=new Ke(0,0,B,K),ze=new Ke(0,0,B,K);let Je=!1;const X=new Ul;let re=!1,Re=!1;const ye=new Ne,De=new Ne,je=new M,ke=new Ke,Mt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let rt=!1;function $e(){return L===null?W:1}let R=i;function le(P,z){return t.getContext(P,z)}try{const P={alpha:!0,depth:n,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${to}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",se,!1),t.addEventListener("webglcontextcreationerror",J,!1),R===null){const z="webgl2";if(R=le(z,P),R===null)throw le(z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let te,ce,Y,be,ne,Me,Ve,D,T,F,$,Q,q,Pe,de,Te,Le,ee,Se,Fe,Ue,pe,Ge,I;function ge(){te=new Hb(R),te.init(),pe=new SS(R,te),ce=new Ib(R,te,e,pe),Y=new bS(R,te),ce.reverseDepthBuffer&&u&&Y.buffers.depth.setReversed(!0),be=new Wb(R),ne=new lS,Me=new MS(R,te,Y,ne,ce,pe,be),Ve=new Ob(y),D=new Bb(y),T=new Yy(R),Ge=new Db(R,T),F=new Gb(R,T,be,Ge),$=new $b(R,F,T,be),Se=new jb(R,ce,Me),Te=new kb(ne),Q=new oS(y,Ve,D,te,ce,Ge,Te),q=new PS(y,ne),Pe=new hS,de=new gS(te),ee=new Rb(y,Ve,D,Y,$,f,l),Le=new _S(y,$,ce),I=new LS(R,be,ce,Y),Fe=new Nb(R,te,be),Ue=new Vb(R,te,be),be.programs=Q.programs,y.capabilities=ce,y.extensions=te,y.properties=ne,y.renderLists=Pe,y.shadowMap=Le,y.state=Y,y.info=be}ge();const ie=new CS(y,R);this.xr=ie,this.getContext=function(){return R},this.getContextAttributes=function(){return R.getContextAttributes()},this.forceContextLoss=function(){const P=te.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=te.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(P){P!==void 0&&(W=P,this.setSize(B,K,!1))},this.getSize=function(P){return P.set(B,K)},this.setSize=function(P,z,G=!0){if(ie.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=P,K=z,t.width=Math.floor(P*W),t.height=Math.floor(z*W),G===!0&&(t.style.width=P+"px",t.style.height=z+"px"),this.setViewport(0,0,P,z)},this.getDrawingBufferSize=function(P){return P.set(B*W,K*W).floor()},this.setDrawingBufferSize=function(P,z,G){B=P,K=z,W=G,t.width=Math.floor(P*G),t.height=Math.floor(z*G),this.setViewport(0,0,P,z)},this.getCurrentViewport=function(P){return P.copy(N)},this.getViewport=function(P){return P.copy(_e)},this.setViewport=function(P,z,G,V){P.isVector4?_e.set(P.x,P.y,P.z,P.w):_e.set(P,z,G,V),Y.viewport(N.copy(_e).multiplyScalar(W).round())},this.getScissor=function(P){return P.copy(ze)},this.setScissor=function(P,z,G,V){P.isVector4?ze.set(P.x,P.y,P.z,P.w):ze.set(P,z,G,V),Y.scissor(O.copy(ze).multiplyScalar(W).round())},this.getScissorTest=function(){return Je},this.setScissorTest=function(P){Y.setScissorTest(Je=P)},this.setOpaqueSort=function(P){oe=P},this.setTransparentSort=function(P){me=P},this.getClearColor=function(P){return P.copy(ee.getClearColor())},this.setClearColor=function(){ee.setClearColor(...arguments)},this.getClearAlpha=function(){return ee.getClearAlpha()},this.setClearAlpha=function(){ee.setClearAlpha(...arguments)},this.clear=function(P=!0,z=!0,G=!0){let V=0;if(P){let U=!1;if(L!==null){const ae=L.texture.format;U=ae===wd||ae===Sd||ae===bd}if(U){const ae=L.texture.type,ve=ae===Gt||ae===ms||ae===Da||ae===Lr||ae===_d||ae===xd,Ae=ee.getClearColor(),we=ee.getClearAlpha(),Be=Ae.r,He=Ae.g,Ie=Ae.b;ve?(m[0]=Be,m[1]=He,m[2]=Ie,m[3]=we,R.clearBufferuiv(R.COLOR,0,m)):(v[0]=Be,v[1]=He,v[2]=Ie,v[3]=we,R.clearBufferiv(R.COLOR,0,v))}else V|=R.COLOR_BUFFER_BIT}z&&(V|=R.DEPTH_BUFFER_BIT),G&&(V|=R.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),R.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",se,!1),t.removeEventListener("webglcontextcreationerror",J,!1),ee.dispose(),Pe.dispose(),de.dispose(),ne.dispose(),Ve.dispose(),D.dispose(),$.dispose(),Ge.dispose(),I.dispose(),Q.dispose(),ie.dispose(),ie.removeEventListener("sessionstart",uu),ie.removeEventListener("sessionend",fu),bs.stop()};function Ee(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function se(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const P=be.autoReset,z=Le.enabled,G=Le.autoUpdate,V=Le.needsUpdate,U=Le.type;ge(),be.autoReset=P,Le.enabled=z,Le.autoUpdate=G,Le.needsUpdate=V,Le.type=U}function J(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function Ce(P){const z=P.target;z.removeEventListener("dispose",Ce),We(z)}function We(P){St(P),ne.remove(P)}function St(P){const z=ne.get(P).programs;z!==void 0&&(z.forEach(function(G){Q.releaseProgram(G)}),P.isShaderMaterial&&Q.releaseShaderCache(P))}this.renderBufferDirect=function(P,z,G,V,U,ae){z===null&&(z=Mt);const ve=U.isMesh&&U.matrixWorld.determinant()<0,Ae=jg(P,z,G,V,U);Y.setMaterial(V,ve);let we=G.index,Be=1;if(V.wireframe===!0){if(we=F.getWireframeAttribute(G),we===void 0)return;Be=2}const He=G.drawRange,Ie=G.attributes.position;let tt=He.start*Be,ht=(He.start+He.count)*Be;ae!==null&&(tt=Math.max(tt,ae.start*Be),ht=Math.min(ht,(ae.start+ae.count)*Be)),we!==null?(tt=Math.max(tt,0),ht=Math.min(ht,we.count)):Ie!=null&&(tt=Math.max(tt,0),ht=Math.min(ht,Ie.count));const Pt=ht-tt;if(Pt<0||Pt===1/0)return;Ge.setup(U,V,Ae,G,we);let Nt,at=Fe;if(we!==null&&(Nt=T.get(we),at=Ue,at.setIndex(Nt)),U.isMesh)V.wireframe===!0?(Y.setLineWidth(V.wireframeLinewidth*$e()),at.setMode(R.LINES)):at.setMode(R.TRIANGLES);else if(U.isLine){let Oe=V.linewidth;Oe===void 0&&(Oe=1),Y.setLineWidth(Oe*$e()),U.isLineSegments?at.setMode(R.LINES):U.isLineLoop?at.setMode(R.LINE_LOOP):at.setMode(R.LINE_STRIP)}else U.isPoints?at.setMode(R.POINTS):U.isSprite&&at.setMode(R.TRIANGLES);if(U.isBatchedMesh)if(U._multiDrawInstances!==null)yr("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),at.renderMultiDrawInstances(U._multiDrawStarts,U._multiDrawCounts,U._multiDrawCount,U._multiDrawInstances);else if(te.get("WEBGL_multi_draw"))at.renderMultiDraw(U._multiDrawStarts,U._multiDrawCounts,U._multiDrawCount);else{const Oe=U._multiDrawStarts,ii=U._multiDrawCounts,lt=U._multiDrawCount,nn=we?T.get(we).bytesPerElement:1,Zs=ne.get(V).currentProgram.getUniforms();for(let Li=0;Li<lt;Li++)Zs.setValue(R,"_gl_DrawID",Li),at.render(Oe[Li]/nn,ii[Li])}else if(U.isInstancedMesh)at.renderInstances(tt,Pt,U.count);else if(G.isInstancedBufferGeometry){const Oe=G._maxInstanceCount!==void 0?G._maxInstanceCount:1/0,ii=Math.min(G.instanceCount,Oe);at.renderInstances(tt,Pt,ii)}else at.render(tt,Pt)};function ct(P,z,G){P.transparent===!0&&P.side===$t&&P.forceSinglePass===!1?(P.side=Qt,P.needsUpdate=!0,mo(P,z,G),P.side=En,P.needsUpdate=!0,mo(P,z,G),P.side=$t):mo(P,z,G)}this.compile=function(P,z,G=null){G===null&&(G=P),p=de.get(G),p.init(z),_.push(p),G.traverseVisible(function(U){U.isLight&&U.layers.test(z.layers)&&(p.pushLight(U),U.castShadow&&p.pushShadow(U))}),P!==G&&P.traverseVisible(function(U){U.isLight&&U.layers.test(z.layers)&&(p.pushLight(U),U.castShadow&&p.pushShadow(U))}),p.setupLights();const V=new Set;return P.traverse(function(U){if(!(U.isMesh||U.isPoints||U.isLine||U.isSprite))return;const ae=U.material;if(ae)if(Array.isArray(ae))for(let ve=0;ve<ae.length;ve++){const Ae=ae[ve];ct(Ae,G,U),V.add(Ae)}else ct(ae,G,U),V.add(ae)}),p=_.pop(),V},this.compileAsync=function(P,z,G=null){const V=this.compile(P,z,G);return new Promise(U=>{function ae(){if(V.forEach(function(ve){ne.get(ve).currentProgram.isReady()&&V.delete(ve)}),V.size===0){U(P);return}setTimeout(ae,10)}te.get("KHR_parallel_shader_compile")!==null?ae():setTimeout(ae,10)})};let tn=null;function Pn(P){tn&&tn(P)}function uu(){bs.stop()}function fu(){bs.start()}const bs=new Am;bs.setAnimationLoop(Pn),typeof self<"u"&&bs.setContext(self),this.setAnimationLoop=function(P){tn=P,ie.setAnimationLoop(P),P===null?bs.stop():bs.start()},ie.addEventListener("sessionstart",uu),ie.addEventListener("sessionend",fu),this.render=function(P,z){if(z!==void 0&&z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;if(P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),z.parent===null&&z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),ie.enabled===!0&&ie.isPresenting===!0&&(ie.cameraAutoUpdate===!0&&ie.updateCamera(z),z=ie.getCamera()),P.isScene===!0&&P.onBeforeRender(y,P,z,L),p=de.get(P,_.length),p.init(z),_.push(p),De.multiplyMatrices(z.projectionMatrix,z.matrixWorldInverse),X.setFromProjectionMatrix(De),Re=this.localClippingEnabled,re=Te.init(this.clippingPlanes,Re),g=Pe.get(P,x.length),g.init(),x.push(g),ie.enabled===!0&&ie.isPresenting===!0){const ae=y.xr.getDepthSensingMesh();ae!==null&&ql(ae,z,-1/0,y.sortObjects)}ql(P,z,0,y.sortObjects),g.finish(),y.sortObjects===!0&&g.sort(oe,me),rt=ie.enabled===!1||ie.isPresenting===!1||ie.hasDepthSensing()===!1,rt&&ee.addToRenderList(g,P),this.info.render.frame++,re===!0&&Te.beginShadows();const G=p.state.shadowsArray;Le.render(G,P,z),re===!0&&Te.endShadows(),this.info.autoReset===!0&&this.info.reset();const V=g.opaque,U=g.transmissive;if(p.setupLights(),z.isArrayCamera){const ae=z.cameras;if(U.length>0)for(let ve=0,Ae=ae.length;ve<Ae;ve++){const we=ae[ve];mu(V,U,P,we)}rt&&ee.render(P);for(let ve=0,Ae=ae.length;ve<Ae;ve++){const we=ae[ve];pu(g,P,we,we.viewport)}}else U.length>0&&mu(V,U,P,z),rt&&ee.render(P),pu(g,P,z);L!==null&&A===0&&(Me.updateMultisampleRenderTarget(L),Me.updateRenderTargetMipmap(L)),P.isScene===!0&&P.onAfterRender(y,P,z),Ge.resetDefaultState(),b=-1,S=null,_.pop(),_.length>0?(p=_[_.length-1],re===!0&&Te.setGlobalState(y.clippingPlanes,p.state.camera)):p=null,x.pop(),x.length>0?g=x[x.length-1]:g=null};function ql(P,z,G,V){if(P.visible===!1)return;if(P.layers.test(z.layers)){if(P.isGroup)G=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(z);else if(P.isLight)p.pushLight(P),P.castShadow&&p.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||X.intersectsSprite(P)){V&&ke.setFromMatrixPosition(P.matrixWorld).applyMatrix4(De);const ve=$.update(P),Ae=P.material;Ae.visible&&g.push(P,ve,Ae,G,ke.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||X.intersectsObject(P))){const ve=$.update(P),Ae=P.material;if(V&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),ke.copy(P.boundingSphere.center)):(ve.boundingSphere===null&&ve.computeBoundingSphere(),ke.copy(ve.boundingSphere.center)),ke.applyMatrix4(P.matrixWorld).applyMatrix4(De)),Array.isArray(Ae)){const we=ve.groups;for(let Be=0,He=we.length;Be<He;Be++){const Ie=we[Be],tt=Ae[Ie.materialIndex];tt&&tt.visible&&g.push(P,ve,tt,G,ke.z,Ie)}}else Ae.visible&&g.push(P,ve,Ae,G,ke.z,null)}}const ae=P.children;for(let ve=0,Ae=ae.length;ve<Ae;ve++)ql(ae[ve],z,G,V)}function pu(P,z,G,V){const U=P.opaque,ae=P.transmissive,ve=P.transparent;p.setupLightsView(G),re===!0&&Te.setGlobalState(y.clippingPlanes,G),V&&Y.viewport(N.copy(V)),U.length>0&&po(U,z,G),ae.length>0&&po(ae,z,G),ve.length>0&&po(ve,z,G),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function mu(P,z,G,V){if((G.isScene===!0?G.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[V.id]===void 0&&(p.state.transmissionRenderTarget[V.id]=new kt(1,1,{generateMipmaps:!0,type:te.has("EXT_color_buffer_half_float")||te.has("EXT_color_buffer_float")?io:Gt,minFilter:Gn,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:nt.workingColorSpace}));const ae=p.state.transmissionRenderTarget[V.id],ve=V.viewport||N;ae.setSize(ve.z*y.transmissionResolutionScale,ve.w*y.transmissionResolutionScale);const Ae=y.getRenderTarget();y.setRenderTarget(ae),y.getClearColor(H),j=y.getClearAlpha(),j<1&&y.setClearColor(16777215,.5),y.clear(),rt&&ee.render(G);const we=y.toneMapping;y.toneMapping=hs;const Be=V.viewport;if(V.viewport!==void 0&&(V.viewport=void 0),p.setupLightsView(V),re===!0&&Te.setGlobalState(y.clippingPlanes,V),po(P,G,V),Me.updateMultisampleRenderTarget(ae),Me.updateRenderTargetMipmap(ae),te.has("WEBGL_multisampled_render_to_texture")===!1){let He=!1;for(let Ie=0,tt=z.length;Ie<tt;Ie++){const ht=z[Ie],Pt=ht.object,Nt=ht.geometry,at=ht.material,Oe=ht.group;if(at.side===$t&&Pt.layers.test(V.layers)){const ii=at.side;at.side=Qt,at.needsUpdate=!0,gu(Pt,G,V,Nt,at,Oe),at.side=ii,at.needsUpdate=!0,He=!0}}He===!0&&(Me.updateMultisampleRenderTarget(ae),Me.updateRenderTargetMipmap(ae))}y.setRenderTarget(Ae),y.setClearColor(H,j),Be!==void 0&&(V.viewport=Be),y.toneMapping=we}function po(P,z,G){const V=z.isScene===!0?z.overrideMaterial:null;for(let U=0,ae=P.length;U<ae;U++){const ve=P[U],Ae=ve.object,we=ve.geometry,Be=ve.group;let He=ve.material;He.allowOverride===!0&&V!==null&&(He=V),Ae.layers.test(G.layers)&&gu(Ae,z,G,we,He,Be)}}function gu(P,z,G,V,U,ae){P.onBeforeRender(y,z,G,V,U,ae),P.modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),U.onBeforeRender(y,z,G,V,P,ae),U.transparent===!0&&U.side===$t&&U.forceSinglePass===!1?(U.side=Qt,U.needsUpdate=!0,y.renderBufferDirect(G,z,V,U,P,ae),U.side=En,U.needsUpdate=!0,y.renderBufferDirect(G,z,V,U,P,ae),U.side=$t):y.renderBufferDirect(G,z,V,U,P,ae),P.onAfterRender(y,z,G,V,U,ae)}function mo(P,z,G){z.isScene!==!0&&(z=Mt);const V=ne.get(P),U=p.state.lights,ae=p.state.shadowsArray,ve=U.state.version,Ae=Q.getParameters(P,U.state,ae,z,G),we=Q.getProgramCacheKey(Ae);let Be=V.programs;V.environment=P.isMeshStandardMaterial?z.environment:null,V.fog=z.fog,V.envMap=(P.isMeshStandardMaterial?D:Ve).get(P.envMap||V.environment),V.envMapRotation=V.environment!==null&&P.envMap===null?z.environmentRotation:P.envMapRotation,Be===void 0&&(P.addEventListener("dispose",Ce),Be=new Map,V.programs=Be);let He=Be.get(we);if(He!==void 0){if(V.currentProgram===He&&V.lightsStateVersion===ve)return yu(P,Ae),He}else Ae.uniforms=Q.getUniforms(P),P.onBeforeCompile(Ae,y),He=Q.acquireProgram(Ae,we),Be.set(we,He),V.uniforms=Ae.uniforms;const Ie=V.uniforms;return(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(Ie.clippingPlanes=Te.uniform),yu(P,Ae),V.needsLights=Xg(P),V.lightsStateVersion=ve,V.needsLights&&(Ie.ambientLightColor.value=U.state.ambient,Ie.lightProbe.value=U.state.probe,Ie.directionalLights.value=U.state.directional,Ie.directionalLightShadows.value=U.state.directionalShadow,Ie.spotLights.value=U.state.spot,Ie.spotLightShadows.value=U.state.spotShadow,Ie.rectAreaLights.value=U.state.rectArea,Ie.ltc_1.value=U.state.rectAreaLTC1,Ie.ltc_2.value=U.state.rectAreaLTC2,Ie.pointLights.value=U.state.point,Ie.pointLightShadows.value=U.state.pointShadow,Ie.hemisphereLights.value=U.state.hemi,Ie.directionalShadowMap.value=U.state.directionalShadowMap,Ie.directionalShadowMatrix.value=U.state.directionalShadowMatrix,Ie.spotShadowMap.value=U.state.spotShadowMap,Ie.spotLightMatrix.value=U.state.spotLightMatrix,Ie.spotLightMap.value=U.state.spotLightMap,Ie.pointShadowMap.value=U.state.pointShadowMap,Ie.pointShadowMatrix.value=U.state.pointShadowMatrix),V.currentProgram=He,V.uniformsList=null,He}function vu(P){if(P.uniformsList===null){const z=P.currentProgram.getUniforms();P.uniformsList=cl.seqWithValue(z.seq,P.uniforms)}return P.uniformsList}function yu(P,z){const G=ne.get(P);G.outputColorSpace=z.outputColorSpace,G.batching=z.batching,G.batchingColor=z.batchingColor,G.instancing=z.instancing,G.instancingColor=z.instancingColor,G.instancingMorph=z.instancingMorph,G.skinning=z.skinning,G.morphTargets=z.morphTargets,G.morphNormals=z.morphNormals,G.morphColors=z.morphColors,G.morphTargetsCount=z.morphTargetsCount,G.numClippingPlanes=z.numClippingPlanes,G.numIntersection=z.numClipIntersection,G.vertexAlphas=z.vertexAlphas,G.vertexTangents=z.vertexTangents,G.toneMapping=z.toneMapping}function jg(P,z,G,V,U){z.isScene!==!0&&(z=Mt),Me.resetTextureUnits();const ae=z.fog,ve=V.isMeshStandardMaterial?z.environment:null,Ae=L===null?y.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:oi,we=(V.isMeshStandardMaterial?D:Ve).get(V.envMap||ve),Be=V.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,He=!!G.attributes.tangent&&(!!V.normalMap||V.anisotropy>0),Ie=!!G.morphAttributes.position,tt=!!G.morphAttributes.normal,ht=!!G.morphAttributes.color;let Pt=hs;V.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(Pt=y.toneMapping);const Nt=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,at=Nt!==void 0?Nt.length:0,Oe=ne.get(V),ii=p.state.lights;if(re===!0&&(Re===!0||P!==S)){const fi=P===S&&V.id===b;Te.setState(V,P,fi)}let lt=!1;V.version===Oe.__version?(Oe.needsLights&&Oe.lightsStateVersion!==ii.state.version||Oe.outputColorSpace!==Ae||U.isBatchedMesh&&Oe.batching===!1||!U.isBatchedMesh&&Oe.batching===!0||U.isBatchedMesh&&Oe.batchingColor===!0&&U.colorTexture===null||U.isBatchedMesh&&Oe.batchingColor===!1&&U.colorTexture!==null||U.isInstancedMesh&&Oe.instancing===!1||!U.isInstancedMesh&&Oe.instancing===!0||U.isSkinnedMesh&&Oe.skinning===!1||!U.isSkinnedMesh&&Oe.skinning===!0||U.isInstancedMesh&&Oe.instancingColor===!0&&U.instanceColor===null||U.isInstancedMesh&&Oe.instancingColor===!1&&U.instanceColor!==null||U.isInstancedMesh&&Oe.instancingMorph===!0&&U.morphTexture===null||U.isInstancedMesh&&Oe.instancingMorph===!1&&U.morphTexture!==null||Oe.envMap!==we||V.fog===!0&&Oe.fog!==ae||Oe.numClippingPlanes!==void 0&&(Oe.numClippingPlanes!==Te.numPlanes||Oe.numIntersection!==Te.numIntersection)||Oe.vertexAlphas!==Be||Oe.vertexTangents!==He||Oe.morphTargets!==Ie||Oe.morphNormals!==tt||Oe.morphColors!==ht||Oe.toneMapping!==Pt||Oe.morphTargetsCount!==at)&&(lt=!0):(lt=!0,Oe.__version=V.version);let nn=Oe.currentProgram;lt===!0&&(nn=mo(V,z,U));let Zs=!1,Li=!1,aa=!1;const wt=nn.getUniforms(),Hi=Oe.uniforms;if(Y.useProgram(nn.program)&&(Zs=!0,Li=!0,aa=!0),V.id!==b&&(b=V.id,Li=!0),Zs||S!==P){Y.buffers.depth.getReversed()?(ye.copy(P.projectionMatrix),nv(ye),sv(ye),wt.setValue(R,"projectionMatrix",ye)):wt.setValue(R,"projectionMatrix",P.projectionMatrix),wt.setValue(R,"viewMatrix",P.matrixWorldInverse);const bi=wt.map.cameraPosition;bi!==void 0&&bi.setValue(R,je.setFromMatrixPosition(P.matrixWorld)),ce.logarithmicDepthBuffer&&wt.setValue(R,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&wt.setValue(R,"isOrthographic",P.isOrthographicCamera===!0),S!==P&&(S=P,Li=!0,aa=!0)}if(U.isSkinnedMesh){wt.setOptional(R,U,"bindMatrix"),wt.setOptional(R,U,"bindMatrixInverse");const fi=U.skeleton;fi&&(fi.boneTexture===null&&fi.computeBoneTexture(),wt.setValue(R,"boneTexture",fi.boneTexture,Me))}U.isBatchedMesh&&(wt.setOptional(R,U,"batchingTexture"),wt.setValue(R,"batchingTexture",U._matricesTexture,Me),wt.setOptional(R,U,"batchingIdTexture"),wt.setValue(R,"batchingIdTexture",U._indirectTexture,Me),wt.setOptional(R,U,"batchingColorTexture"),U._colorsTexture!==null&&wt.setValue(R,"batchingColorTexture",U._colorsTexture,Me));const Gi=G.morphAttributes;if((Gi.position!==void 0||Gi.normal!==void 0||Gi.color!==void 0)&&Se.update(U,G,nn),(Li||Oe.receiveShadow!==U.receiveShadow)&&(Oe.receiveShadow=U.receiveShadow,wt.setValue(R,"receiveShadow",U.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(Hi.envMap.value=we,Hi.flipEnvMap.value=we.isCubeTexture&&we.isRenderTargetTexture===!1?-1:1),V.isMeshStandardMaterial&&V.envMap===null&&z.environment!==null&&(Hi.envMapIntensity.value=z.environmentIntensity),Li&&(wt.setValue(R,"toneMappingExposure",y.toneMappingExposure),Oe.needsLights&&$g(Hi,aa),ae&&V.fog===!0&&q.refreshFogUniforms(Hi,ae),q.refreshMaterialUniforms(Hi,V,W,K,p.state.transmissionRenderTarget[P.id]),cl.upload(R,vu(Oe),Hi,Me)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(cl.upload(R,vu(Oe),Hi,Me),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&wt.setValue(R,"center",U.center),wt.setValue(R,"modelViewMatrix",U.modelViewMatrix),wt.setValue(R,"normalMatrix",U.normalMatrix),wt.setValue(R,"modelMatrix",U.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){const fi=V.uniformsGroups;for(let bi=0,Zl=fi.length;bi<Zl;bi++){const Ms=fi[bi];I.update(Ms,nn),I.bind(Ms,nn)}}return nn}function $g(P,z){P.ambientLightColor.needsUpdate=z,P.lightProbe.needsUpdate=z,P.directionalLights.needsUpdate=z,P.directionalLightShadows.needsUpdate=z,P.pointLights.needsUpdate=z,P.pointLightShadows.needsUpdate=z,P.spotLights.needsUpdate=z,P.spotLightShadows.needsUpdate=z,P.rectAreaLights.needsUpdate=z,P.hemisphereLights.needsUpdate=z}function Xg(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return A},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(P,z,G){const V=ne.get(P);V.__autoAllocateDepthBuffer=P.resolveDepthBuffer===!1,V.__autoAllocateDepthBuffer===!1&&(V.__useRenderToTexture=!1),ne.get(P.texture).__webglTexture=z,ne.get(P.depthTexture).__webglTexture=V.__autoAllocateDepthBuffer?void 0:G,V.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(P,z){const G=ne.get(P);G.__webglFramebuffer=z,G.__useDefaultFramebuffer=z===void 0};const qg=R.createFramebuffer();this.setRenderTarget=function(P,z=0,G=0){L=P,C=z,A=G;let V=!0,U=null,ae=!1,ve=!1;if(P){const we=ne.get(P);if(we.__useDefaultFramebuffer!==void 0)Y.bindFramebuffer(R.FRAMEBUFFER,null),V=!1;else if(we.__webglFramebuffer===void 0)Me.setupRenderTarget(P);else if(we.__hasExternalTextures)Me.rebindTextures(P,ne.get(P.texture).__webglTexture,ne.get(P.depthTexture).__webglTexture);else if(P.depthBuffer){const Ie=P.depthTexture;if(we.__boundDepthTexture!==Ie){if(Ie!==null&&ne.has(Ie)&&(P.width!==Ie.image.width||P.height!==Ie.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Me.setupDepthRenderbuffer(P)}}const Be=P.texture;(Be.isData3DTexture||Be.isDataArrayTexture||Be.isCompressedArrayTexture)&&(ve=!0);const He=ne.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(Array.isArray(He[z])?U=He[z][G]:U=He[z],ae=!0):P.samples>0&&Me.useMultisampledRTT(P)===!1?U=ne.get(P).__webglMultisampledFramebuffer:Array.isArray(He)?U=He[G]:U=He,N.copy(P.viewport),O.copy(P.scissor),k=P.scissorTest}else N.copy(_e).multiplyScalar(W).floor(),O.copy(ze).multiplyScalar(W).floor(),k=Je;if(G!==0&&(U=qg),Y.bindFramebuffer(R.FRAMEBUFFER,U)&&V&&Y.drawBuffers(P,U),Y.viewport(N),Y.scissor(O),Y.setScissorTest(k),ae){const we=ne.get(P.texture);R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_CUBE_MAP_POSITIVE_X+z,we.__webglTexture,G)}else if(ve){const we=ne.get(P.texture),Be=z;R.framebufferTextureLayer(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,we.__webglTexture,G,Be)}else if(P!==null&&G!==0){const we=ne.get(P.texture);R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,we.__webglTexture,G)}b=-1},this.readRenderTargetPixels=function(P,z,G,V,U,ae,ve,Ae=0){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let we=ne.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&ve!==void 0&&(we=we[ve]),we){Y.bindFramebuffer(R.FRAMEBUFFER,we);try{const Be=P.textures[Ae],He=Be.format,Ie=Be.type;if(!ce.textureFormatReadable(He)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ce.textureTypeReadable(Ie)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}z>=0&&z<=P.width-V&&G>=0&&G<=P.height-U&&(P.textures.length>1&&R.readBuffer(R.COLOR_ATTACHMENT0+Ae),R.readPixels(z,G,V,U,pe.convert(He),pe.convert(Ie),ae))}finally{const Be=L!==null?ne.get(L).__webglFramebuffer:null;Y.bindFramebuffer(R.FRAMEBUFFER,Be)}}},this.readRenderTargetPixelsAsync=async function(P,z,G,V,U,ae,ve,Ae=0){if(!(P&&P.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let we=ne.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&ve!==void 0&&(we=we[ve]),we)if(z>=0&&z<=P.width-V&&G>=0&&G<=P.height-U){Y.bindFramebuffer(R.FRAMEBUFFER,we);const Be=P.textures[Ae],He=Be.format,Ie=Be.type;if(!ce.textureFormatReadable(He))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ce.textureTypeReadable(Ie))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const tt=R.createBuffer();R.bindBuffer(R.PIXEL_PACK_BUFFER,tt),R.bufferData(R.PIXEL_PACK_BUFFER,ae.byteLength,R.STREAM_READ),P.textures.length>1&&R.readBuffer(R.COLOR_ATTACHMENT0+Ae),R.readPixels(z,G,V,U,pe.convert(He),pe.convert(Ie),0);const ht=L!==null?ne.get(L).__webglFramebuffer:null;Y.bindFramebuffer(R.FRAMEBUFFER,ht);const Pt=R.fenceSync(R.SYNC_GPU_COMMANDS_COMPLETE,0);return R.flush(),await iv(R,Pt,4),R.bindBuffer(R.PIXEL_PACK_BUFFER,tt),R.getBufferSubData(R.PIXEL_PACK_BUFFER,0,ae),R.deleteBuffer(tt),R.deleteSync(Pt),ae}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(P,z=null,G=0){const V=Math.pow(2,-G),U=Math.floor(P.image.width*V),ae=Math.floor(P.image.height*V),ve=z!==null?z.x:0,Ae=z!==null?z.y:0;Me.setTexture2D(P,0),R.copyTexSubImage2D(R.TEXTURE_2D,G,0,0,ve,Ae,U,ae),Y.unbindTexture()};const Zg=R.createFramebuffer(),Yg=R.createFramebuffer();this.copyTextureToTexture=function(P,z,G=null,V=null,U=0,ae=null){ae===null&&(U!==0?(yr("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ae=U,U=0):ae=0);let ve,Ae,we,Be,He,Ie,tt,ht,Pt;const Nt=P.isCompressedTexture?P.mipmaps[ae]:P.image;if(G!==null)ve=G.max.x-G.min.x,Ae=G.max.y-G.min.y,we=G.isBox3?G.max.z-G.min.z:1,Be=G.min.x,He=G.min.y,Ie=G.isBox3?G.min.z:0;else{const Gi=Math.pow(2,-U);ve=Math.floor(Nt.width*Gi),Ae=Math.floor(Nt.height*Gi),P.isDataArrayTexture?we=Nt.depth:P.isData3DTexture?we=Math.floor(Nt.depth*Gi):we=1,Be=0,He=0,Ie=0}V!==null?(tt=V.x,ht=V.y,Pt=V.z):(tt=0,ht=0,Pt=0);const at=pe.convert(z.format),Oe=pe.convert(z.type);let ii;z.isData3DTexture?(Me.setTexture3D(z,0),ii=R.TEXTURE_3D):z.isDataArrayTexture||z.isCompressedArrayTexture?(Me.setTexture2DArray(z,0),ii=R.TEXTURE_2D_ARRAY):(Me.setTexture2D(z,0),ii=R.TEXTURE_2D),R.pixelStorei(R.UNPACK_FLIP_Y_WEBGL,z.flipY),R.pixelStorei(R.UNPACK_PREMULTIPLY_ALPHA_WEBGL,z.premultiplyAlpha),R.pixelStorei(R.UNPACK_ALIGNMENT,z.unpackAlignment);const lt=R.getParameter(R.UNPACK_ROW_LENGTH),nn=R.getParameter(R.UNPACK_IMAGE_HEIGHT),Zs=R.getParameter(R.UNPACK_SKIP_PIXELS),Li=R.getParameter(R.UNPACK_SKIP_ROWS),aa=R.getParameter(R.UNPACK_SKIP_IMAGES);R.pixelStorei(R.UNPACK_ROW_LENGTH,Nt.width),R.pixelStorei(R.UNPACK_IMAGE_HEIGHT,Nt.height),R.pixelStorei(R.UNPACK_SKIP_PIXELS,Be),R.pixelStorei(R.UNPACK_SKIP_ROWS,He),R.pixelStorei(R.UNPACK_SKIP_IMAGES,Ie);const wt=P.isDataArrayTexture||P.isData3DTexture,Hi=z.isDataArrayTexture||z.isData3DTexture;if(P.isDepthTexture){const Gi=ne.get(P),fi=ne.get(z),bi=ne.get(Gi.__renderTarget),Zl=ne.get(fi.__renderTarget);Y.bindFramebuffer(R.READ_FRAMEBUFFER,bi.__webglFramebuffer),Y.bindFramebuffer(R.DRAW_FRAMEBUFFER,Zl.__webglFramebuffer);for(let Ms=0;Ms<we;Ms++)wt&&(R.framebufferTextureLayer(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,ne.get(P).__webglTexture,U,Ie+Ms),R.framebufferTextureLayer(R.DRAW_FRAMEBUFFER,R.COLOR_ATTACHMENT0,ne.get(z).__webglTexture,ae,Pt+Ms)),R.blitFramebuffer(Be,He,ve,Ae,tt,ht,ve,Ae,R.DEPTH_BUFFER_BIT,R.NEAREST);Y.bindFramebuffer(R.READ_FRAMEBUFFER,null),Y.bindFramebuffer(R.DRAW_FRAMEBUFFER,null)}else if(U!==0||P.isRenderTargetTexture||ne.has(P)){const Gi=ne.get(P),fi=ne.get(z);Y.bindFramebuffer(R.READ_FRAMEBUFFER,Zg),Y.bindFramebuffer(R.DRAW_FRAMEBUFFER,Yg);for(let bi=0;bi<we;bi++)wt?R.framebufferTextureLayer(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,Gi.__webglTexture,U,Ie+bi):R.framebufferTexture2D(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,Gi.__webglTexture,U),Hi?R.framebufferTextureLayer(R.DRAW_FRAMEBUFFER,R.COLOR_ATTACHMENT0,fi.__webglTexture,ae,Pt+bi):R.framebufferTexture2D(R.DRAW_FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,fi.__webglTexture,ae),U!==0?R.blitFramebuffer(Be,He,ve,Ae,tt,ht,ve,Ae,R.COLOR_BUFFER_BIT,R.NEAREST):Hi?R.copyTexSubImage3D(ii,ae,tt,ht,Pt+bi,Be,He,ve,Ae):R.copyTexSubImage2D(ii,ae,tt,ht,Be,He,ve,Ae);Y.bindFramebuffer(R.READ_FRAMEBUFFER,null),Y.bindFramebuffer(R.DRAW_FRAMEBUFFER,null)}else Hi?P.isDataTexture||P.isData3DTexture?R.texSubImage3D(ii,ae,tt,ht,Pt,ve,Ae,we,at,Oe,Nt.data):z.isCompressedArrayTexture?R.compressedTexSubImage3D(ii,ae,tt,ht,Pt,ve,Ae,we,at,Nt.data):R.texSubImage3D(ii,ae,tt,ht,Pt,ve,Ae,we,at,Oe,Nt):P.isDataTexture?R.texSubImage2D(R.TEXTURE_2D,ae,tt,ht,ve,Ae,at,Oe,Nt.data):P.isCompressedTexture?R.compressedTexSubImage2D(R.TEXTURE_2D,ae,tt,ht,Nt.width,Nt.height,at,Nt.data):R.texSubImage2D(R.TEXTURE_2D,ae,tt,ht,ve,Ae,at,Oe,Nt);R.pixelStorei(R.UNPACK_ROW_LENGTH,lt),R.pixelStorei(R.UNPACK_IMAGE_HEIGHT,nn),R.pixelStorei(R.UNPACK_SKIP_PIXELS,Zs),R.pixelStorei(R.UNPACK_SKIP_ROWS,Li),R.pixelStorei(R.UNPACK_SKIP_IMAGES,aa),ae===0&&z.generateMipmaps&&R.generateMipmap(ii),Y.unbindTexture()},this.copyTextureToTexture3D=function(P,z,G=null,V=null,U=0){return yr('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(P,z,G,V,U)},this.initRenderTarget=function(P){ne.get(P).__webglFramebuffer===void 0&&Me.setupRenderTarget(P)},this.initTexture=function(P){P.isCubeTexture?Me.setTextureCube(P,0):P.isData3DTexture?Me.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?Me.setTexture2DArray(P,0):Me.setTexture2D(P,0),Y.unbindTexture()},this.resetState=function(){C=0,A=0,L=null,Y.reset(),Ge.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Vn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=nt._getDrawingBufferColorSpace(e),t.unpackColorSpace=nt._getUnpackColorSpace()}}const qf=new M,DS=new en,Zf=new M;class sa extends yt{constructor(e=document.createElement("div")){super(),this.isCSS3DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof t.element.ownerDocument.defaultView.Element&&t.element.parentNode!==null&&t.element.remove()})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this}}const gn=new Ne,NS=new Ne;class IS{constructor(e={}){const t=this;let i,n,s,a;const o={camera:{style:""},objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l;const c=document.createElement("div");c.style.transformOrigin="0 0",c.style.pointerEvents="none",l.appendChild(c);const h=document.createElement("div");h.style.transformStyle="preserve-3d",c.appendChild(h),this.getSize=function(){return{width:i,height:n}},this.render=function(g,p){const x=p.projectionMatrix.elements[5]*a;p.view&&p.view.enabled?(c.style.transform=`translate( ${-p.view.offsetX*(i/p.view.width)}px, ${-p.view.offsetY*(n/p.view.height)}px )`,c.style.transform+=`scale( ${p.view.fullWidth/p.view.width}, ${p.view.fullHeight/p.view.height} )`):c.style.transform="",g.matrixWorldAutoUpdate===!0&&g.updateMatrixWorld(),p.parent===null&&p.matrixWorldAutoUpdate===!0&&p.updateMatrixWorld();let _,y;p.isOrthographicCamera&&(_=-(p.right+p.left)/2,y=(p.top+p.bottom)/2);const w=p.view&&p.view.enabled?p.view.height/p.view.fullHeight:1,C=p.isOrthographicCamera?`scale( ${w} )scale(`+x+")translate("+d(_)+"px,"+d(y)+"px)"+u(p.matrixWorldInverse):`scale( ${w} )translateZ(`+x+"px)"+u(p.matrixWorldInverse),L=(p.isPerspectiveCamera?"perspective("+x+"px) ":"")+C+"translate("+s+"px,"+a+"px)";o.camera.style!==L&&(h.style.transform=L,o.camera.style=L),v(g,g,p)},this.setSize=function(g,p){i=g,n=p,s=i/2,a=n/2,l.style.width=g+"px",l.style.height=p+"px",c.style.width=g+"px",c.style.height=p+"px",h.style.width=g+"px",h.style.height=p+"px"};function d(g){return Math.abs(g)<1e-10?0:g}function u(g){const p=g.elements;return"matrix3d("+d(p[0])+","+d(-p[1])+","+d(p[2])+","+d(p[3])+","+d(p[4])+","+d(-p[5])+","+d(p[6])+","+d(p[7])+","+d(p[8])+","+d(-p[9])+","+d(p[10])+","+d(p[11])+","+d(p[12])+","+d(-p[13])+","+d(p[14])+","+d(p[15])+")"}function f(g){const p=g.elements;return"translate(-50%,-50%)"+("matrix3d("+d(p[0])+","+d(p[1])+","+d(p[2])+","+d(p[3])+","+d(-p[4])+","+d(-p[5])+","+d(-p[6])+","+d(-p[7])+","+d(p[8])+","+d(p[9])+","+d(p[10])+","+d(p[11])+","+d(p[12])+","+d(p[13])+","+d(p[14])+","+d(p[15])+")")}function m(g){g.isCSS3DObject&&(g.element.style.display="none");for(let p=0,x=g.children.length;p<x;p++)m(g.children[p])}function v(g,p,x,_){if(g.visible===!1){m(g);return}if(g.isCSS3DObject){const y=g.layers.test(x.layers)===!0,w=g.element;if(w.style.display=y===!0?"":"none",y===!0){g.onBeforeRender(t,p,x);let C;g.isCSS3DSprite?(gn.copy(x.matrixWorldInverse),gn.transpose(),g.rotation2D!==0&&gn.multiply(NS.makeRotationZ(g.rotation2D)),g.matrixWorld.decompose(qf,DS,Zf),gn.setPosition(qf),gn.scale(Zf),gn.elements[3]=0,gn.elements[7]=0,gn.elements[11]=0,gn.elements[15]=1,C=f(gn)):C=f(g.matrixWorld);const A=o.objects.get(g);if(A===void 0||A.style!==C){w.style.transform=C;const L={style:C};o.objects.set(g,L)}w.parentNode!==h&&h.appendChild(w),g.onAfterRender(t,p,x)}}for(let y=0,w=g.children.length;y<w;y++)v(g.children[y],p,x)}}}class _s{constructor(e,t={x:0,y:0,z:0},i={},n=1){E(this,"space",null);E(this,"position",new M);E(this,"data",{});E(this,"mass",1);E(this,"id",null);E(this,"mesh",null);E(this,"cssObject",null);E(this,"labelObject",null);E(this,"isPinned",!1);this.id=e??bt.generateId("node"),this.setPosition(t),this.data=bt.mergeDeep({},this.getDefaultData(),i),this.mass=Math.max(.1,n),this.isPinned=this.data.isPinned??!1}getDefaultData(){return{label:""}}update(e){}dispose(){var e,t,i,n,s,a,o,l,c,h,d,u,f,m;(t=(e=this.mesh)==null?void 0:e.geometry)==null||t.dispose(),(n=(i=this.mesh)==null?void 0:i.material)==null||n.dispose(),(a=(s=this.mesh)==null?void 0:s.parent)==null||a.remove(this.mesh),(l=(o=this.cssObject)==null?void 0:o.element)==null||l.remove(),(h=(c=this.cssObject)==null?void 0:c.parent)==null||h.remove(this.cssObject),(u=(d=this.labelObject)==null?void 0:d.element)==null||u.remove(),(m=(f=this.labelObject)==null?void 0:f.parent)==null||m.remove(this.labelObject),this.space=null,this.mesh=null,this.cssObject=null,this.labelObject=null}getBoundingSphereRadius(){return 50}setSelectedStyle(e){}setPosition(e,t,i){const{x:n,_y:s,_z:a}=typeof e=="object"&&e!==null?e:{x:e,_y:t,_z:i},o=s??0,l=a??0;if(!isFinite(n)||!isFinite(o)||!isFinite(l)){console.warn(`BaseNode.setPosition: Attempted to set invalid position for node ${this.id}:`,{x:n,y:o,z:l});return}this.position.set(n,o,l)}startDrag(){var e;(e=this.space)==null||e.emit("graph:node:dragstart",{node:this})}drag(e){this.setPosition(e.x,e.y,e.z)}endDrag(){var e;(e=this.space)==null||e.emit("graph:node:dragend",{node:this})}}function kS(r,e,t,i={}){const n=document.createElement("div");return n.className=`${t} node-common`,n.textContent=r,n.dataset.id=e,Object.assign(n.style,{pointerEvents:"none",textAlign:"center",whiteSpace:"nowrap",backdropFilter:"blur(4px)",border:"1px solid var(--sg-accent-secondary)",...i}),n}function uo(r,e,t,i,n){const s=kS(r,e,t,i),a=new sa(s);return a.userData={id:e,type:n},a}function ra(r,e,t,i=1){var l,c,h;if(!(r!=null&&r.element)||!(e!=null&&e.length)){if(r!=null&&r.element&&(r.element.style.visibility="",r.element.classList.contains("node-html"))){const d=r.element.querySelector(".node-content");d&&(d.style.transform=`scale(${i})`)}return}const n=(c=(l=t==null?void 0:t.plugins)==null?void 0:l.getPlugin("CameraPlugin"))==null?void 0:c.getCameraInstance();if(!n)return;const s=r.position.distanceTo(n.position),a=[...e].sort((d,u)=>(u.distance||0)-(d.distance||0));let o=!1;for(const d of a)if(s>=(d.distance||0)){if(r.element.style.visibility=(h=d.style)!=null&&h.includes("visibility:hidden")?"hidden":"",r.element.classList.contains("node-html")){const u=r.element.querySelector(".node-content");u&&(u.style.transform=`scale(${i*(d.scale??1)})`)}o=!0;break}if(!o&&(r.element.style.visibility="",r.element.classList.contains("node-html"))){const d=r.element.querySelector(".node-content");d&&(d.style.transform=`scale(${i})`)}}const Fn=class Fn extends _s{constructor(t,i,n={},s=1){super(t,i,n,s);E(this,"htmlElement",null);E(this,"size",{width:160,height:70});E(this,"billboard",!1);E(this,"adjustContentScale",t=>this.setContentScale(this.data.contentScale*t));E(this,"adjustNodeSize",t=>this.setSize(this.size.width*t,this.size.height*t,!1));const a=this.data.width??160,o=this.data.height??70;this.size={width:a,height:o},this.htmlElement=this._createElement(),this.cssObject=new sa(this.htmlElement),this.cssObject.userData={nodeId:this.id,type:"html-node"},this.update(),this.setContentScale(this.data.contentScale??1),this.setBackgroundColor(this.data.backgroundColor??"#333344")}getDefaultData(){return{label:"",content:"",width:160,height:70,contentScale:1,backgroundColor:"#333344",type:"html",editable:!1,labelLod:[]}}_createElement(){const t=document.createElement("div");return t.className="node-html node-common",t.id=`node-html-${this.id}`,t.dataset.nodeId=this.id,t.style.width=`${this.size.width}px`,t.style.height=`${this.size.height}px`,t.draggable=!1,t.ondragstart=i=>i.preventDefault(),t.innerHTML=`
            <div class="node-inner-wrapper">
                <div class="node-content" spellcheck="false" style="transform: scale(${this.data.contentScale});">
                    ${this.data.content||this.data.label||""}
                </div>
                <div class="node-controls">
                    <button class="node-quick-button node-content-zoom-in" title="Zoom In Content (+)">➕</button>
                    <button class="node-quick-button node-content-zoom-out" title="Zoom Out Content (-)">➖</button>
                    <button class="node-quick-button node-grow" title="Grow Node (Ctrl++)">↗️</button>
                    <button class="node-quick-button node-shrink" title="Shrink Node (Ctrl+-)">↙️</button>
                    <button class="node-quick-button delete-button node-delete" title="Delete Node (Del)">🗑️</button>
                </div>
            </div>
            <div class="resize-handle" title="Resize Node"></div>
        `,this._initContentEditable(t),t}_initContentEditable(t){const i=ue(".node-content",t);if(i&&this.data.editable){i.contentEditable="true";let n;i.addEventListener("input",()=>{clearTimeout(n),n=setTimeout(()=>{var s;this.data.content=i.innerHTML,(s=this.space)==null||s.emit("graph:node:dataChanged",{node:this,property:"content",value:this.data.content})},300)}),i.addEventListener("pointerdown",s=>s.stopPropagation()),i.addEventListener("touchstart",s=>s.stopPropagation(),{passive:!0}),i.addEventListener("wheel",s=>{const a=i.scrollHeight>i.clientHeight||i.scrollWidth>i.clientWidth,o=s.deltaY<0&&i.scrollTop>0||s.deltaY>0&&i.scrollTop<i.scrollHeight-i.clientHeight,l=s.deltaX<0&&i.scrollLeft>0||s.deltaX>0&&i.scrollLeft<i.scrollWidth-i.clientWidth;a&&(o||l)&&s.stopPropagation()},{passive:!1})}}setSize(t,i,n=!1){const s={...this.size},a=s.width*s.height;if(this.size.width=Math.max(Fn.MIN_SIZE.width,t),this.size.height=Math.max(Fn.MIN_SIZE.height,i),this.htmlElement&&(this.htmlElement.style.width=`${this.size.width}px`,this.htmlElement.style.height=`${this.size.height}px`),n&&a>0){const o=Math.sqrt(this.size.width*this.size.height/a);this.setContentScale(this.data.contentScale*o)}}setContentScale(t){var n;this.data.contentScale=bt.clamp(t,Fn.CONTENT_SCALE_RANGE.min,Fn.CONTENT_SCALE_RANGE.max);const i=ue(".node-content",this.htmlElement);i&&(i.style.transform=`scale(${this.data.contentScale})`),(n=this.space)==null||n.emit("graph:node:dataChanged",{node:this,property:"contentScale",value:this.data.contentScale})}setBackgroundColor(t){var i,n;this.data.backgroundColor=t,(i=this.htmlElement)==null||i.style.setProperty("--node-bg",this.data.backgroundColor),(n=this.space)==null||n.emit("graph:node:dataChanged",{node:this,property:"backgroundColor",value:this.data.backgroundColor})}update(t){this.cssObject&&(this.cssObject.position.copy(this.position),this.billboard&&(t!=null&&t._cam)&&this.cssObject.quaternion.copy(t._cam.quaternion),ra(this.cssObject,this.data.labelLod,t,this.data.contentScale??1))}getBoundingSphereRadius(){return Math.sqrt(this.size.width**2+this.size.height**2)/2}setSelectedStyle(t){var i;(i=this.htmlElement)==null||i.classList.toggle("selected",t)}startResize(){var t,i,n,s,a,o;(t=this.htmlElement)==null||t.classList.add("resizing"),(a=(s=(n=(i=this.space)==null?void 0:i.plugins.getPlugin("LayoutPlugin"))==null?void 0:n.layoutManager)==null?void 0:s.getActiveLayout())==null||a.fixNode(this),(o=this.space)==null||o.emit("graph:node:resizestart",{node:this})}resize(t,i){this.setSize(t,i)}endResize(){var t,i,n,s,a,o,l;(t=this.htmlElement)==null||t.classList.remove("resizing");try{(o=(a=(s=(n=(i=this.space)==null?void 0:i.plugins)==null?void 0:n.getPlugin("LayoutPlugin"))==null?void 0:s.layoutManager)==null?void 0:a.getActiveLayout())==null||o.releaseNode(this)}catch(c){console.error("Error releasing node during resize:",c)}(l=this.space)==null||l.emit("graph:node:resizeend",{node:this,finalSize:{...this.size}})}};E(Fn,"typeName","html"),E(Fn,"MIN_SIZE",{width:80,height:40}),E(Fn,"CONTENT_SCALE_RANGE",{min:.3,max:3});let gt=Fn;class mn{constructor(e,t){E(this,"space",null);E(this,"pluginManager",null);this.space=e,this.pluginManager=t}init(){}update(){}dispose(){this.space=null,this.pluginManager=null}getName(){return this.constructor.name}}class OS{constructor(e){E(this,"space",null);E(this,"plugins",new Map);this.space=e}add(e){if(!(e instanceof mn)){console.warn("PluginManager: Attempted to add a non-Plugin object.");return}this.plugins.has(e.getName())&&console.warn(`PluginManager: Plugin "${e.getName()}" already registered. Overwriting.`),this.plugins.set(e.getName(),e)}getPlugin(e){return this.plugins.get(e)}getAllPlugins(){return Array.from(this.plugins.values())}async initPlugins(){var e;for(const t of this.plugins.values())await((e=t.init)==null?void 0:e.call(t))}updatePlugins(){var e;for(const t of this.plugins.values())(e=t.update)==null||e.call(t)}disposePlugins(){var e;for(const t of this.plugins.values())(e=t.dispose)==null||e.call(t);this.plugins.clear()}}/**
 * postprocessing v6.37.6 build Fri Jul 04 2025
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2025 Raoul van Rüschen
 * @license Zlib
 */var Ic=1/1e3,zS=1e3,US=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(r){typeof document<"u"&&document.hidden!==void 0&&(r?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=r)}get delta(){return this._delta*Ic}get fixedDelta(){return this._fixedDelta*Ic}set fixedDelta(r){this._fixedDelta=r*zS}get elapsed(){return this._elapsed*Ic}update(r){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(r!==void 0?r:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(r){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},FS=(()=>{const r=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),e=new Float32Array([0,0,2,0,0,2]),t=new At;return t.setAttribute("position",new Ct(r,3)),t.setAttribute("uv",new Ct(e,2)),t})(),xi=class Xh{static get fullscreenGeometry(){return FS}constructor(e="Pass",t=new za,i=new Pd){this.name=e,this.renderer=null,this.scene=t,this.camera=i,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;t!==null&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(e){let t=this.screen;t!==null?t.material=e:(t=new st(Xh.fullscreenGeometry,e),t.frustumCulled=!1,this.scene===null&&(this.scene=new za),this.scene.add(t),this.screen=t)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,t=qn){}render(e,t,i,n,s){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,i){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof kt||t instanceof yi||t instanceof Ht||t instanceof Xh)&&this[e].dispose()}this.fullscreenMaterial!==null&&this.fullscreenMaterial.dispose()}},BS=class extends xi{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(r,e,t,i,n){const s=r.state.buffers.stencil;s.setLocked(!1),s.setTest(!1)}},HS=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,Nm="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",Im=class extends Ot{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new xe(null),opacity:new xe(1)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:HS,vertexShader:Nm})}set inputBuffer(r){this.uniforms.inputBuffer.value=r}setInputBuffer(r){this.uniforms.inputBuffer.value=r}getOpacity(r){return this.uniforms.opacity.value}setOpacity(r){this.uniforms.opacity.value=r}},GS=class extends xi{constructor(r,e=!0){super("CopyPass"),this.fullscreenMaterial=new Im,this.needsSwap=!1,this.renderTarget=r,r===void 0&&(this.renderTarget=new kt(1,1,{minFilter:Xt,magFilter:Xt,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=e}get resize(){return this.autoResize}set resize(r){this.autoResize=r}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(r){this.autoResize=r}render(r,e,t,i,n){this.fullscreenMaterial.inputBuffer=e.texture,r.setRenderTarget(this.renderToScreen?null:this.renderTarget),r.render(this.scene,this.camera)}setSize(r,e){this.autoResize&&this.renderTarget.setSize(r,e)}initialize(r,e,t){t!==void 0&&(this.renderTarget.texture.type=t,t!==Gt?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":r!==null&&r.outputColorSpace===et&&(this.renderTarget.texture.colorSpace=et))}},Yf=new fe,Wd=class extends xi{constructor(r=!0,e=!0,t=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=r,this.depth=e,this.stencil=t,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(r,e,t){this.color=r,this.depth=e,this.stencil=t}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(r){this.overrideClearColor=r}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(r){this.overrideClearAlpha=r}render(r,e,t,i,n){const s=this.overrideClearColor,a=this.overrideClearAlpha,o=r.getClearAlpha(),l=s!==null,c=a>=0;l?(r.getClearColor(Yf),r.setClearColor(s,c?a:o)):c&&r.setClearAlpha(a),r.setRenderTarget(this.renderToScreen?null:e),r.clear(this.color,this.depth,this.stencil),l?r.setClearColor(Yf,o):c&&r.setClearAlpha(o)}},VS=class extends xi{constructor(r,e){super("MaskPass",r,e),this.needsSwap=!1,this.clearPass=new Wd(!1,!1,!0),this.inverse=!1}set mainScene(r){this.scene=r}set mainCamera(r){this.camera=r}get inverted(){return this.inverse}set inverted(r){this.inverse=r}get clear(){return this.clearPass.enabled}set clear(r){this.clearPass.enabled=r}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(r){this.inverted=r}render(r,e,t,i,n){const s=r.getContext(),a=r.state.buffers,o=this.scene,l=this.camera,c=this.clearPass,h=this.inverted?0:1,d=1-h;a.color.setMask(!1),a.depth.setMask(!1),a.color.setLocked(!0),a.depth.setLocked(!0),a.stencil.setTest(!0),a.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),a.stencil.setFunc(s.ALWAYS,h,4294967295),a.stencil.setClear(d),a.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?c.render(r,null):(c.render(r,e),c.render(r,t))),this.renderToScreen?(r.setRenderTarget(null),r.render(o,l)):(r.setRenderTarget(e),r.render(o,l),r.setRenderTarget(t),r.render(o,l)),a.color.setLocked(!1),a.depth.setLocked(!1),a.stencil.setLocked(!1),a.stencil.setFunc(s.EQUAL,1,4294967295),a.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),a.stencil.setLocked(!0)}},WS=class{constructor(r=null,{depthBuffer:e=!0,stencilBuffer:t=!1,multisampling:i=0,frameBufferType:n}={}){this.renderer=null,this.inputBuffer=this.createBuffer(e,t,n,i),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new GS,this.depthTexture=null,this.passes=[],this.timer=new US,this.autoRenderToScreen=!0,this.setRenderer(r)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(r){const e=this.inputBuffer,t=this.multisampling;t>0&&r>0?(this.inputBuffer.samples=r,this.outputBuffer.samples=r,this.inputBuffer.dispose(),this.outputBuffer.dispose()):t!==r&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(e.depthBuffer,e.stencilBuffer,e.texture.type,r),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(r){if(this.renderer=r,r!==null){const e=r.getSize(new Z),t=r.getContext().getContextAttributes().alpha,i=this.inputBuffer.texture.type;i===Gt&&r.outputColorSpace===et&&(this.inputBuffer.texture.colorSpace=et,this.outputBuffer.texture.colorSpace=et,this.inputBuffer.dispose(),this.outputBuffer.dispose()),r.autoClear=!1,this.setSize(e.width,e.height);for(const n of this.passes)n.initialize(r,t,i)}}replaceRenderer(r,e=!0){const t=this.renderer,i=t.domElement.parentNode;return this.setRenderer(r),e&&i!==null&&(i.removeChild(t.domElement),i.appendChild(r.domElement)),t}createDepthTexture(){const r=this.depthTexture=new Dd;return this.inputBuffer.depthTexture=r,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(r.format=Rr,r.type=Lr):r.type=ms,r}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const r of this.passes)r.setDepthTexture(null)}}createBuffer(r,e,t,i){const n=this.renderer,s=n===null?new Z:n.getDrawingBufferSize(new Z),a={minFilter:Xt,magFilter:Xt,stencilBuffer:e,depthBuffer:r,type:t},o=new kt(s.width,s.height,a);return i>0&&(o.ignoreDepthForMultisampleCopy=!1,o.samples=i),t===Gt&&n!==null&&n.outputColorSpace===et&&(o.texture.colorSpace=et),o.texture.name="EffectComposer.Buffer",o.texture.generateMipmaps=!1,o}setMainScene(r){for(const e of this.passes)e.mainScene=r}setMainCamera(r){for(const e of this.passes)e.mainCamera=r}addPass(r,e){const t=this.passes,i=this.renderer,n=i.getDrawingBufferSize(new Z),s=i.getContext().getContextAttributes().alpha,a=this.inputBuffer.texture.type;if(r.setRenderer(i),r.setSize(n.width,n.height),r.initialize(i,s,a),this.autoRenderToScreen&&(t.length>0&&(t[t.length-1].renderToScreen=!1),r.renderToScreen&&(this.autoRenderToScreen=!1)),e!==void 0?t.splice(e,0,r):t.push(r),this.autoRenderToScreen&&(t[t.length-1].renderToScreen=!0),r.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const o=this.createDepthTexture();for(r of t)r.setDepthTexture(o)}else r.setDepthTexture(this.depthTexture)}removePass(r){const e=this.passes,t=e.indexOf(r);if(t!==-1&&e.splice(t,1).length>0){if(this.depthTexture!==null){const s=(o,l)=>o||l.needsDepthTexture;e.reduce(s,!1)||(r.getDepthTexture()===this.depthTexture&&r.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&t===e.length&&(r.renderToScreen=!1,e.length>0&&(e[e.length-1].renderToScreen=!0))}}removeAllPasses(){const r=this.passes;this.deleteDepthTexture(),r.length>0&&(this.autoRenderToScreen&&(r[r.length-1].renderToScreen=!1),this.passes=[])}render(r){const e=this.renderer,t=this.copyPass;let i=this.inputBuffer,n=this.outputBuffer,s=!1,a,o,l;r===void 0&&(this.timer.update(),r=this.timer.getDelta());for(const c of this.passes)c.enabled&&(c.render(e,i,n,r,s),c.needsSwap&&(s&&(t.renderToScreen=c.renderToScreen,a=e.getContext(),o=e.state.buffers.stencil,o.setFunc(a.NOTEQUAL,1,4294967295),t.render(e,i,n,r,s),o.setFunc(a.EQUAL,1,4294967295)),l=i,i=n,n=l),c instanceof VS?s=!0:c instanceof BS&&(s=!1))}setSize(r,e,t){const i=this.renderer,n=i.getSize(new Z);(r===void 0||e===void 0)&&(r=n.width,e=n.height),(n.width!==r||n.height!==e)&&i.setSize(r,e,t);const s=i.getDrawingBufferSize(new Z);this.inputBuffer.setSize(s.width,s.height),this.outputBuffer.setSize(s.width,s.height);for(const a of this.passes)a.setSize(s.width,s.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const r of this.passes)r.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose(),xi.fullscreenGeometry.dispose()}},ds={NONE:0,DEPTH:1,CONVOLUTION:2},ot={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},jS=class{constructor(){this.shaderParts=new Map([[ot.FRAGMENT_HEAD,null],[ot.FRAGMENT_MAIN_UV,null],[ot.FRAGMENT_MAIN_IMAGE,null],[ot.VERTEX_HEAD,null],[ot.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=ds.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=oi}},kc=!1,Kf=class{constructor(r=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(r),this.meshCount=0,this.replaceMaterial=e=>{if(e.isMesh){let t;if(e.material.flatShading)switch(e.material.side){case $t:t=this.materialsFlatShadedDoubleSide;break;case Qt:t=this.materialsFlatShadedBackSide;break;default:t=this.materialsFlatShaded;break}else switch(e.material.side){case $t:t=this.materialsDoubleSide;break;case Qt:t=this.materialsBackSide;break;default:t=this.materials;break}this.originalMaterials.set(e,e.material),e.isSkinnedMesh?e.material=t[2]:e.isInstancedMesh?e.material=t[1]:e.material=t[0],++this.meshCount}}}cloneMaterial(r){if(!(r instanceof Ot))return r.clone();const e=r.uniforms,t=new Map;for(const n in e){const s=e[n].value;s.isRenderTargetTexture&&(e[n].value=null,t.set(n,s))}const i=r.clone();for(const n of t)e[n[0]].value=n[1],i.uniforms[n[0]].value=n[1];return i}setMaterial(r){if(this.disposeMaterials(),this.material=r,r!==null){const e=this.materials=[this.cloneMaterial(r),this.cloneMaterial(r),this.cloneMaterial(r)];for(const t of e)t.uniforms=Object.assign({},r.uniforms),t.side=En;e[2].skinning=!0,this.materialsBackSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},r.uniforms),i.side=Qt,i}),this.materialsDoubleSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},r.uniforms),i.side=$t,i}),this.materialsFlatShaded=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},r.uniforms),i.flatShading=!0,i}),this.materialsFlatShadedBackSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},r.uniforms),i.flatShading=!0,i.side=Qt,i}),this.materialsFlatShadedDoubleSide=e.map(t=>{const i=this.cloneMaterial(t);return i.uniforms=Object.assign({},r.uniforms),i.flatShading=!0,i.side=$t,i})}}render(r,e,t){const i=r.shadowMap.enabled;if(r.shadowMap.enabled=!1,kc){const n=this.originalMaterials;this.meshCount=0,e.traverse(this.replaceMaterial),r.render(e,t);for(const s of n)s[0].material=s[1];this.meshCount!==n.size&&n.clear()}else{const n=e.overrideMaterial;e.overrideMaterial=this.material,r.render(e,t),e.overrideMaterial=n}r.shadowMap.enabled=i}disposeMaterials(){if(this.material!==null){const r=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const e of r)e.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return kc}static set workaroundEnabled(r){kc=r}},is=-1,Tt=class extends Cn{constructor(r,e=is,t=is,i=1){super(),this.resizable=r,this.baseSize=new Z(1,1),this.preferredSize=new Z(e,t),this.target=this.preferredSize,this.s=i,this.effectiveSize=new Z,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const r=this.baseSize,e=this.preferredSize,t=this.effectiveSize,i=this.scale;e.width!==is?t.width=e.width:e.height!==is?t.width=Math.round(e.height*(r.width/Math.max(r.height,1))):t.width=Math.round(r.width*i),e.height!==is?t.height=e.height:e.width!==is?t.height=Math.round(e.width/Math.max(r.width/Math.max(r.height,1),1)):t.height=Math.round(r.height*i)}get width(){return this.effectiveSize.width}set width(r){this.preferredWidth=r}get height(){return this.effectiveSize.height}set height(r){this.preferredHeight=r}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(r){this.s!==r&&(this.s=r,this.preferredSize.setScalar(is),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(r){this.scale=r}get baseWidth(){return this.baseSize.width}set baseWidth(r){this.baseSize.width!==r&&(this.baseSize.width=r,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(r){this.baseWidth=r}get baseHeight(){return this.baseSize.height}set baseHeight(r){this.baseSize.height!==r&&(this.baseSize.height=r,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(r){this.baseHeight=r}setBaseSize(r,e){(this.baseSize.width!==r||this.baseSize.height!==e)&&(this.baseSize.set(r,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(r){this.preferredSize.width!==r&&(this.preferredSize.width=r,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(r){this.preferredWidth=r}get preferredHeight(){return this.preferredSize.height}set preferredHeight(r){this.preferredSize.height!==r&&(this.preferredSize.height=r,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(r){this.preferredHeight=r}setPreferredSize(r,e){(this.preferredSize.width!==r||this.preferredSize.height!==e)&&(this.preferredSize.set(r,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(r){this.s=r.scale,this.baseSize.set(r.baseWidth,r.baseHeight),this.preferredSize.set(r.preferredWidth,r.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return is}},$S=class{constructor(r=0){this.nextId=r}getNextId(){return this.nextId++}reset(r=0){return this.nextId=r,this}},Oc=new $S(2),km=class extends Set{constructor(r,e=Oc.getNextId()){super(),this.exclusive=!1,this._layer=e,(this._layer<1||this._layer>31)&&(console.warn("Layer out of range, resetting to 2"),Oc.reset(2),this._layer=Oc.getNextId()),r!==void 0&&this.set(r)}get layer(){return this._layer}set layer(r){const e=this._layer;for(const t of this)t.layers.disable(e),t.layers.enable(r);this._layer=r}getLayer(){return this.layer}setLayer(r){this.layer=r}isExclusive(){return this.exclusive}setExclusive(r){this.exclusive=r}clear(){const r=this.layer;for(const e of this)e.layers.disable(r);return super.clear()}set(r){this.clear();for(const e of r)this.add(e);return this}indexOf(r){return this.has(r)?0:-1}add(r){return this.exclusive?r.layers.set(this.layer):r.layers.enable(this.layer),super.add(r)}delete(r){return this.has(r)&&r.layers.disable(this.layer),super.delete(r)}toggle(r){let e;return this.has(r)?(this.delete(r),e=!1):(this.add(r),e=!0),e}setVisible(r){for(const e of this)r?e.layers.enable(0):e.layers.disable(0);return this}},Xe={ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},XS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb+y.rgb,y.a),opacity);}",qS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,y.a*opacity);}",ZS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4((x.rgb+y.rgb)*0.5,y.a),opacity);}",YS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.xy,xHSL.z));return mix(x,vec4(z,y.a),opacity);}",KS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=x.rgb,b=y.rgb;vec3 z=mix(step(0.0,b)*(1.0-min(vec3(1.0),(1.0-a)/b)),vec3(1.0),step(1.0,a));return mix(x,vec4(z,y.a),opacity);}",JS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=x.rgb,b=y.rgb;vec3 z=step(0.0,a)*mix(min(vec3(1.0),a/max(1.0-b,1e-9)),vec3(1.0),step(1.0,b));return mix(x,vec4(z,y.a),opacity);}",QS="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(min(x.rgb,y.rgb),y.a),opacity);}",ew="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(abs(x.rgb-y.rgb),y.a),opacity);}",tw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb/max(y.rgb,1e-12),y.a),opacity);}",iw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4((x.rgb+y.rgb-2.0*x.rgb*y.rgb),y.a),opacity);}",nw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=min(x.rgb,1.0);vec3 b=min(y.rgb,1.0);vec3 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,b));return mix(x,vec4(z,y.a),opacity);}",sw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(step(1.0,x.rgb+y.rgb),y.a),opacity);}",rw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.x,xHSL.yz));return mix(x,vec4(z,y.a),opacity);}",aw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(1.0-y.rgb,y.a),opacity);}",ow="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(y.rgb*(1.0-x.rgb),y.a),opacity);}",lw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(max(x.rgb,y.rgb),y.a),opacity);}",cw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(clamp(y.rgb+x.rgb-1.0,0.0,1.0),y.a),opacity);}",hw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(min(x.rgb+y.rgb,1.0),y.a),opacity);}",dw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(clamp(2.0*y.rgb+x.rgb-1.0,0.0,1.0),y.a),opacity);}",uw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.xy,yHSL.z));return mix(x,vec4(z,y.a),opacity);}",fw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb*y.rgb,y.a),opacity);}",pw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(1.0-abs(1.0-x.rgb-y.rgb),y.a),opacity);}",mw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",gw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 z=mix(2.0*y.rgb*x.rgb,1.0-2.0*(1.0-y.rgb)*(1.0-x.rgb),step(0.5,x.rgb));return mix(x,vec4(z,y.a),opacity);}",vw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 y2=2.0*y.rgb;vec3 z=mix(mix(y2,x.rgb,step(0.5*x.rgb,y.rgb)),max(y2-1.0,vec3(0.0)),step(x.rgb,y2-1.0));return mix(x,vec4(z,y.a),opacity);}",yw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 z=mix(min(x.rgb*x.rgb/max(1.0-y.rgb,1e-12),1.0),y.rgb,step(1.0,y.rgb));return mix(x,vec4(z,y.a),opacity);}",_w="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.x,yHSL.y,xHSL.z));return mix(x,vec4(z,y.a),opacity);}",xw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(x.rgb+y.rgb-min(x.rgb*y.rgb,1.0),y.a),opacity);}",bw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 a=x.rgb;vec3 b=y.rgb;vec3 y2=2.0*b;vec3 w=step(0.5,b);vec3 c=a-(1.0-y2)*a*(1.0-a);vec3 d=mix(a+(y2-1.0)*(sqrt(a)-a),a+(y2-1.0)*a*((16.0*a-12.0)*a+3.0),w*(1.0-step(0.25,a)));vec3 z=mix(c,d,w);return mix(x,vec4(z,y.a),opacity);}",Mw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",Sw="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,vec4(max(x.rgb+y.rgb-1.0,0.0),y.a),opacity);}",ww="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 z=mix(max(1.0-min((1.0-x.rgb)/(2.0*y.rgb),1.0),0.0),min(x.rgb/(2.0*(1.0-y.rgb)),1.0),step(0.5,y.rgb));return mix(x,vec4(z,y.a),opacity);}",Ew=new Map([[Xe.ADD,XS],[Xe.ALPHA,qS],[Xe.AVERAGE,ZS],[Xe.COLOR,YS],[Xe.COLOR_BURN,KS],[Xe.COLOR_DODGE,JS],[Xe.DARKEN,QS],[Xe.DIFFERENCE,ew],[Xe.DIVIDE,tw],[Xe.DST,null],[Xe.EXCLUSION,iw],[Xe.HARD_LIGHT,nw],[Xe.HARD_MIX,sw],[Xe.HUE,rw],[Xe.INVERT,aw],[Xe.INVERT_RGB,ow],[Xe.LIGHTEN,lw],[Xe.LINEAR_BURN,cw],[Xe.LINEAR_DODGE,hw],[Xe.LINEAR_LIGHT,dw],[Xe.LUMINOSITY,uw],[Xe.MULTIPLY,fw],[Xe.NEGATION,pw],[Xe.NORMAL,mw],[Xe.OVERLAY,gw],[Xe.PIN_LIGHT,vw],[Xe.REFLECT,yw],[Xe.SATURATION,_w],[Xe.SCREEN,xw],[Xe.SOFT_LIGHT,bw],[Xe.SRC,Mw],[Xe.SUBTRACT,Sw],[Xe.VIVID_LIGHT,ww]]),Tw=class extends Cn{constructor(r,e=1){super(),this._blendFunction=r,this.opacity=new xe(e)}getOpacity(){return this.opacity.value}setOpacity(r){this.opacity.value=r}get blendFunction(){return this._blendFunction}set blendFunction(r){this._blendFunction=r,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(r){this.blendFunction=r}getShaderCode(){return Ew.get(this.blendFunction)}},jd=class extends Cn{constructor(r,e,{attributes:t=ds.NONE,blendFunction:i=Xe.NORMAL,defines:n=new Map,uniforms:s=new Map,extensions:a=null,vertexShader:o=null}={}){super(),this.name=r,this.renderer=null,this.attributes=t,this.fragmentShader=e,this.vertexShader=o,this.defines=n,this.uniforms=s,this.extensions=a,this.blendMode=new Tw(i),this.blendMode.addEventListener("change",l=>this.setChanged()),this._inputColorSpace=oi,this._outputColorSpace=xn}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(r){this._inputColorSpace=r,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(r){this._outputColorSpace=r,this.setChanged()}set mainScene(r){}set mainCamera(r){}getName(){return this.name}setRenderer(r){this.renderer=r}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(r){this.attributes=r,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(r){this.fragmentShader=r,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(r){this.vertexShader=r,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(r,e=qn){}update(r,e,t){}setSize(r,e){}initialize(r,e,t){}dispose(){for(const r of Object.keys(this)){const e=this[r];(e instanceof kt||e instanceof yi||e instanceof Ht||e instanceof xi)&&this[r].dispose()}}},Br={VERY_SMALL:0,MEDIUM:2,LARGE:3},Cw=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;
#include <colorspace_fragment>
}`,Aw="uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}",Pw=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],Lw=class extends Ot{constructor(r=new Ke){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new xe(null),texelSize:new xe(new Ke),scale:new xe(1),kernel:new xe(0)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Cw,vertexShader:Aw}),this.setTexelSize(r.x,r.y),this.kernelSize=Br.MEDIUM}set inputBuffer(r){this.uniforms.inputBuffer.value=r}setInputBuffer(r){this.inputBuffer=r}get kernelSequence(){return Pw[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(r){this.uniforms.scale.value=r}getScale(){return this.uniforms.scale.value}setScale(r){this.uniforms.scale.value=r}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(r){this.uniforms.kernel.value=r}setKernel(r){this.kernel=r}setTexelSize(r,e){this.uniforms.texelSize.value.set(r,e,r*.5,e*.5)}setSize(r,e){const t=1/r,i=1/e;this.uniforms.texelSize.value.set(t,i,t*.5,i*.5)}},Om=class extends xi{constructor({kernelSize:r=Br.MEDIUM,resolutionScale:e=.5,width:t=Tt.AUTO_SIZE,height:i=Tt.AUTO_SIZE,resolutionX:n=t,resolutionY:s=i}={}){super("KawaseBlurPass"),this.renderTargetA=new kt(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const a=this.resolution=new Tt(this,n,s,e);a.addEventListener("change",o=>this.setSize(a.baseWidth,a.baseHeight)),this._blurMaterial=new Lw,this._blurMaterial.kernelSize=r,this.copyMaterial=new Im}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(r){this._blurMaterial=r}get dithering(){return this.copyMaterial.dithering}set dithering(r){this.copyMaterial.dithering=r}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(r){this.blurMaterial.kernelSize=r}get width(){return this.resolution.width}set width(r){this.resolution.preferredWidth=r}get height(){return this.resolution.height}set height(r){this.resolution.preferredHeight=r}get scale(){return this.blurMaterial.scale}set scale(r){this.blurMaterial.scale=r}getScale(){return this.blurMaterial.scale}setScale(r){this.blurMaterial.scale=r}getKernelSize(){return this.kernelSize}setKernelSize(r){this.kernelSize=r}getResolutionScale(){return this.resolution.scale}setResolutionScale(r){this.resolution.scale=r}render(r,e,t,i,n){const s=this.scene,a=this.camera,o=this.renderTargetA,l=this.renderTargetB,c=this.blurMaterial,h=c.kernelSequence;let d=e;this.fullscreenMaterial=c;for(let u=0,f=h.length;u<f;++u){const m=(u&1)===0?o:l;c.kernel=h[u],c.inputBuffer=d.texture,r.setRenderTarget(m),r.render(s,a),d=m}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=d.texture,r.setRenderTarget(this.renderToScreen?null:t),r.render(s,a)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e);const i=t.width,n=t.height;this.renderTargetA.setSize(i,n),this.renderTargetB.setSize(i,n),this.blurMaterial.setSize(r,e)}initialize(r,e,t){t!==void 0&&(this.renderTargetA.texture.type=t,this.renderTargetB.texture.type=t,t!==Gt?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):r!==null&&r.outputColorSpace===et&&(this.renderTargetA.texture.colorSpace=et,this.renderTargetB.texture.colorSpace=et))}static get AUTO_SIZE(){return Tt.AUTO_SIZE}},Rw=`#include <common>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef RANGE
uniform vec2 range;
#elif defined(THRESHOLD)
uniform float threshold;uniform float smoothing;
#endif
varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);
#ifdef RANGE
float low=step(range.x,l);float high=step(l,range.y);l*=low*high;
#elif defined(THRESHOLD)
l=smoothstep(threshold,threshold+smoothing,l)*l;
#endif
#ifdef COLOR
gl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);
#else
gl_FragColor=vec4(l);
#endif
}`,Dw=class extends Ot{constructor(r=!1,e=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:to.replace(/\D+/g,"")},uniforms:{inputBuffer:new xe(null),threshold:new xe(0),smoothing:new xe(1),range:new xe(null)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Rw,vertexShader:Nm}),this.colorOutput=r,this.luminanceRange=e}set inputBuffer(r){this.uniforms.inputBuffer.value=r}setInputBuffer(r){this.uniforms.inputBuffer.value=r}get threshold(){return this.uniforms.threshold.value}set threshold(r){this.smoothing>0||r>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=r}getThreshold(){return this.threshold}setThreshold(r){this.threshold=r}get smoothing(){return this.uniforms.smoothing.value}set smoothing(r){this.threshold>0||r>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=r}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(r){this.smoothing=r}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(r){}get colorOutput(){return this.defines.COLOR!==void 0}set colorOutput(r){r?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(r){return this.colorOutput}setColorOutputEnabled(r){this.colorOutput=r}get useRange(){return this.luminanceRange!==null}set useRange(r){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(r){r!==null?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=r,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(r){this.luminanceRange=r}},Nw=class extends xi{constructor({renderTarget:r,luminanceRange:e,colorOutput:t,resolutionScale:i=1,width:n=Tt.AUTO_SIZE,height:s=Tt.AUTO_SIZE,resolutionX:a=n,resolutionY:o=s}={}){super("LuminancePass"),this.fullscreenMaterial=new Dw(t,e),this.needsSwap=!1,this.renderTarget=r,this.renderTarget===void 0&&(this.renderTarget=new kt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const l=this.resolution=new Tt(this,a,o,i);l.addEventListener("change",c=>this.setSize(l.baseWidth,l.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(r,e,t,i,n){const s=this.fullscreenMaterial;s.inputBuffer=e.texture,r.setRenderTarget(this.renderToScreen?null:this.renderTarget),r.render(this.scene,this.camera)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e),this.renderTarget.setSize(t.width,t.height)}initialize(r,e,t){t!==void 0&&t!==Gt&&(this.renderTarget.texture.type=t,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},Iw=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#define WEIGHT_INNER 0.125
#define WEIGHT_OUTER 0.0555555
varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;
#include <colorspace_fragment>
}`,kw="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}",Ow=class extends Ot{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new xe(null),texelSize:new xe(new Z)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Iw,vertexShader:kw})}set inputBuffer(r){this.uniforms.inputBuffer.value=r}setSize(r,e){this.uniforms.texelSize.value.set(1/r,1/e)}},zw=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;
#else
uniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;
#endif
uniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);
#include <colorspace_fragment>
}`,Uw="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}",Fw=class extends Ot{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new xe(null),supportBuffer:new xe(null),texelSize:new xe(new Z),radius:new xe(.85)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:zw,vertexShader:Uw})}set inputBuffer(r){this.uniforms.inputBuffer.value=r}set supportBuffer(r){this.uniforms.supportBuffer.value=r}get radius(){return this.uniforms.radius.value}set radius(r){this.uniforms.radius.value=r}setSize(r,e){this.uniforms.texelSize.value.set(1/r,1/e)}},Bw=class extends xi{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new kt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new Ow,this.upsamplingMaterial=new Fw,this.resolution=new Z}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(r){if(this.levels!==r){const e=this.renderTarget;this.dispose(),this.downsamplingMipmaps=[],this.upsamplingMipmaps=[];for(let t=0;t<r;++t){const i=e.clone();i.texture.name="Downsampling.Mipmap"+t,this.downsamplingMipmaps.push(i)}this.upsamplingMipmaps.push(e);for(let t=1,i=r-1;t<i;++t){const n=e.clone();n.texture.name="Upsampling.Mipmap"+t,this.upsamplingMipmaps.push(n)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(r){this.upsamplingMaterial.radius=r}render(r,e,t,i,n){const{scene:s,camera:a}=this,{downsamplingMaterial:o,upsamplingMaterial:l}=this,{downsamplingMipmaps:c,upsamplingMipmaps:h}=this;let d=e;this.fullscreenMaterial=o;for(let u=0,f=c.length;u<f;++u){const m=c[u];o.setSize(d.width,d.height),o.inputBuffer=d.texture,r.setRenderTarget(m),r.render(s,a),d=m}this.fullscreenMaterial=l;for(let u=h.length-1;u>=0;--u){const f=h[u];l.setSize(d.width,d.height),l.inputBuffer=d.texture,l.supportBuffer=c[u].texture,r.setRenderTarget(f),r.render(s,a),d=f}}setSize(r,e){const t=this.resolution;t.set(r,e);let i=t.width,n=t.height;for(let s=0,a=this.downsamplingMipmaps.length;s<a;++s)i=Math.round(i*.5),n=Math.round(n*.5),this.downsamplingMipmaps[s].setSize(i,n),s<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[s].setSize(i,n)}initialize(r,e,t){if(t!==void 0){const i=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(const n of i)n.texture.type=t;if(t!==Gt)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(r!==null&&r.outputColorSpace===et)for(const n of i)n.texture.colorSpace=et}}dispose(){super.dispose();for(const r of this.downsamplingMipmaps.concat(this.upsamplingMipmaps))r.dispose()}},Hw=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
uniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 texel=texture2D(map,uv);outputColor=vec4(texel.rgb*intensity,max(inputColor.a,texel.a));}`,Gw=class extends jd{constructor({blendFunction:r=Xe.SCREEN,luminanceThreshold:e=1,luminanceSmoothing:t=.03,mipmapBlur:i=!0,intensity:n=1,radius:s=.85,levels:a=8,kernelSize:o=Br.LARGE,resolutionScale:l=.5,width:c=Tt.AUTO_SIZE,height:h=Tt.AUTO_SIZE,resolutionX:d=c,resolutionY:u=h}={}){super("BloomEffect",Hw,{blendFunction:r,uniforms:new Map([["map",new xe(null)],["intensity",new xe(n)]])}),this.renderTarget=new kt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new Om({kernelSize:o}),this.luminancePass=new Nw({colorOutput:!0}),this.luminanceMaterial.threshold=e,this.luminanceMaterial.smoothing=t,this.mipmapBlurPass=new Bw,this.mipmapBlurPass.enabled=i,this.mipmapBlurPass.radius=s,this.mipmapBlurPass.levels=a,this.uniforms.get("map").value=i?this.mipmapBlurPass.texture:this.renderTarget.texture;const f=this.resolution=new Tt(this,d,u,l);f.addEventListener("change",m=>this.setSize(f.baseWidth,f.baseHeight))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(r){this.resolution.preferredWidth=r}get height(){return this.resolution.height}set height(r){this.resolution.preferredHeight=r}get dithering(){return this.blurPass.dithering}set dithering(r){this.blurPass.dithering=r}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(r){this.blurPass.kernelSize=r}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(r){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(r){this.uniforms.get("intensity").value=r}getIntensity(){return this.intensity}setIntensity(r){this.intensity=r}getResolutionScale(){return this.resolution.scale}setResolutionScale(r){this.resolution.scale=r}update(r,e,t){const i=this.renderTarget,n=this.luminancePass;n.enabled?(n.render(r,e),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(r,n.renderTarget):this.blurPass.render(r,n.renderTarget,i)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(r,e):this.blurPass.render(r,e,i)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e),this.renderTarget.setSize(t.width,t.height),this.blurPass.resolution.copy(t),this.luminancePass.setSize(r,e),this.mipmapBlurPass.setSize(r,e)}initialize(r,e,t){this.blurPass.initialize(r,e,t),this.luminancePass.initialize(r,e,t),this.mipmapBlurPass.initialize(r,e,t),t!==void 0&&(this.renderTarget.texture.type=t,r!==null&&r.outputColorSpace===et&&(this.renderTarget.texture.colorSpace=et))}};function Zo(r,e,t){return r*(e-t)-e}function Yo(r,e,t){return Math.min(Math.max((r+e)/(e-t),0),1)}var zm=class extends xi{constructor(r,e="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=r,this.input=e}setInput(r){this.input=r}render(r,e,t,i,n){const s=this.fullscreenMaterial.uniforms;e!==null&&s!==void 0&&s[this.input]!==void 0&&(s[this.input].value=e.texture),r.setRenderTarget(this.renderToScreen?null:t),r.render(this.scene,this.camera)}initialize(r,e,t){t!==void 0&&t!==Gt&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}};function Vw(r,e,t){const i=new Map([[no,1],[Md,2],[vi,4]]);let n;if(i.has(e)||console.error("Invalid noise texture format"),t===Gt){n=new Uint8Array(r*i.get(e));for(let s=0,a=n.length;s<a;++s)n[s]=Math.random()*255+.5}else{n=new Float32Array(r*i.get(e));for(let s=0,a=n.length;s<a;++s)n[s]=Math.random()}return n}var Ww=class extends Ld{constructor(r,e,t=no,i=Gt){super(Vw(r*e,t,i),r,e,t,i),this.needsUpdate=!0}},Vl=class extends xi{constructor(r,e,t=null){super("RenderPass",r,e),this.needsSwap=!1,this.clearPass=new Wd,this.overrideMaterialManager=t===null?null:new Kf(t),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(r){this.scene=r}set mainCamera(r){this.camera=r}get renderToScreen(){return super.renderToScreen}set renderToScreen(r){super.renderToScreen=r,this.clearPass.renderToScreen=r}get overrideMaterial(){const r=this.overrideMaterialManager;return r!==null?r.material:null}set overrideMaterial(r){const e=this.overrideMaterialManager;r!==null?e!==null?e.setMaterial(r):this.overrideMaterialManager=new Kf(r):e!==null&&(e.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(r){this.overrideMaterial=r}get clear(){return this.clearPass.enabled}set clear(r){this.clearPass.enabled=r}getSelection(){return this.selection}setSelection(r){this.selection=r}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(r){this.ignoreBackground=r}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(r){this.skipShadowMapUpdate=r}getClearPass(){return this.clearPass}render(r,e,t,i,n){const s=this.scene,a=this.camera,o=this.selection,l=a.layers.mask,c=s.background,h=r.shadowMap.autoUpdate,d=this.renderToScreen?null:e;o!==null&&a.layers.set(o.getLayer()),this.skipShadowMapUpdate&&(r.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(s.background=null),this.clearPass.enabled&&this.clearPass.render(r,e),r.setRenderTarget(d),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(r,s,a):r.render(s,a),a.layers.mask=l,s.background=c,r.shadowMap.autoUpdate=h}},jw=`#include <packing>
#include <clipping_planes_pars_fragment>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform float cameraNear;uniform float cameraFar;centroid varying float vViewZ;centroid varying vec4 vProjTexCoord;void main(){
#include <clipping_planes_fragment>
vec2 projTexCoord=(vProjTexCoord.xy/vProjTexCoord.w)*0.5+0.5;projTexCoord=clamp(projTexCoord,0.002,0.998);
#if DEPTH_PACKING == 3201
float fragCoordZ=unpackRGBAToDepth(texture2D(depthBuffer,projTexCoord));
#else
float fragCoordZ=texture2D(depthBuffer,projTexCoord).r;
#endif
#ifdef PERSPECTIVE_CAMERA
float viewZ=perspectiveDepthToViewZ(fragCoordZ,cameraNear,cameraFar);
#else
float viewZ=orthographicDepthToViewZ(fragCoordZ,cameraNear,cameraFar);
#endif
float depthTest=(-vViewZ>-viewZ)?1.0:0.0;gl_FragColor.rg=vec2(0.0,depthTest);}`,$w=`#include <common>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
varying float vViewZ;varying vec4 vProjTexCoord;void main(){
#include <skinbase_vertex>
#include <begin_vertex>
#include <morphtarget_vertex>
#include <skinning_vertex>
#include <project_vertex>
vViewZ=mvPosition.z;vProjTexCoord=gl_Position;
#include <clipping_planes_vertex>
}`,Xw=class extends Ot{constructor(r=null,e){super({name:"DepthComparisonMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new xe(null),cameraNear:new xe(.3),cameraFar:new xe(1e3)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:jw,vertexShader:$w}),this.depthBuffer=r,this.depthPacking=pl,this.copyCameraSettings(e)}set depthBuffer(r){this.uniforms.depthBuffer.value=r}set depthPacking(r){this.defines.DEPTH_PACKING=r.toFixed(0),this.needsUpdate=!0}setDepthBuffer(r,e=pl){this.depthBuffer=r,this.depthPacking=e}adoptCameraSettings(r){this.copyCameraSettings(r)}copyCameraSettings(r){r&&(this.uniforms.cameraNear.value=r.near,this.uniforms.cameraFar.value=r.far,r instanceof Jt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},qw="uniform lowp sampler2D inputBuffer;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 c0=texture2D(inputBuffer,vUv0).rg;vec2 c1=texture2D(inputBuffer,vUv1).rg;vec2 c2=texture2D(inputBuffer,vUv2).rg;vec2 c3=texture2D(inputBuffer,vUv3).rg;float d0=(c0.x-c1.x)*0.5;float d1=(c2.x-c3.x)*0.5;float d=length(vec2(d0,d1));float a0=min(c0.y,c1.y);float a1=min(c2.y,c3.y);float visibilityFactor=min(a0,a1);gl_FragColor.rg=(1.0-visibilityFactor>0.001)?vec2(d,0.0):vec2(0.0,d);}",Zw="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=vec2(uv.x+texelSize.x,uv.y);vUv1=vec2(uv.x-texelSize.x,uv.y);vUv2=vec2(uv.x,uv.y+texelSize.y);vUv3=vec2(uv.x,uv.y-texelSize.y);gl_Position=vec4(position.xy,1.0,1.0);}",Yw=class extends Ot{constructor(r=new Z){super({name:"OutlineMaterial",uniforms:{inputBuffer:new xe(null),texelSize:new xe(new Z)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:qw,vertexShader:Zw}),this.uniforms.texelSize.value.set(r.x,r.y),this.uniforms.maskTexture=this.uniforms.inputBuffer}set inputBuffer(r){this.uniforms.inputBuffer.value=r}setInputBuffer(r){this.uniforms.inputBuffer.value=r}setTexelSize(r,e){this.uniforms.texelSize.value.set(r,e)}setSize(r,e){this.uniforms.texelSize.value.set(1/r,1/e)}},Kw=class extends xi{constructor(r,e,{renderTarget:t,resolutionScale:i=1,width:n=Tt.AUTO_SIZE,height:s=Tt.AUTO_SIZE,resolutionX:a=n,resolutionY:o=s}={}){super("DepthPass"),this.needsSwap=!1,this.renderPass=new Vl(r,e,new Mm({depthPacking:pl}));const l=this.renderPass;l.skipShadowMapUpdate=!0,l.ignoreBackground=!0;const c=l.clearPass;c.overrideClearColor=new fe(16777215),c.overrideClearAlpha=1,this.renderTarget=t,this.renderTarget===void 0&&(this.renderTarget=new kt(1,1,{minFilter:Bt,magFilter:Bt}),this.renderTarget.texture.name="DepthPass.Target");const h=this.resolution=new Tt(this,a,o,i);h.addEventListener("change",d=>this.setSize(h.baseWidth,h.baseHeight))}set mainScene(r){this.renderPass.mainScene=r}set mainCamera(r){this.renderPass.mainCamera=r}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(r){this.resolution.scale=r}render(r,e,t,i,n){const s=this.renderToScreen?null:this.renderTarget;this.renderPass.render(r,s)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e),this.renderTarget.setSize(t.width,t.height)}},Jw=`uniform lowp sampler2D edgeTexture;uniform lowp sampler2D maskTexture;uniform vec3 visibleEdgeColor;uniform vec3 hiddenEdgeColor;uniform float pulse;uniform float edgeStrength;
#ifdef USE_PATTERN
uniform lowp sampler2D patternTexture;varying vec2 vUvPattern;
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec2 edge=texture2D(edgeTexture,uv).rg;vec2 mask=texture2D(maskTexture,uv).rg;
#ifndef X_RAY
edge.y=0.0;
#endif
edge*=(edgeStrength*mask.x*pulse);vec3 color=edge.x*visibleEdgeColor+edge.y*hiddenEdgeColor;float visibilityFactor=0.0;
#ifdef USE_PATTERN
vec4 patternColor=texture2D(patternTexture,vUvPattern);
#ifdef X_RAY
float hiddenFactor=0.5;
#else
float hiddenFactor=0.0;
#endif
visibilityFactor=(1.0-mask.y>0.0)?1.0:hiddenFactor;visibilityFactor*=(1.0-mask.x)*patternColor.a;color+=visibilityFactor*patternColor.rgb;
#endif
float alpha=max(max(edge.x,edge.y),visibilityFactor);
#ifdef ALPHA
outputColor=vec4(color,alpha);
#else
outputColor=vec4(color,max(alpha,inputColor.a));
#endif
}`,Qw="uniform float patternScale;varying vec2 vUvPattern;void mainSupport(const in vec2 uv){vUvPattern=uv*vec2(aspect,1.0)*patternScale;}",eE=class extends jd{constructor(r,e,{blendFunction:t=Xe.SCREEN,patternTexture:i=null,patternScale:n=1,edgeStrength:s=1,pulseSpeed:a=0,visibleEdgeColor:o=16777215,hiddenEdgeColor:l=2230538,kernelSize:c=Br.VERY_SMALL,blur:h=!1,xRay:d=!0,multisampling:u=0,resolutionScale:f=.5,width:m=Tt.AUTO_SIZE,height:v=Tt.AUTO_SIZE,resolutionX:g=m,resolutionY:p=v}={}){super("OutlineEffect",Jw,{uniforms:new Map([["maskTexture",new xe(null)],["edgeTexture",new xe(null)],["edgeStrength",new xe(s)],["visibleEdgeColor",new xe(new fe(o))],["hiddenEdgeColor",new xe(new fe(l))],["pulse",new xe(1)],["patternScale",new xe(n)],["patternTexture",new xe(null)]])}),this.blendMode.addEventListener("change",w=>{this.blendMode.blendFunction===Xe.ALPHA?this.defines.set("ALPHA","1"):this.defines.delete("ALPHA"),this.setChanged()}),this.blendMode.blendFunction=t,this.patternTexture=i,this.xRay=d,this.scene=r,this.camera=e,this.renderTargetMask=new kt(1,1),this.renderTargetMask.samples=u,this.renderTargetMask.texture.name="Outline.Mask",this.uniforms.get("maskTexture").value=this.renderTargetMask.texture,this.renderTargetOutline=new kt(1,1,{depthBuffer:!1}),this.renderTargetOutline.texture.name="Outline.Edges",this.uniforms.get("edgeTexture").value=this.renderTargetOutline.texture,this.clearPass=new Wd,this.clearPass.overrideClearColor=new fe(0),this.clearPass.overrideClearAlpha=1,this.depthPass=new Kw(r,e),this.maskPass=new Vl(r,e,new Xw(this.depthPass.texture,e));const x=this.maskPass.clearPass;x.overrideClearColor=new fe(16777215),x.overrideClearAlpha=1,this.blurPass=new Om({resolutionScale:f,resolutionX:g,resolutionY:p,kernelSize:c}),this.blurPass.enabled=h;const _=this.blurPass.resolution;_.addEventListener("change",w=>this.setSize(_.baseWidth,_.baseHeight)),this.outlinePass=new zm(new Yw);const y=this.outlinePass.fullscreenMaterial;y.inputBuffer=this.renderTargetMask.texture,this.time=0,this.forceUpdate=!0,this.selection=new km,this.pulseSpeed=a}set mainScene(r){this.scene=r,this.depthPass.mainScene=r,this.maskPass.mainScene=r}set mainCamera(r){this.camera=r,this.depthPass.mainCamera=r,this.maskPass.mainCamera=r,this.maskPass.overrideMaterial.copyCameraSettings(r)}get resolution(){return this.blurPass.resolution}getResolution(){return this.blurPass.getResolution()}get multisampling(){return this.renderTargetMask.samples}set multisampling(r){this.renderTargetMask.samples=r,this.renderTargetMask.dispose()}get patternScale(){return this.uniforms.get("patternScale").value}set patternScale(r){this.uniforms.get("patternScale").value=r}get edgeStrength(){return this.uniforms.get("edgeStrength").value}set edgeStrength(r){this.uniforms.get("edgeStrength").value=r}get visibleEdgeColor(){return this.uniforms.get("visibleEdgeColor").value}set visibleEdgeColor(r){this.uniforms.get("visibleEdgeColor").value=r}get hiddenEdgeColor(){return this.uniforms.get("hiddenEdgeColor").value}set hiddenEdgeColor(r){this.uniforms.get("hiddenEdgeColor").value=r}getBlurPass(){return this.blurPass}getSelection(){return this.selection}getPulseSpeed(){return this.pulseSpeed}setPulseSpeed(r){this.pulseSpeed=r}get width(){return this.resolution.width}set width(r){this.resolution.preferredWidth=r}get height(){return this.resolution.height}set height(r){this.resolution.preferredHeight=r}get selectionLayer(){return this.selection.layer}set selectionLayer(r){this.selection.layer=r}get dithering(){return this.blurPass.dithering}set dithering(r){this.blurPass.dithering=r}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(r){this.blurPass.kernelSize=r}get blur(){return this.blurPass.enabled}set blur(r){this.blurPass.enabled=r}get xRay(){return this.defines.has("X_RAY")}set xRay(r){this.xRay!==r&&(r?this.defines.set("X_RAY","1"):this.defines.delete("X_RAY"),this.setChanged())}isXRayEnabled(){return this.xRay}setXRayEnabled(r){this.xRay=r}get patternTexture(){return this.uniforms.get("patternTexture").value}set patternTexture(r){r!==null?(r.wrapS=r.wrapT=ps,this.defines.set("USE_PATTERN","1"),this.setVertexShader(Qw)):(this.defines.delete("USE_PATTERN"),this.setVertexShader(null)),this.uniforms.get("patternTexture").value=r,this.setChanged()}setPatternTexture(r){this.patternTexture=r}getResolutionScale(){return this.resolution.scale}setResolutionScale(r){this.resolution.scale=r}setSelection(r){return this.selection.set(r),this}clearSelection(){return this.selection.clear(),this}selectObject(r){return this.selection.add(r),this}deselectObject(r){return this.selection.delete(r),this}update(r,e,t){const i=this.scene,n=this.camera,s=this.selection,o=this.uniforms.get("pulse"),l=i.background,c=n.layers.mask;(this.forceUpdate||s.size>0)&&(i.background=null,o.value=1,this.pulseSpeed>0&&(o.value=Math.cos(this.time*this.pulseSpeed*10)*.375+.625),this.time+=t,s.setVisible(!1),this.depthPass.render(r),s.setVisible(!0),n.layers.set(s.layer),this.maskPass.render(r,this.renderTargetMask),n.layers.mask=c,i.background=l,this.outlinePass.render(r,null,this.renderTargetOutline),this.blurPass.enabled&&this.blurPass.render(r,this.renderTargetOutline,this.renderTargetOutline)),this.forceUpdate=s.size>0}setSize(r,e){this.blurPass.setSize(r,e),this.renderTargetMask.setSize(r,e);const t=this.resolution;t.setBaseSize(r,e);const i=t.width,n=t.height;this.depthPass.setSize(i,n),this.renderTargetOutline.setSize(i,n),this.outlinePass.fullscreenMaterial.setSize(i,n)}initialize(r,e,t){this.blurPass.initialize(r,e,Gt),t!==void 0&&(this.depthPass.initialize(r,e,t),this.maskPass.initialize(r,e,t),this.outlinePass.initialize(r,e,t))}},tE=`#include <common>
#include <packing>
#ifdef NORMAL_DEPTH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D normalDepthBuffer;
#else
uniform mediump sampler2D normalDepthBuffer;
#endif
float readDepth(const in vec2 uv){return texture2D(normalDepthBuffer,uv).a;}
#else
uniform lowp sampler2D normalBuffer;
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}
#endif
uniform lowp sampler2D noiseTexture;uniform mat4 inverseProjectionMatrix;uniform mat4 projectionMatrix;uniform vec2 texelSize;uniform vec2 cameraNearFar;uniform float intensity;uniform float minRadiusScale;uniform float fade;uniform float bias;uniform vec2 distanceCutoff;uniform vec2 proximityCutoff;varying vec2 vUv;varying vec2 vUv2;float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);
#else
return orthographicDepthToViewZ(depth,cameraNearFar.x,cameraNearFar.y);
#endif
}vec3 getViewPosition(const in vec2 screenPosition,const in float depth,const in float viewZ){vec4 clipPosition=vec4(vec3(screenPosition,depth)*2.0-1.0,1.0);float clipW=projectionMatrix[2][3]*viewZ+projectionMatrix[3][3];clipPosition*=clipW;return(inverseProjectionMatrix*clipPosition).xyz;}float getAmbientOcclusion(const in vec3 p,const in vec3 n,const in float depth,const in vec2 uv){float radiusScale=1.0-smoothstep(0.0,distanceCutoff.y,depth);radiusScale=radiusScale*(1.0-minRadiusScale)+minRadiusScale;float radius=RADIUS*radiusScale;float noise=texture2D(noiseTexture,vUv2).r;float baseAngle=noise*PI2;float rings=SPIRAL_TURNS*PI2;float occlusion=0.0;int taps=0;for(int i=0;i<SAMPLES_INT;++i){float alpha=(float(i)+0.5)*INV_SAMPLES_FLOAT;float angle=alpha*rings+baseAngle;vec2 rotation=vec2(cos(angle),sin(angle));vec2 coords=alpha*radius*rotation*texelSize+uv;if(coords.s<0.0||coords.s>1.0||coords.t<0.0||coords.t>1.0){continue;}float sampleDepth=readDepth(coords);float viewZ=getViewZ(sampleDepth);
#ifdef PERSPECTIVE_CAMERA
float linearSampleDepth=viewZToOrthographicDepth(viewZ,cameraNearFar.x,cameraNearFar.y);
#else
float linearSampleDepth=sampleDepth;
#endif
float proximity=abs(depth-linearSampleDepth);if(proximity<proximityCutoff.y){float falloff=1.0-smoothstep(proximityCutoff.x,proximityCutoff.y,proximity);vec3 Q=getViewPosition(coords,sampleDepth,viewZ);vec3 v=Q-p;float vv=dot(v,v);float vn=dot(v,n)-bias;float f=max(RADIUS_SQ-vv,0.0)/RADIUS_SQ;occlusion+=(f*f*f*max(vn/(fade+vv),0.0))*falloff;}++taps;}return occlusion/(4.0*max(float(taps),1.0));}void main(){
#ifdef NORMAL_DEPTH
vec4 normalDepth=texture2D(normalDepthBuffer,vUv);
#else
vec4 normalDepth=vec4(texture2D(normalBuffer,vUv).xyz,readDepth(vUv));
#endif
float ao=0.0;float depth=normalDepth.a;float viewZ=getViewZ(depth);
#ifdef PERSPECTIVE_CAMERA
float linearDepth=viewZToOrthographicDepth(viewZ,cameraNearFar.x,cameraNearFar.y);
#else
float linearDepth=depth;
#endif
if(linearDepth<distanceCutoff.y){vec3 viewPosition=getViewPosition(vUv,depth,viewZ);vec3 viewNormal=unpackRGBToNormal(normalDepth.rgb);ao+=getAmbientOcclusion(viewPosition,viewNormal,linearDepth,vUv);float d=smoothstep(distanceCutoff.x,distanceCutoff.y,linearDepth);ao=mix(ao,0.0,d);
#ifdef LEGACY_INTENSITY
ao=clamp(1.0-pow(1.0-ao,abs(intensity)),0.0,1.0);
#endif
}gl_FragColor.r=ao;}`,iE="uniform vec2 noiseScale;varying vec2 vUv;varying vec2 vUv2;void main(){vUv=position.xy*0.5+0.5;vUv2=vUv*noiseScale;gl_Position=vec4(position.xy,1.0,1.0);}",nE=class extends Ot{constructor(r){super({name:"SSAOMaterial",defines:{SAMPLES_INT:"0",INV_SAMPLES_FLOAT:"0.0",SPIRAL_TURNS:"0.0",RADIUS:"1.0",RADIUS_SQ:"1.0",DISTANCE_SCALING:"1",DEPTH_PACKING:"0"},uniforms:{depthBuffer:new xe(null),normalBuffer:new xe(null),normalDepthBuffer:new xe(null),noiseTexture:new xe(null),inverseProjectionMatrix:new xe(new Ne),projectionMatrix:new xe(new Ne),texelSize:new xe(new Z),cameraNearFar:new xe(new Z),distanceCutoff:new xe(new Z),proximityCutoff:new xe(new Z),noiseScale:new xe(new Z),minRadiusScale:new xe(.33),intensity:new xe(1),fade:new xe(.01),bias:new xe(0)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:tE,vertexShader:iE}),this.copyCameraSettings(r),this.resolution=new Z,this.r=1}get near(){return this.uniforms.cameraNearFar.value.x}get far(){return this.uniforms.cameraNearFar.value.y}set normalDepthBuffer(r){this.uniforms.normalDepthBuffer.value=r,r!==null?this.defines.NORMAL_DEPTH="1":delete this.defines.NORMAL_DEPTH,this.needsUpdate=!0}setNormalDepthBuffer(r){this.normalDepthBuffer=r}set normalBuffer(r){this.uniforms.normalBuffer.value=r}setNormalBuffer(r){this.uniforms.normalBuffer.value=r}set depthBuffer(r){this.uniforms.depthBuffer.value=r}set depthPacking(r){this.defines.DEPTH_PACKING=r.toFixed(0),this.needsUpdate=!0}setDepthBuffer(r,e=qn){this.depthBuffer=r,this.depthPacking=e}set noiseTexture(r){this.uniforms.noiseTexture.value=r}setNoiseTexture(r){this.uniforms.noiseTexture.value=r}get samples(){return Number(this.defines.SAMPLES_INT)}set samples(r){this.defines.SAMPLES_INT=r.toFixed(0),this.defines.INV_SAMPLES_FLOAT=(1/r).toFixed(9),this.needsUpdate=!0}getSamples(){return this.samples}setSamples(r){this.samples=r}get rings(){return Number(this.defines.SPIRAL_TURNS)}set rings(r){this.defines.SPIRAL_TURNS=r.toFixed(1),this.needsUpdate=!0}getRings(){return this.rings}setRings(r){this.rings=r}get intensity(){return this.uniforms.intensity.value}set intensity(r){this.uniforms.intensity.value=r,this.defines.LEGACY_INTENSITY===void 0&&(this.defines.LEGACY_INTENSITY="1",this.needsUpdate=!0)}getIntensity(){return this.uniforms.intensity.value}setIntensity(r){this.uniforms.intensity.value=r}get fade(){return this.uniforms.fade.value}set fade(r){this.uniforms.fade.value=r}getFade(){return this.uniforms.fade.value}setFade(r){this.uniforms.fade.value=r}get bias(){return this.uniforms.bias.value}set bias(r){this.uniforms.bias.value=r}getBias(){return this.uniforms.bias.value}setBias(r){this.uniforms.bias.value=r}get minRadiusScale(){return this.uniforms.minRadiusScale.value}set minRadiusScale(r){this.uniforms.minRadiusScale.value=r}getMinRadiusScale(){return this.uniforms.minRadiusScale.value}setMinRadiusScale(r){this.uniforms.minRadiusScale.value=r}updateRadius(){const r=this.r*this.resolution.height;this.defines.RADIUS=r.toFixed(11),this.defines.RADIUS_SQ=(r*r).toFixed(11),this.needsUpdate=!0}get radius(){return this.r}set radius(r){this.r=Math.min(Math.max(r,1e-6),1),this.updateRadius()}getRadius(){return this.radius}setRadius(r){this.radius=r}get distanceScaling(){return!0}set distanceScaling(r){}isDistanceScalingEnabled(){return this.distanceScaling}setDistanceScalingEnabled(r){this.distanceScaling=r}get distanceThreshold(){return this.uniforms.distanceCutoff.value.x}set distanceThreshold(r){this.uniforms.distanceCutoff.value.set(Math.min(Math.max(r,0),1),Math.min(Math.max(r+this.distanceFalloff,0),1))}get worldDistanceThreshold(){return-Zo(this.distanceThreshold,this.near,this.far)}set worldDistanceThreshold(r){this.distanceThreshold=Yo(-r,this.near,this.far)}get distanceFalloff(){return this.uniforms.distanceCutoff.value.y-this.distanceThreshold}set distanceFalloff(r){this.uniforms.distanceCutoff.value.y=Math.min(Math.max(this.distanceThreshold+r,0),1)}get worldDistanceFalloff(){return-Zo(this.distanceFalloff,this.near,this.far)}set worldDistanceFalloff(r){this.distanceFalloff=Yo(-r,this.near,this.far)}setDistanceCutoff(r,e){this.uniforms.distanceCutoff.value.set(Math.min(Math.max(r,0),1),Math.min(Math.max(r+e,0),1))}get proximityThreshold(){return this.uniforms.proximityCutoff.value.x}set proximityThreshold(r){this.uniforms.proximityCutoff.value.set(Math.min(Math.max(r,0),1),Math.min(Math.max(r+this.proximityFalloff,0),1))}get worldProximityThreshold(){return-Zo(this.proximityThreshold,this.near,this.far)}set worldProximityThreshold(r){this.proximityThreshold=Yo(-r,this.near,this.far)}get proximityFalloff(){return this.uniforms.proximityCutoff.value.y-this.proximityThreshold}set proximityFalloff(r){this.uniforms.proximityCutoff.value.y=Math.min(Math.max(this.proximityThreshold+r,0),1)}get worldProximityFalloff(){return-Zo(this.proximityFalloff,this.near,this.far)}set worldProximityFalloff(r){this.proximityFalloff=Yo(-r,this.near,this.far)}setProximityCutoff(r,e){this.uniforms.proximityCutoff.value.set(Math.min(Math.max(r,0),1),Math.min(Math.max(r+e,0),1))}setTexelSize(r,e){this.uniforms.texelSize.value.set(r,e)}adoptCameraSettings(r){this.copyCameraSettings(r)}copyCameraSettings(r){r&&(this.uniforms.cameraNearFar.value.set(r.near,r.far),this.uniforms.projectionMatrix.value.copy(r.projectionMatrix),this.uniforms.inverseProjectionMatrix.value.copy(r.projectionMatrix).invert(),r instanceof Jt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(r,e){const t=this.uniforms,i=t.noiseTexture.value;i!==null&&t.noiseScale.value.set(r/i.image.width,e/i.image.height),t.texelSize.value.set(1/r,1/e),this.resolution.set(r,e),this.updateRadius()}},sE=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
vec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;
#else
vec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);
#endif
gl_FragColor=vec4(n[index],d[index]);}`,rE="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",aE=class extends Ot{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new xe(null),normalBuffer:new xe(null),texelSize:new xe(new Z)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:sE,vertexShader:rE})}set depthBuffer(r){this.uniforms.depthBuffer.value=r}set depthPacking(r){this.defines.DEPTH_PACKING=r.toFixed(0),this.needsUpdate=!0}setDepthBuffer(r,e=qn){this.depthBuffer=r,this.depthPacking=e}set normalBuffer(r){this.uniforms.normalBuffer.value=r,r!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(r){this.normalBuffer=r}setTexelSize(r,e){this.uniforms.texelSize.value.set(r,e)}setSize(r,e){this.uniforms.texelSize.value.set(1/r,1/e)}},oE=class extends xi{constructor({normalBuffer:r=null,resolutionScale:e=.5,width:t=Tt.AUTO_SIZE,height:i=Tt.AUTO_SIZE,resolutionX:n=t,resolutionY:s=i}={}){super("DepthDownsamplingPass");const a=new aE;a.normalBuffer=r,this.fullscreenMaterial=a,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new kt(1,1,{minFilter:Bt,magFilter:Bt,depthBuffer:!1,type:Xi}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const o=this.resolution=new Tt(this,n,s,e);o.addEventListener("change",l=>this.setSize(o.baseWidth,o.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(r,e=qn){this.fullscreenMaterial.depthBuffer=r,this.fullscreenMaterial.depthPacking=e}render(r,e,t,i,n){r.setRenderTarget(this.renderToScreen?null:this.renderTarget),r.render(this.scene,this.camera)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e),this.renderTarget.setSize(t.width,t.height),this.fullscreenMaterial.setSize(r,e)}initialize(r,e,t){const i=r.getContext();if(!(i.getExtension("EXT_color_buffer_float")||i.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},lE=`uniform lowp sampler2D aoBuffer;uniform float luminanceInfluence;uniform float intensity;
#if defined(DEPTH_AWARE_UPSAMPLING) && defined(NORMAL_DEPTH)
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D normalDepthBuffer;
#else
uniform mediump sampler2D normalDepthBuffer;
#endif
#endif
#ifdef COLORIZE
uniform vec3 color;
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){float aoLinear=texture2D(aoBuffer,uv).r;
#if defined(DEPTH_AWARE_UPSAMPLING) && defined(NORMAL_DEPTH) && __VERSION__ == 300
vec4 normalDepth[4];normalDepth[0]=textureOffset(normalDepthBuffer,uv,ivec2(0,0));normalDepth[1]=textureOffset(normalDepthBuffer,uv,ivec2(0,1));normalDepth[2]=textureOffset(normalDepthBuffer,uv,ivec2(1,0));normalDepth[3]=textureOffset(normalDepthBuffer,uv,ivec2(1,1));float dot01=dot(normalDepth[0].rgb,normalDepth[1].rgb);float dot02=dot(normalDepth[0].rgb,normalDepth[2].rgb);float dot03=dot(normalDepth[0].rgb,normalDepth[3].rgb);float minDot=min(dot01,min(dot02,dot03));float s=step(THRESHOLD,minDot);float smallestDistance=1.0;int index;for(int i=0;i<4;++i){float distance=abs(depth-normalDepth[i].a);if(distance<smallestDistance){smallestDistance=distance;index=i;}}ivec2 offsets[4];offsets[0]=ivec2(0,0);offsets[1]=ivec2(0,1);offsets[2]=ivec2(1,0);offsets[3]=ivec2(1,1);ivec2 coord=ivec2(uv*vec2(textureSize(aoBuffer,0)))+offsets[index];float aoNearest=texelFetch(aoBuffer,coord,0).r;float ao=mix(aoNearest,aoLinear,s);
#else
float ao=aoLinear;
#endif
float l=luminance(inputColor.rgb);ao=mix(ao,0.0,l*luminanceInfluence);ao=clamp(ao*intensity,0.0,1.0);
#ifdef COLORIZE
outputColor=vec4(1.0-ao*(1.0-color),inputColor.a);
#else
outputColor=vec4(vec3(1.0-ao),inputColor.a);
#endif
}`,Jf=64,cE=class extends jd{constructor(r,e,{blendFunction:t=Xe.MULTIPLY,samples:i=9,rings:n=7,normalDepthBuffer:s=null,depthAwareUpsampling:a=!0,worldDistanceThreshold:o,worldDistanceFalloff:l,worldProximityThreshold:c,worldProximityFalloff:h,distanceThreshold:d=.97,distanceFalloff:u=.03,rangeThreshold:f=5e-4,rangeFalloff:m=.001,minRadiusScale:v=.1,luminanceInfluence:g=.7,radius:p=.1825,intensity:x=1,bias:_=.025,fade:y=.01,color:w=null,resolutionScale:C=1,width:A=Tt.AUTO_SIZE,height:L=Tt.AUTO_SIZE,resolutionX:b=A,resolutionY:S=L}={}){super("SSAOEffect",lE,{blendFunction:t,attributes:ds.DEPTH,defines:new Map([["THRESHOLD","0.997"]]),uniforms:new Map([["aoBuffer",new xe(null)],["normalDepthBuffer",new xe(s)],["luminanceInfluence",new xe(g)],["color",new xe(null)],["intensity",new xe(x)],["scale",new xe(0)]])}),this.renderTarget=new kt(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="AO.Target",this.uniforms.get("aoBuffer").value=this.renderTarget.texture;const N=this.resolution=new Tt(this,b,S,C);N.addEventListener("change",H=>this.setSize(N.baseWidth,N.baseHeight)),this.camera=r,this.depthDownsamplingPass=new oE({normalBuffer:e,resolutionScale:C}),this.depthDownsamplingPass.enabled=s===null,this.ssaoPass=new zm(new nE(r));const O=new Ww(Jf,Jf,vi);O.wrapS=O.wrapT=ps;const k=this.ssaoMaterial;k.normalBuffer=e,k.noiseTexture=O,k.minRadiusScale=v,k.samples=i,k.radius=p,k.rings=n,k.fade=y,k.bias=_,k.distanceThreshold=d,k.distanceFalloff=u,k.proximityThreshold=f,k.proximityFalloff=m,o!==void 0&&(k.worldDistanceThreshold=o),l!==void 0&&(k.worldDistanceFalloff=l),c!==void 0&&(k.worldProximityThreshold=c),h!==void 0&&(k.worldProximityFalloff=h),s!==null&&(this.ssaoMaterial.normalDepthBuffer=s,this.defines.set("NORMAL_DEPTH","1")),this.depthAwareUpsampling=a,this.color=w}set mainCamera(r){this.camera=r,this.ssaoMaterial.copyCameraSettings(r)}get normalBuffer(){return this.ssaoMaterial.normalBuffer}set normalBuffer(r){this.ssaoMaterial.normalBuffer=r,this.depthDownsamplingPass.fullscreenMaterial.normalBuffer=r}getResolution(){return this.resolution}get ssaoMaterial(){return this.ssaoPass.fullscreenMaterial}getSSAOMaterial(){return this.ssaoMaterial}get samples(){return this.ssaoMaterial.samples}set samples(r){this.ssaoMaterial.samples=r}get rings(){return this.ssaoMaterial.rings}set rings(r){this.ssaoMaterial.rings=r}get radius(){return this.ssaoMaterial.radius}set radius(r){this.ssaoMaterial.radius=r}get depthAwareUpsampling(){return this.defines.has("DEPTH_AWARE_UPSAMPLING")}set depthAwareUpsampling(r){this.depthAwareUpsampling!==r&&(r?this.defines.set("DEPTH_AWARE_UPSAMPLING","1"):this.defines.delete("DEPTH_AWARE_UPSAMPLING"),this.setChanged())}isDepthAwareUpsamplingEnabled(){return this.depthAwareUpsampling}setDepthAwareUpsamplingEnabled(r){this.depthAwareUpsampling=r}get distanceScaling(){return!0}set distanceScaling(r){}get color(){return this.uniforms.get("color").value}set color(r){const e=this.uniforms,t=this.defines;r!==null?t.has("COLORIZE")?e.get("color").value.set(r):(t.set("COLORIZE","1"),e.get("color").value=new fe(r),this.setChanged()):t.has("COLORIZE")&&(t.delete("COLORIZE"),e.get("color").value=null,this.setChanged())}get luminanceInfluence(){return this.uniforms.get("luminanceInfluence").value}set luminanceInfluence(r){this.uniforms.get("luminanceInfluence").value=r}get intensity(){return this.uniforms.get("intensity").value}set intensity(r){this.uniforms.get("intensity").value=r}getColor(){return this.color}setColor(r){this.color=r}setDistanceCutoff(r,e){this.ssaoMaterial.distanceThreshold=r,this.ssaoMaterial.distanceFalloff=e}setProximityCutoff(r,e){this.ssaoMaterial.proximityThreshold=r,this.ssaoMaterial.proximityFalloff=e}setDepthTexture(r,e=qn){this.depthDownsamplingPass.setDepthTexture(r,e),this.ssaoMaterial.depthBuffer=r,this.ssaoMaterial.depthPacking=e}update(r,e,t){const i=this.renderTarget;this.depthDownsamplingPass.enabled&&this.depthDownsamplingPass.render(r),this.ssaoPass.render(r,null,i)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e);const i=t.width,n=t.height;this.ssaoMaterial.copyCameraSettings(this.camera),this.ssaoMaterial.setSize(i,n),this.renderTarget.setSize(i,n),this.depthDownsamplingPass.resolution.scale=t.scale,this.depthDownsamplingPass.setSize(r,e)}initialize(r,e,t){try{let i=this.uniforms.get("normalDepthBuffer").value;i===null&&(this.depthDownsamplingPass.initialize(r,e,t),i=this.depthDownsamplingPass.texture,this.uniforms.get("normalDepthBuffer").value=i,this.ssaoMaterial.normalDepthBuffer=i,this.defines.set("NORMAL_DEPTH","1"))}catch{this.depthDownsamplingPass.enabled=!1}}},hE=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,dE="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",uE=class extends Ot{constructor(r,e,t,i,n=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:to.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new xe(null),depthBuffer:new xe(null),resolution:new xe(new Z),texelSize:new xe(new Z),cameraNear:new xe(.3),cameraFar:new xe(1e3),aspect:new xe(1),time:new xe(0)},blending:ei,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:n}),r&&this.setShaderParts(r),e&&this.setDefines(e),t&&this.setUniforms(t),this.copyCameraSettings(i)}set inputBuffer(r){this.uniforms.inputBuffer.value=r}setInputBuffer(r){this.uniforms.inputBuffer.value=r}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(r){this.uniforms.depthBuffer.value=r}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(r){this.defines.DEPTH_PACKING=r.toFixed(0),this.needsUpdate=!0}setDepthBuffer(r,e=qn){this.depthBuffer=r,this.depthPacking=e}setShaderData(r){this.setShaderParts(r.shaderParts),this.setDefines(r.defines),this.setUniforms(r.uniforms),this.setExtensions(r.extensions)}setShaderParts(r){return this.fragmentShader=hE.replace(ot.FRAGMENT_HEAD,r.get(ot.FRAGMENT_HEAD)||"").replace(ot.FRAGMENT_MAIN_UV,r.get(ot.FRAGMENT_MAIN_UV)||"").replace(ot.FRAGMENT_MAIN_IMAGE,r.get(ot.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=dE.replace(ot.VERTEX_HEAD,r.get(ot.VERTEX_HEAD)||"").replace(ot.VERTEX_MAIN_SUPPORT,r.get(ot.VERTEX_MAIN_SUPPORT)||""),this.needsUpdate=!0,this}setDefines(r){for(const e of r.entries())this.defines[e[0]]=e[1];return this.needsUpdate=!0,this}setUniforms(r){for(const e of r.entries())this.uniforms[e[0]]=e[1];return this}setExtensions(r){this.extensions={};for(const e of r)this.extensions[e]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(r){this.encodeOutput!==r&&(r?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(r){return this.encodeOutput}setOutputEncodingEnabled(r){this.encodeOutput=r}get time(){return this.uniforms.time.value}set time(r){this.uniforms.time.value=r}setDeltaTime(r){this.uniforms.time.value+=r}adoptCameraSettings(r){this.copyCameraSettings(r)}copyCameraSettings(r){r&&(this.uniforms.cameraNear.value=r.near,this.uniforms.cameraFar.value=r.far,r instanceof Jt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(r,e){const t=this.uniforms;t.resolution.value.set(r,e),t.texelSize.value.set(1/r,1/e),t.aspect.value=r/e}static get Section(){return ot}};function Qf(r,e,t){for(const i of e){const n="$1"+r+i.charAt(0).toUpperCase()+i.slice(1),s=new RegExp("([^\\.])(\\b"+i+"\\b)","g");for(const a of t.entries())a[1]!==null&&t.set(a[0],a[1].replace(s,n))}}function fE(r,e,t){let i=e.getFragmentShader(),n=e.getVertexShader();const s=i!==void 0&&/mainImage/.test(i),a=i!==void 0&&/mainUv/.test(i);if(t.attributes|=e.getAttributes(),i===void 0)throw new Error(`Missing fragment shader (${e.name})`);if(a&&(t.attributes&ds.CONVOLUTION)!==0)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${e.name})`);if(!s&&!a)throw new Error(`Could not find mainImage or mainUv function (${e.name})`);{const o=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,l=t.shaderParts;let c=l.get(ot.FRAGMENT_HEAD)||"",h=l.get(ot.FRAGMENT_MAIN_UV)||"",d=l.get(ot.FRAGMENT_MAIN_IMAGE)||"",u=l.get(ot.VERTEX_HEAD)||"",f=l.get(ot.VERTEX_MAIN_SUPPORT)||"";const m=new Set,v=new Set;if(a&&(h+=`	${r}MainUv(UV);
`,t.uvTransformation=!0),n!==null&&/mainSupport/.test(n)){const x=/mainSupport *\([\w\s]*?uv\s*?\)/.test(n);f+=`	${r}MainSupport(`,f+=x?`vUv);
`:`);
`;for(const _ of n.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const y of _[1].split(/\s*,\s*/))t.varyings.add(y),m.add(y),v.add(y);for(const _ of n.matchAll(o))v.add(_[1])}for(const x of i.matchAll(o))v.add(x[1]);for(const x of e.defines.keys())v.add(x.replace(/\([\w\s,]*\)/g,""));for(const x of e.uniforms.keys())v.add(x);v.delete("while"),v.delete("for"),v.delete("if"),e.uniforms.forEach((x,_)=>t.uniforms.set(r+_.charAt(0).toUpperCase()+_.slice(1),x)),e.defines.forEach((x,_)=>t.defines.set(r+_.charAt(0).toUpperCase()+_.slice(1),x));const g=new Map([["fragment",i],["vertex",n]]);Qf(r,v,t.defines),Qf(r,v,g),i=g.get("fragment"),n=g.get("vertex");const p=e.blendMode;if(t.blendModes.set(p.blendFunction,p),s){e.inputColorSpace!==null&&e.inputColorSpace!==t.colorSpace&&(d+=e.inputColorSpace===et?`color0 = sRGBTransferOETF(color0);
	`:`color0 = sRGBToLinear(color0);
	`),e.outputColorSpace!==xn?t.colorSpace=e.outputColorSpace:e.inputColorSpace!==null&&(t.colorSpace=e.inputColorSpace);const x=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;d+=`${r}MainImage(color0, UV, `,(t.attributes&ds.DEPTH)!==0&&x.test(i)&&(d+="depth, ",t.readDepth=!0),d+=`color1);
	`;const _=r+"BlendOpacity";t.uniforms.set(_,p.opacity),d+=`color0 = blend${p.blendFunction}(color0, color1, ${_});

	`,c+=`uniform float ${_};

`}if(c+=i+`
`,n!==null&&(u+=n+`
`),l.set(ot.FRAGMENT_HEAD,c),l.set(ot.FRAGMENT_MAIN_UV,h),l.set(ot.FRAGMENT_MAIN_IMAGE,d),l.set(ot.VERTEX_HEAD,u),l.set(ot.VERTEX_MAIN_SUPPORT,f),e.extensions!==null)for(const x of e.extensions)t.extensions.add(x)}}var zc=class extends xi{constructor(r,...e){super("EffectPass"),this.fullscreenMaterial=new uE(null,null,null,r),this.listener=t=>this.handleEvent(t),this.effects=[],this.setEffects(e),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(r){for(const e of this.effects)e.mainScene=r}set mainCamera(r){this.fullscreenMaterial.copyCameraSettings(r);for(const e of this.effects)e.mainCamera=r}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(r){this.fullscreenMaterial.encodeOutput=r}get dithering(){return this.fullscreenMaterial.dithering}set dithering(r){const e=this.fullscreenMaterial;e.dithering=r,e.needsUpdate=!0}setEffects(r){for(const e of this.effects)e.removeEventListener("change",this.listener);this.effects=r.sort((e,t)=>t.attributes-e.attributes);for(const e of this.effects)e.addEventListener("change",this.listener)}updateMaterial(){const r=new jS;let e=0;for(const a of this.effects)if(a.blendMode.blendFunction===Xe.DST)r.attributes|=a.getAttributes()&ds.DEPTH;else{if((r.attributes&a.getAttributes()&ds.CONVOLUTION)!==0)throw new Error(`Convolution effects cannot be merged (${a.name})`);fE("e"+e++,a,r)}let t=r.shaderParts.get(ot.FRAGMENT_HEAD),i=r.shaderParts.get(ot.FRAGMENT_MAIN_IMAGE),n=r.shaderParts.get(ot.FRAGMENT_MAIN_UV);const s=/\bblend\b/g;for(const a of r.blendModes.values())t+=a.getShaderCode().replace(s,`blend${a.blendFunction}`)+`
`;(r.attributes&ds.DEPTH)!==0?(r.readDepth&&(i=`float depth = readDepth(UV);

	`+i),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,r.colorSpace===et&&(i+=`color0 = sRGBToLinear(color0);
	`),r.uvTransformation?(n=`vec2 transformedUv = vUv;
`+n,r.defines.set("UV","transformedUv")):r.defines.set("UV","vUv"),r.shaderParts.set(ot.FRAGMENT_HEAD,t),r.shaderParts.set(ot.FRAGMENT_MAIN_IMAGE,i),r.shaderParts.set(ot.FRAGMENT_MAIN_UV,n);for(const[a,o]of r.shaderParts)o!==null&&r.shaderParts.set(a,o.trim().replace(/^#/,`
#`));this.skipRendering=e===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(r)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(r,e=qn){this.fullscreenMaterial.depthBuffer=r,this.fullscreenMaterial.depthPacking=e;for(const t of this.effects)t.setDepthTexture(r,e)}render(r,e,t,i,n){for(const s of this.effects)s.update(r,e,i);if(!this.skipRendering||this.renderToScreen){const s=this.fullscreenMaterial;s.inputBuffer=e.texture,s.time+=i*this.timeScale,r.setRenderTarget(this.renderToScreen?null:t),r.render(this.scene,this.camera)}}setSize(r,e){this.fullscreenMaterial.setSize(r,e);for(const t of this.effects)t.setSize(r,e)}initialize(r,e,t){this.renderer=r;for(const i of this.effects)i.initialize(r,e,t);this.updateMaterial(),t!==void 0&&t!==Gt&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const r of this.effects)r.removeEventListener("change",this.listener),r.dispose()}handleEvent(r){switch(r.type){case"change":this.recompile();break}}},pE=class extends xi{constructor(r,e,{renderTarget:t,resolutionScale:i=1,width:n=Tt.AUTO_SIZE,height:s=Tt.AUTO_SIZE,resolutionX:a=n,resolutionY:o=s}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new Vl(r,e,new uy);const l=this.renderPass;l.ignoreBackground=!0,l.skipShadowMapUpdate=!0;const c=l.getClearPass();c.overrideClearColor=new fe(7829503),c.overrideClearAlpha=1,this.renderTarget=t,this.renderTarget===void 0&&(this.renderTarget=new kt(1,1,{minFilter:Bt,magFilter:Bt}),this.renderTarget.texture.name="NormalPass.Target");const h=this.resolution=new Tt(this,a,o,i);h.addEventListener("change",d=>this.setSize(h.baseWidth,h.baseHeight))}set mainScene(r){this.renderPass.mainScene=r}set mainCamera(r){this.renderPass.mainCamera=r}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(r){this.resolution.scale=r}render(r,e,t,i,n){const s=this.renderToScreen?null:this.renderTarget;this.renderPass.render(r,s,s)}setSize(r,e){const t=this.resolution;t.setBaseSize(r,e),this.renderTarget.setSize(t.width,t.height)}};function ep(r,e){if(e===L0)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),r;if(e===zh||e===Yp){let t=r.getIndex();if(t===null){const a=[],o=r.getAttribute("position");if(o!==void 0){for(let l=0;l<o.count;l++)a.push(l);r.setIndex(a),t=r.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),r}const i=t.count-2,n=[];if(e===zh)for(let a=1;a<=i;a++)n.push(t.getX(0)),n.push(t.getX(a)),n.push(t.getX(a+1));else for(let a=0;a<i;a++)a%2===0?(n.push(t.getX(a)),n.push(t.getX(a+1)),n.push(t.getX(a+2))):(n.push(t.getX(a+2)),n.push(t.getX(a+1)),n.push(t.getX(a)));n.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=r.clone();return s.setIndex(n),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),r}class Um extends Xs{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new _E(t)}),this.register(function(t){return new xE(t)}),this.register(function(t){return new PE(t)}),this.register(function(t){return new LE(t)}),this.register(function(t){return new RE(t)}),this.register(function(t){return new ME(t)}),this.register(function(t){return new SE(t)}),this.register(function(t){return new wE(t)}),this.register(function(t){return new EE(t)}),this.register(function(t){return new yE(t)}),this.register(function(t){return new TE(t)}),this.register(function(t){return new bE(t)}),this.register(function(t){return new AE(t)}),this.register(function(t){return new CE(t)}),this.register(function(t){return new gE(t)}),this.register(function(t){return new DE(t)}),this.register(function(t){return new NE(t)})}load(e,t,i,n){const s=this;let a;if(this.resourcePath!=="")a=this.resourcePath;else if(this.path!==""){const c=Ta.extractUrlBase(e);a=Ta.resolveURL(c,this.path)}else a=Ta.extractUrlBase(e);this.manager.itemStart(e);const o=function(c){n?n(c):console.error(c),s.manager.itemError(e),s.manager.itemEnd(e)},l=new Fd(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{s.parse(c,a,function(h){t(h),s.manager.itemEnd(e)},o)}catch(h){o(h)}},i,o)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,i,n){let s;const a={},o={},l=new TextDecoder;if(typeof e=="string")s=JSON.parse(e);else if(e instanceof ArrayBuffer)if(l.decode(new Uint8Array(e,0,4))===Fm){try{a[Qe.KHR_BINARY_GLTF]=new IE(e)}catch(d){n&&n(d);return}s=JSON.parse(a[Qe.KHR_BINARY_GLTF].content)}else s=JSON.parse(l.decode(e));else s=e;if(s.asset===void 0||s.asset.version[0]<2){n&&n(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const c=new XE(s,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});c.fileLoader.setRequestHeader(this.requestHeader);for(let h=0;h<this.pluginCallbacks.length;h++){const d=this.pluginCallbacks[h](c);d.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),o[d.name]=d,a[d.name]=!0}if(s.extensionsUsed)for(let h=0;h<s.extensionsUsed.length;++h){const d=s.extensionsUsed[h],u=s.extensionsRequired||[];switch(d){case Qe.KHR_MATERIALS_UNLIT:a[d]=new vE;break;case Qe.KHR_DRACO_MESH_COMPRESSION:a[d]=new kE(s,this.dracoLoader);break;case Qe.KHR_TEXTURE_TRANSFORM:a[d]=new OE;break;case Qe.KHR_MESH_QUANTIZATION:a[d]=new zE;break;default:u.indexOf(d)>=0&&o[d]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+d+'".')}}c.setExtensions(a),c.setPlugins(o),c.parse(i,n)}parseAsync(e,t){const i=this;return new Promise(function(n,s){i.parse(e,t,n,s)})}}function mE(){let r={};return{get:function(e){return r[e]},add:function(e,t){r[e]=t},remove:function(e){delete r[e]},removeAll:function(){r={}}}}const Qe={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class gE{constructor(e){this.parser=e,this.name=Qe.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let i=0,n=t.length;i<n;i++){const s=t[i];s.extensions&&s.extensions[this.name]&&s.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,s.extensions[this.name].light)}}_loadLight(e){const t=this.parser,i="light:"+e;let n=t.cache.get(i);if(n)return n;const s=t.json,l=((s.extensions&&s.extensions[this.name]||{}).lights||[])[e];let c;const h=new fe(16777215);l.color!==void 0&&h.setRGB(l.color[0],l.color[1],l.color[2],oi);const d=l.range!==void 0?l.range:0;switch(l.type){case"directional":c=new Cm(h),c.target.position.set(0,0,-1),c.add(c.target);break;case"point":c=new Tm(h),c.distance=d;break;case"spot":c=new Py(h),c.distance=d,l.spot=l.spot||{},l.spot.innerConeAngle=l.spot.innerConeAngle!==void 0?l.spot.innerConeAngle:0,l.spot.outerConeAngle=l.spot.outerConeAngle!==void 0?l.spot.outerConeAngle:Math.PI/4,c.angle=l.spot.outerConeAngle,c.penumbra=1-l.spot.innerConeAngle/l.spot.outerConeAngle,c.target.position.set(0,0,-1),c.add(c.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+l.type)}return c.position.set(0,0,0),zn(c,l),l.intensity!==void 0&&(c.intensity=l.intensity),c.name=t.createUniqueName(l.name||"light_"+e),n=Promise.resolve(c),t.cache.add(i,n),n}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,i=this.parser,s=i.json.nodes[e],o=(s.extensions&&s.extensions[this.name]||{}).light;return o===void 0?null:this._loadLight(o).then(function(l){return i._getNodeRef(t.cache,o,l)})}}class vE{constructor(){this.name=Qe.KHR_MATERIALS_UNLIT}getMaterialType(){return di}extendParams(e,t,i){const n=[];e.color=new fe(1,1,1),e.opacity=1;const s=t.pbrMetallicRoughness;if(s){if(Array.isArray(s.baseColorFactor)){const a=s.baseColorFactor;e.color.setRGB(a[0],a[1],a[2],oi),e.opacity=a[3]}s.baseColorTexture!==void 0&&n.push(i.assignTexture(e,"map",s.baseColorTexture,et))}return Promise.all(n)}}class yE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=n.extensions[this.name].emissiveStrength;return s!==void 0&&(t.emissiveIntensity=s),Promise.resolve()}}class _E{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];if(a.clearcoatFactor!==void 0&&(t.clearcoat=a.clearcoatFactor),a.clearcoatTexture!==void 0&&s.push(i.assignTexture(t,"clearcoatMap",a.clearcoatTexture)),a.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=a.clearcoatRoughnessFactor),a.clearcoatRoughnessTexture!==void 0&&s.push(i.assignTexture(t,"clearcoatRoughnessMap",a.clearcoatRoughnessTexture)),a.clearcoatNormalTexture!==void 0&&(s.push(i.assignTexture(t,"clearcoatNormalMap",a.clearcoatNormalTexture)),a.clearcoatNormalTexture.scale!==void 0)){const o=a.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new Z(o,o)}return Promise.all(s)}}class xE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_DISPERSION}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=n.extensions[this.name];return t.dispersion=s.dispersion!==void 0?s.dispersion:0,Promise.resolve()}}class bE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];return a.iridescenceFactor!==void 0&&(t.iridescence=a.iridescenceFactor),a.iridescenceTexture!==void 0&&s.push(i.assignTexture(t,"iridescenceMap",a.iridescenceTexture)),a.iridescenceIor!==void 0&&(t.iridescenceIOR=a.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),a.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=a.iridescenceThicknessMinimum),a.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=a.iridescenceThicknessMaximum),a.iridescenceThicknessTexture!==void 0&&s.push(i.assignTexture(t,"iridescenceThicknessMap",a.iridescenceThicknessTexture)),Promise.all(s)}}class ME{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_SHEEN}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[];t.sheenColor=new fe(0,0,0),t.sheenRoughness=0,t.sheen=1;const a=n.extensions[this.name];if(a.sheenColorFactor!==void 0){const o=a.sheenColorFactor;t.sheenColor.setRGB(o[0],o[1],o[2],oi)}return a.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=a.sheenRoughnessFactor),a.sheenColorTexture!==void 0&&s.push(i.assignTexture(t,"sheenColorMap",a.sheenColorTexture,et)),a.sheenRoughnessTexture!==void 0&&s.push(i.assignTexture(t,"sheenRoughnessMap",a.sheenRoughnessTexture)),Promise.all(s)}}class SE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];return a.transmissionFactor!==void 0&&(t.transmission=a.transmissionFactor),a.transmissionTexture!==void 0&&s.push(i.assignTexture(t,"transmissionMap",a.transmissionTexture)),Promise.all(s)}}class wE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_VOLUME}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];t.thickness=a.thicknessFactor!==void 0?a.thicknessFactor:0,a.thicknessTexture!==void 0&&s.push(i.assignTexture(t,"thicknessMap",a.thicknessTexture)),t.attenuationDistance=a.attenuationDistance||1/0;const o=a.attenuationColor||[1,1,1];return t.attenuationColor=new fe().setRGB(o[0],o[1],o[2],oi),Promise.all(s)}}class EE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_IOR}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=n.extensions[this.name];return t.ior=s.ior!==void 0?s.ior:1.5,Promise.resolve()}}class TE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_SPECULAR}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];t.specularIntensity=a.specularFactor!==void 0?a.specularFactor:1,a.specularTexture!==void 0&&s.push(i.assignTexture(t,"specularIntensityMap",a.specularTexture));const o=a.specularColorFactor||[1,1,1];return t.specularColor=new fe().setRGB(o[0],o[1],o[2],oi),a.specularColorTexture!==void 0&&s.push(i.assignTexture(t,"specularColorMap",a.specularColorTexture,et)),Promise.all(s)}}class CE{constructor(e){this.parser=e,this.name=Qe.EXT_MATERIALS_BUMP}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];return t.bumpScale=a.bumpFactor!==void 0?a.bumpFactor:1,a.bumpTexture!==void 0&&s.push(i.assignTexture(t,"bumpMap",a.bumpTexture)),Promise.all(s)}}class AE{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:fn}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],a=n.extensions[this.name];return a.anisotropyStrength!==void 0&&(t.anisotropy=a.anisotropyStrength),a.anisotropyRotation!==void 0&&(t.anisotropyRotation=a.anisotropyRotation),a.anisotropyTexture!==void 0&&s.push(i.assignTexture(t,"anisotropyMap",a.anisotropyTexture)),Promise.all(s)}}class PE{constructor(e){this.parser=e,this.name=Qe.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,i=t.json,n=i.textures[e];if(!n.extensions||!n.extensions[this.name])return null;const s=n.extensions[this.name],a=t.options.ktx2Loader;if(!a){if(i.extensionsRequired&&i.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,s.source,a)}}class LE{constructor(e){this.parser=e,this.name=Qe.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,i=this.parser,n=i.json,s=n.textures[e];if(!s.extensions||!s.extensions[t])return null;const a=s.extensions[t],o=n.images[a.source];let l=i.textureLoader;if(o.uri){const c=i.options.manager.getHandler(o.uri);c!==null&&(l=c)}return i.loadTextureImage(e,a.source,l)}}class RE{constructor(e){this.parser=e,this.name=Qe.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,i=this.parser,n=i.json,s=n.textures[e];if(!s.extensions||!s.extensions[t])return null;const a=s.extensions[t],o=n.images[a.source];let l=i.textureLoader;if(o.uri){const c=i.options.manager.getHandler(o.uri);c!==null&&(l=c)}return i.loadTextureImage(e,a.source,l)}}class DE{constructor(e){this.name=Qe.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,i=t.bufferViews[e];if(i.extensions&&i.extensions[this.name]){const n=i.extensions[this.name],s=this.parser.getDependency("buffer",n.buffer),a=this.parser.options.meshoptDecoder;if(!a||!a.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return s.then(function(o){const l=n.byteOffset||0,c=n.byteLength||0,h=n.count,d=n.byteStride,u=new Uint8Array(o,l,c);return a.decodeGltfBufferAsync?a.decodeGltfBufferAsync(h,d,u,n.mode,n.filter).then(function(f){return f.buffer}):a.ready.then(function(){const f=new ArrayBuffer(h*d);return a.decodeGltfBuffer(new Uint8Array(f),h,d,u,n.mode,n.filter),f})})}else return null}}class NE{constructor(e){this.name=Qe.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,i=t.nodes[e];if(!i.extensions||!i.extensions[this.name]||i.mesh===void 0)return null;const n=t.meshes[i.mesh];for(const c of n.primitives)if(c.mode!==$i.TRIANGLES&&c.mode!==$i.TRIANGLE_STRIP&&c.mode!==$i.TRIANGLE_FAN&&c.mode!==void 0)return null;const a=i.extensions[this.name].attributes,o=[],l={};for(const c in a)o.push(this.parser.getDependency("accessor",a[c]).then(h=>(l[c]=h,l[c])));return o.length<1?null:(o.push(this.parser.createNodeMesh(e)),Promise.all(o).then(c=>{const h=c.pop(),d=h.isGroup?h.children:[h],u=c[0].count,f=[];for(const m of d){const v=new Ne,g=new M,p=new en,x=new M(1,1,1),_=new ao(m.geometry,m.material,u);for(let y=0;y<u;y++)l.TRANSLATION&&g.fromBufferAttribute(l.TRANSLATION,y),l.ROTATION&&p.fromBufferAttribute(l.ROTATION,y),l.SCALE&&x.fromBufferAttribute(l.SCALE,y),_.setMatrixAt(y,v.compose(g,p,x));for(const y in l)if(y==="_COLOR_0"){const w=l[y];_.instanceColor=new Fh(w.array,w.itemSize,w.normalized)}else y!=="TRANSLATION"&&y!=="ROTATION"&&y!=="SCALE"&&m.geometry.setAttribute(y,l[y]);yt.prototype.copy.call(_,m),this.parser.assignFinalMaterial(_),f.push(_)}return h.isGroup?(h.clear(),h.add(...f),h):f[0]}))}}const Fm="glTF",ma=12,tp={JSON:1313821514,BIN:5130562};class IE{constructor(e){this.name=Qe.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,ma),i=new TextDecoder;if(this.header={magic:i.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==Fm)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const n=this.header.length-ma,s=new DataView(e,ma);let a=0;for(;a<n;){const o=s.getUint32(a,!0);a+=4;const l=s.getUint32(a,!0);if(a+=4,l===tp.JSON){const c=new Uint8Array(e,ma+a,o);this.content=i.decode(c)}else if(l===tp.BIN){const c=ma+a;this.body=e.slice(c,c+o)}a+=o}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class kE{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=Qe.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const i=this.json,n=this.dracoLoader,s=e.extensions[this.name].bufferView,a=e.extensions[this.name].attributes,o={},l={},c={};for(const h in a){const d=qh[h]||h.toLowerCase();o[d]=a[h]}for(const h in e.attributes){const d=qh[h]||h.toLowerCase();if(a[h]!==void 0){const u=i.accessors[e.attributes[h]],f=xr[u.componentType];c[d]=f.name,l[d]=u.normalized===!0}}return t.getDependency("bufferView",s).then(function(h){return new Promise(function(d,u){n.decodeDracoFile(h,function(f){for(const m in f.attributes){const v=f.attributes[m],g=l[m];g!==void 0&&(v.normalized=g)}d(f)},o,c,oi,u)})})}}class OE{constructor(){this.name=Qe.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class zE{constructor(){this.name=Qe.KHR_MESH_QUANTIZATION}}class Bm extends co{constructor(e,t,i,n){super(e,t,i,n)}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n*3+n;for(let a=0;a!==n;a++)t[a]=i[s+a];return t}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=o*2,c=o*3,h=n-t,d=(i-t)/h,u=d*d,f=u*d,m=e*c,v=m-c,g=-2*f+3*u,p=f-u,x=1-g,_=p-u+d;for(let y=0;y!==o;y++){const w=a[v+y+o],C=a[v+y+l]*h,A=a[m+y+o],L=a[m+y]*h;s[y]=x*w+_*C+g*A+p*L}return s}}const UE=new en;class FE extends Bm{interpolate_(e,t,i,n){const s=super.interpolate_(e,t,i,n);return UE.fromArray(s).normalize().toArray(s),s}}const $i={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},xr={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},ip={9728:Bt,9729:Xt,9984:Vp,9985:il,9986:va,9987:Gn},np={33071:rs,33648:fl,10497:ps},Uc={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},qh={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},ns={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},BE={CUBICSPLINE:void 0,LINEAR:ka,STEP:Ia},Fc={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function HE(r){return r.DefaultMaterial===void 0&&(r.DefaultMaterial=new Ci({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:En})),r.DefaultMaterial}function Ps(r,e,t){for(const i in t.extensions)r[i]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[i]=t.extensions[i])}function zn(r,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(r.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function GE(r,e,t){let i=!1,n=!1,s=!1;for(let c=0,h=e.length;c<h;c++){const d=e[c];if(d.POSITION!==void 0&&(i=!0),d.NORMAL!==void 0&&(n=!0),d.COLOR_0!==void 0&&(s=!0),i&&n&&s)break}if(!i&&!n&&!s)return Promise.resolve(r);const a=[],o=[],l=[];for(let c=0,h=e.length;c<h;c++){const d=e[c];if(i){const u=d.POSITION!==void 0?t.getDependency("accessor",d.POSITION):r.attributes.position;a.push(u)}if(n){const u=d.NORMAL!==void 0?t.getDependency("accessor",d.NORMAL):r.attributes.normal;o.push(u)}if(s){const u=d.COLOR_0!==void 0?t.getDependency("accessor",d.COLOR_0):r.attributes.color;l.push(u)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l)]).then(function(c){const h=c[0],d=c[1],u=c[2];return i&&(r.morphAttributes.position=h),n&&(r.morphAttributes.normal=d),s&&(r.morphAttributes.color=u),r.morphTargetsRelative=!0,r})}function VE(r,e){if(r.updateMorphTargets(),e.weights!==void 0)for(let t=0,i=e.weights.length;t<i;t++)r.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(r.morphTargetInfluences.length===t.length){r.morphTargetDictionary={};for(let i=0,n=t.length;i<n;i++)r.morphTargetDictionary[t[i]]=i}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function WE(r){let e;const t=r.extensions&&r.extensions[Qe.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+Bc(t.attributes):e=r.indices+":"+Bc(r.attributes)+":"+r.mode,r.targets!==void 0)for(let i=0,n=r.targets.length;i<n;i++)e+=":"+Bc(r.targets[i]);return e}function Bc(r){let e="";const t=Object.keys(r).sort();for(let i=0,n=t.length;i<n;i++)e+=t[i]+":"+r[t[i]]+";";return e}function Zh(r){switch(r){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function jE(r){return r.search(/\.jpe?g($|\?)/i)>0||r.search(/^data\:image\/jpeg/)===0?"image/jpeg":r.search(/\.webp($|\?)/i)>0||r.search(/^data\:image\/webp/)===0?"image/webp":r.search(/\.ktx2($|\?)/i)>0||r.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const $E=new Ne;class XE{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new mE,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let i=!1,n=-1,s=!1,a=-1;if(typeof navigator<"u"){const o=navigator.userAgent;i=/^((?!chrome|android).)*safari/i.test(o)===!0;const l=o.match(/Version\/(\d+)/);n=i&&l?parseInt(l[1],10):-1,s=o.indexOf("Firefox")>-1,a=s?o.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||i&&n<17||s&&a<98?this.textureLoader=new Em(this.options.manager):this.textureLoader=new Iy(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new Fd(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const i=this,n=this.json,s=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(a){return a._markDefs&&a._markDefs()}),Promise.all(this._invokeAll(function(a){return a.beforeRoot&&a.beforeRoot()})).then(function(){return Promise.all([i.getDependencies("scene"),i.getDependencies("animation"),i.getDependencies("camera")])}).then(function(a){const o={scene:a[0][n.scene||0],scenes:a[0],animations:a[1],cameras:a[2],asset:n.asset,parser:i,userData:{}};return Ps(s,o,n),zn(o,n),Promise.all(i._invokeAll(function(l){return l.afterRoot&&l.afterRoot(o)})).then(function(){for(const l of o.scenes)l.updateMatrixWorld();e(o)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],i=this.json.meshes||[];for(let n=0,s=t.length;n<s;n++){const a=t[n].joints;for(let o=0,l=a.length;o<l;o++)e[a[o]].isBone=!0}for(let n=0,s=e.length;n<s;n++){const a=e[n];a.mesh!==void 0&&(this._addNodeRef(this.meshCache,a.mesh),a.skin!==void 0&&(i[a.mesh].isSkinnedMesh=!0)),a.camera!==void 0&&this._addNodeRef(this.cameraCache,a.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,i){if(e.refs[t]<=1)return i;const n=i.clone(),s=(a,o)=>{const l=this.associations.get(a);l!=null&&this.associations.set(o,l);for(const[c,h]of a.children.entries())s(h,o.children[c])};return s(i,n),n.name+="_instance_"+e.uses[t]++,n}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let i=0;i<t.length;i++){const n=e(t[i]);if(n)return n}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const i=[];for(let n=0;n<t.length;n++){const s=e(t[n]);s&&i.push(s)}return i}getDependency(e,t){const i=e+":"+t;let n=this.cache.get(i);if(!n){switch(e){case"scene":n=this.loadScene(t);break;case"node":n=this._invokeOne(function(s){return s.loadNode&&s.loadNode(t)});break;case"mesh":n=this._invokeOne(function(s){return s.loadMesh&&s.loadMesh(t)});break;case"accessor":n=this.loadAccessor(t);break;case"bufferView":n=this._invokeOne(function(s){return s.loadBufferView&&s.loadBufferView(t)});break;case"buffer":n=this.loadBuffer(t);break;case"material":n=this._invokeOne(function(s){return s.loadMaterial&&s.loadMaterial(t)});break;case"texture":n=this._invokeOne(function(s){return s.loadTexture&&s.loadTexture(t)});break;case"skin":n=this.loadSkin(t);break;case"animation":n=this._invokeOne(function(s){return s.loadAnimation&&s.loadAnimation(t)});break;case"camera":n=this.loadCamera(t);break;default:if(n=this._invokeOne(function(s){return s!=this&&s.getDependency&&s.getDependency(e,t)}),!n)throw new Error("Unknown type: "+e);break}this.cache.add(i,n)}return n}getDependencies(e){let t=this.cache.get(e);if(!t){const i=this,n=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(n.map(function(s,a){return i.getDependency(e,a)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],i=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[Qe.KHR_BINARY_GLTF].body);const n=this.options;return new Promise(function(s,a){i.load(Ta.resolveURL(t.uri,n.path),s,void 0,function(){a(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(i){const n=t.byteLength||0,s=t.byteOffset||0;return i.slice(s,s+n)})}loadAccessor(e){const t=this,i=this.json,n=this.json.accessors[e];if(n.bufferView===void 0&&n.sparse===void 0){const a=Uc[n.type],o=xr[n.componentType],l=n.normalized===!0,c=new o(n.count*a);return Promise.resolve(new Ct(c,a,l))}const s=[];return n.bufferView!==void 0?s.push(this.getDependency("bufferView",n.bufferView)):s.push(null),n.sparse!==void 0&&(s.push(this.getDependency("bufferView",n.sparse.indices.bufferView)),s.push(this.getDependency("bufferView",n.sparse.values.bufferView))),Promise.all(s).then(function(a){const o=a[0],l=Uc[n.type],c=xr[n.componentType],h=c.BYTES_PER_ELEMENT,d=h*l,u=n.byteOffset||0,f=n.bufferView!==void 0?i.bufferViews[n.bufferView].byteStride:void 0,m=n.normalized===!0;let v,g;if(f&&f!==d){const p=Math.floor(u/f),x="InterleavedBuffer:"+n.bufferView+":"+n.componentType+":"+p+":"+n.count;let _=t.cache.get(x);_||(v=new c(o,p*f,n.count*f/h),_=new rm(v,f/h),t.cache.add(x,_)),g=new Wn(_,l,u%f/h,m)}else o===null?v=new c(n.count*l):v=new c(o,u,n.count*l),g=new Ct(v,l,m);if(n.sparse!==void 0){const p=Uc.SCALAR,x=xr[n.sparse.indices.componentType],_=n.sparse.indices.byteOffset||0,y=n.sparse.values.byteOffset||0,w=new x(a[1],_,n.sparse.count*p),C=new c(a[2],y,n.sparse.count*l);o!==null&&(g=new Ct(g.array.slice(),g.itemSize,g.normalized)),g.normalized=!1;for(let A=0,L=w.length;A<L;A++){const b=w[A];if(g.setX(b,C[A*l]),l>=2&&g.setY(b,C[A*l+1]),l>=3&&g.setZ(b,C[A*l+2]),l>=4&&g.setW(b,C[A*l+3]),l>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}g.normalized=m}return g})}loadTexture(e){const t=this.json,i=this.options,s=t.textures[e].source,a=t.images[s];let o=this.textureLoader;if(a.uri){const l=i.manager.getHandler(a.uri);l!==null&&(o=l)}return this.loadTextureImage(e,s,o)}loadTextureImage(e,t,i){const n=this,s=this.json,a=s.textures[e],o=s.images[t],l=(o.uri||o.bufferView)+":"+a.sampler;if(this.textureCache[l])return this.textureCache[l];const c=this.loadImageSource(t,i).then(function(h){h.flipY=!1,h.name=a.name||o.name||"",h.name===""&&typeof o.uri=="string"&&o.uri.startsWith("data:image/")===!1&&(h.name=o.uri);const u=(s.samplers||{})[a.sampler]||{};return h.magFilter=ip[u.magFilter]||Xt,h.minFilter=ip[u.minFilter]||Gn,h.wrapS=np[u.wrapS]||ps,h.wrapT=np[u.wrapT]||ps,h.generateMipmaps=!h.isCompressedTexture&&h.minFilter!==Bt&&h.minFilter!==Xt,n.associations.set(h,{textures:e}),h}).catch(function(){return null});return this.textureCache[l]=c,c}loadImageSource(e,t){const i=this,n=this.json,s=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(d=>d.clone());const a=n.images[e],o=self.URL||self.webkitURL;let l=a.uri||"",c=!1;if(a.bufferView!==void 0)l=i.getDependency("bufferView",a.bufferView).then(function(d){c=!0;const u=new Blob([d],{type:a.mimeType});return l=o.createObjectURL(u),l});else if(a.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const h=Promise.resolve(l).then(function(d){return new Promise(function(u,f){let m=u;t.isImageBitmapLoader===!0&&(m=function(v){const g=new Ht(v);g.needsUpdate=!0,u(g)}),t.load(Ta.resolveURL(d,s.path),m,void 0,f)})}).then(function(d){return c===!0&&o.revokeObjectURL(l),zn(d,a),d.userData.mimeType=a.mimeType||jE(a.uri),d}).catch(function(d){throw console.error("THREE.GLTFLoader: Couldn't load texture",l),d});return this.sourceCache[e]=h,h}assignTexture(e,t,i,n){const s=this;return this.getDependency("texture",i.index).then(function(a){if(!a)return null;if(i.texCoord!==void 0&&i.texCoord>0&&(a=a.clone(),a.channel=i.texCoord),s.extensions[Qe.KHR_TEXTURE_TRANSFORM]){const o=i.extensions!==void 0?i.extensions[Qe.KHR_TEXTURE_TRANSFORM]:void 0;if(o){const l=s.associations.get(a);a=s.extensions[Qe.KHR_TEXTURE_TRANSFORM].extendTexture(a,o),s.associations.set(a,l)}}return n!==void 0&&(a.colorSpace=n),e[t]=a,a})}assignFinalMaterial(e){const t=e.geometry;let i=e.material;const n=t.attributes.tangent===void 0,s=t.attributes.color!==void 0,a=t.attributes.normal===void 0;if(e.isPoints){const o="PointsMaterial:"+i.uuid;let l=this.cache.get(o);l||(l=new lm,yi.prototype.copy.call(l,i),l.color.copy(i.color),l.map=i.map,l.sizeAttenuation=!1,this.cache.add(o,l)),i=l}else if(e.isLine){const o="LineBasicMaterial:"+i.uuid;let l=this.cache.get(o);l||(l=new oo,yi.prototype.copy.call(l,i),l.color.copy(i.color),l.map=i.map,this.cache.add(o,l)),i=l}if(n||s||a){let o="ClonedMaterial:"+i.uuid+":";n&&(o+="derivative-tangents:"),s&&(o+="vertex-colors:"),a&&(o+="flat-shading:");let l=this.cache.get(o);l||(l=i.clone(),s&&(l.vertexColors=!0),a&&(l.flatShading=!0),n&&(l.normalScale&&(l.normalScale.y*=-1),l.clearcoatNormalScale&&(l.clearcoatNormalScale.y*=-1)),this.cache.add(o,l),this.associations.set(l,this.associations.get(i))),i=l}e.material=i}getMaterialType(){return Ci}loadMaterial(e){const t=this,i=this.json,n=this.extensions,s=i.materials[e];let a;const o={},l=s.extensions||{},c=[];if(l[Qe.KHR_MATERIALS_UNLIT]){const d=n[Qe.KHR_MATERIALS_UNLIT];a=d.getMaterialType(),c.push(d.extendParams(o,s,t))}else{const d=s.pbrMetallicRoughness||{};if(o.color=new fe(1,1,1),o.opacity=1,Array.isArray(d.baseColorFactor)){const u=d.baseColorFactor;o.color.setRGB(u[0],u[1],u[2],oi),o.opacity=u[3]}d.baseColorTexture!==void 0&&c.push(t.assignTexture(o,"map",d.baseColorTexture,et)),o.metalness=d.metallicFactor!==void 0?d.metallicFactor:1,o.roughness=d.roughnessFactor!==void 0?d.roughnessFactor:1,d.metallicRoughnessTexture!==void 0&&(c.push(t.assignTexture(o,"metalnessMap",d.metallicRoughnessTexture)),c.push(t.assignTexture(o,"roughnessMap",d.metallicRoughnessTexture))),a=this._invokeOne(function(u){return u.getMaterialType&&u.getMaterialType(e)}),c.push(Promise.all(this._invokeAll(function(u){return u.extendMaterialParams&&u.extendMaterialParams(e,o)})))}s.doubleSided===!0&&(o.side=$t);const h=s.alphaMode||Fc.OPAQUE;if(h===Fc.BLEND?(o.transparent=!0,o.depthWrite=!1):(o.transparent=!1,h===Fc.MASK&&(o.alphaTest=s.alphaCutoff!==void 0?s.alphaCutoff:.5)),s.normalTexture!==void 0&&a!==di&&(c.push(t.assignTexture(o,"normalMap",s.normalTexture)),o.normalScale=new Z(1,1),s.normalTexture.scale!==void 0)){const d=s.normalTexture.scale;o.normalScale.set(d,d)}if(s.occlusionTexture!==void 0&&a!==di&&(c.push(t.assignTexture(o,"aoMap",s.occlusionTexture)),s.occlusionTexture.strength!==void 0&&(o.aoMapIntensity=s.occlusionTexture.strength)),s.emissiveFactor!==void 0&&a!==di){const d=s.emissiveFactor;o.emissive=new fe().setRGB(d[0],d[1],d[2],oi)}return s.emissiveTexture!==void 0&&a!==di&&c.push(t.assignTexture(o,"emissiveMap",s.emissiveTexture,et)),Promise.all(c).then(function(){const d=new a(o);return s.name&&(d.name=s.name),zn(d,s),t.associations.set(d,{materials:e}),s.extensions&&Ps(n,d,s),d})}createUniqueName(e){const t=ut.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,i=this.extensions,n=this.primitiveCache;function s(o){return i[Qe.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(o,t).then(function(l){return sp(l,o,t)})}const a=[];for(let o=0,l=e.length;o<l;o++){const c=e[o],h=WE(c),d=n[h];if(d)a.push(d.promise);else{let u;c.extensions&&c.extensions[Qe.KHR_DRACO_MESH_COMPRESSION]?u=s(c):u=sp(new At,c,t),n[h]={primitive:c,promise:u},a.push(u)}}return Promise.all(a)}loadMesh(e){const t=this,i=this.json,n=this.extensions,s=i.meshes[e],a=s.primitives,o=[];for(let l=0,c=a.length;l<c;l++){const h=a[l].material===void 0?HE(this.cache):this.getDependency("material",a[l].material);o.push(h)}return o.push(t.loadGeometries(a)),Promise.all(o).then(function(l){const c=l.slice(0,l.length-1),h=l[l.length-1],d=[];for(let f=0,m=h.length;f<m;f++){const v=h[f],g=a[f];let p;const x=c[f];if(g.mode===$i.TRIANGLES||g.mode===$i.TRIANGLE_STRIP||g.mode===$i.TRIANGLE_FAN||g.mode===void 0)p=s.isSkinnedMesh===!0?new Pv(v,x):new st(v,x),p.isSkinnedMesh===!0&&p.normalizeSkinWeights(),g.mode===$i.TRIANGLE_STRIP?p.geometry=ep(p.geometry,Yp):g.mode===$i.TRIANGLE_FAN&&(p.geometry=ep(p.geometry,zh));else if(g.mode===$i.LINES)p=new om(v,x);else if(g.mode===$i.LINE_STRIP)p=new ea(v,x);else if(g.mode===$i.LINE_LOOP)p=new Iv(v,x);else if(g.mode===$i.POINTS)p=new cm(v,x);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+g.mode);Object.keys(p.geometry.morphAttributes).length>0&&VE(p,s),p.name=t.createUniqueName(s.name||"mesh_"+e),zn(p,s),g.extensions&&Ps(n,p,g),t.assignFinalMaterial(p),d.push(p)}for(let f=0,m=d.length;f<m;f++)t.associations.set(d[f],{meshes:e,primitives:f});if(d.length===1)return s.extensions&&Ps(n,d[0],s),d[0];const u=new qi;s.extensions&&Ps(n,u,s),t.associations.set(u,{meshes:e});for(let f=0,m=d.length;f<m;f++)u.add(d[f]);return u})}loadCamera(e){let t;const i=this.json.cameras[e],n=i[i.type];if(!n){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return i.type==="perspective"?t=new Jt(Qr.radToDeg(n.yfov),n.aspectRatio||1,n.znear||1,n.zfar||2e6):i.type==="orthographic"&&(t=new ho(-n.xmag,n.xmag,n.ymag,-n.ymag,n.znear,n.zfar)),i.name&&(t.name=this.createUniqueName(i.name)),zn(t,i),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],i=[];for(let n=0,s=t.joints.length;n<s;n++)i.push(this._loadNodeShallow(t.joints[n]));return t.inverseBindMatrices!==void 0?i.push(this.getDependency("accessor",t.inverseBindMatrices)):i.push(null),Promise.all(i).then(function(n){const s=n.pop(),a=n,o=[],l=[];for(let c=0,h=a.length;c<h;c++){const d=a[c];if(d){o.push(d);const u=new Ne;s!==null&&u.fromArray(s.array,c*16),l.push(u)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[c])}return new Rd(o,l)})}loadAnimation(e){const t=this.json,i=this,n=t.animations[e],s=n.name?n.name:"animation_"+e,a=[],o=[],l=[],c=[],h=[];for(let d=0,u=n.channels.length;d<u;d++){const f=n.channels[d],m=n.samplers[f.sampler],v=f.target,g=v.node,p=n.parameters!==void 0?n.parameters[m.input]:m.input,x=n.parameters!==void 0?n.parameters[m.output]:m.output;v.node!==void 0&&(a.push(this.getDependency("node",g)),o.push(this.getDependency("accessor",p)),l.push(this.getDependency("accessor",x)),c.push(m),h.push(v))}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l),Promise.all(c),Promise.all(h)]).then(function(d){const u=d[0],f=d[1],m=d[2],v=d[3],g=d[4],p=[];for(let x=0,_=u.length;x<_;x++){const y=u[x],w=f[x],C=m[x],A=v[x],L=g[x];if(y===void 0)continue;y.updateMatrix&&y.updateMatrix();const b=i._createAnimationTracks(y,w,C,A,L);if(b)for(let S=0;S<b.length;S++)p.push(b[S])}return new by(s,void 0,p)})}createNodeMesh(e){const t=this.json,i=this,n=t.nodes[e];return n.mesh===void 0?null:i.getDependency("mesh",n.mesh).then(function(s){const a=i._getNodeRef(i.meshCache,n.mesh,s);return n.weights!==void 0&&a.traverse(function(o){if(o.isMesh)for(let l=0,c=n.weights.length;l<c;l++)o.morphTargetInfluences[l]=n.weights[l]}),a})}loadNode(e){const t=this.json,i=this,n=t.nodes[e],s=i._loadNodeShallow(e),a=[],o=n.children||[];for(let c=0,h=o.length;c<h;c++)a.push(i.getDependency("node",o[c]));const l=n.skin===void 0?Promise.resolve(null):i.getDependency("skin",n.skin);return Promise.all([s,Promise.all(a),l]).then(function(c){const h=c[0],d=c[1],u=c[2];u!==null&&h.traverse(function(f){f.isSkinnedMesh&&f.bind(u,$E)});for(let f=0,m=d.length;f<m;f++)h.add(d[f]);return h})}_loadNodeShallow(e){const t=this.json,i=this.extensions,n=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const s=t.nodes[e],a=s.name?n.createUniqueName(s.name):"",o=[],l=n._invokeOne(function(c){return c.createNodeMesh&&c.createNodeMesh(e)});return l&&o.push(l),s.camera!==void 0&&o.push(n.getDependency("camera",s.camera).then(function(c){return n._getNodeRef(n.cameraCache,s.camera,c)})),n._invokeAll(function(c){return c.createNodeAttachment&&c.createNodeAttachment(e)}).forEach(function(c){o.push(c)}),this.nodeCache[e]=Promise.all(o).then(function(c){let h;if(s.isBone===!0?h=new am:c.length>1?h=new qi:c.length===1?h=c[0]:h=new yt,h!==c[0])for(let d=0,u=c.length;d<u;d++)h.add(c[d]);if(s.name&&(h.userData.name=s.name,h.name=a),zn(h,s),s.extensions&&Ps(i,h,s),s.matrix!==void 0){const d=new Ne;d.fromArray(s.matrix),h.applyMatrix4(d)}else s.translation!==void 0&&h.position.fromArray(s.translation),s.rotation!==void 0&&h.quaternion.fromArray(s.rotation),s.scale!==void 0&&h.scale.fromArray(s.scale);if(!n.associations.has(h))n.associations.set(h,{});else if(s.mesh!==void 0&&n.meshCache.refs[s.mesh]>1){const d=n.associations.get(h);n.associations.set(h,{...d})}return n.associations.get(h).nodes=e,h}),this.nodeCache[e]}loadScene(e){const t=this.extensions,i=this.json.scenes[e],n=this,s=new qi;i.name&&(s.name=n.createUniqueName(i.name)),zn(s,i),i.extensions&&Ps(t,s,i);const a=i.nodes||[],o=[];for(let l=0,c=a.length;l<c;l++)o.push(n.getDependency("node",a[l]));return Promise.all(o).then(function(l){for(let h=0,d=l.length;h<d;h++)s.add(l[h]);const c=h=>{const d=new Map;for(const[u,f]of n.associations)(u instanceof yi||u instanceof Ht)&&d.set(u,f);return h.traverse(u=>{const f=n.associations.get(u);f!=null&&d.set(u,f)}),d};return n.associations=c(s),s})}_createAnimationTracks(e,t,i,n,s){const a=[],o=e.name?e.name:e.uuid,l=[];ns[s.path]===ns.weights?e.traverse(function(u){u.morphTargetInfluences&&l.push(u.name?u.name:u.uuid)}):l.push(o);let c;switch(ns[s.path]){case ns.weights:c=zr;break;case ns.rotation:c=Ur;break;case ns.translation:case ns.scale:c=Fr;break;default:switch(i.itemSize){case 1:c=zr;break;case 2:case 3:default:c=Fr;break}break}const h=n.interpolation!==void 0?BE[n.interpolation]:ka,d=this._getArrayFromAccessor(i);for(let u=0,f=l.length;u<f;u++){const m=new c(l[u]+"."+ns[s.path],t.array,d,h);n.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(m),a.push(m)}return a}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const i=Zh(t.constructor),n=new Float32Array(t.length);for(let s=0,a=t.length;s<a;s++)n[s]=t[s]*i;t=n}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(i){const n=this instanceof Ur?FE:Bm;return new n(this.times,this.values,this.getValueSize()/3,i)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function qE(r,e,t){const i=e.attributes,n=new qt;if(i.POSITION!==void 0){const o=t.json.accessors[i.POSITION],l=o.min,c=o.max;if(l!==void 0&&c!==void 0){if(n.set(new M(l[0],l[1],l[2]),new M(c[0],c[1],c[2])),o.normalized){const h=Zh(xr[o.componentType]);n.min.multiplyScalar(h),n.max.multiplyScalar(h)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const s=e.targets;if(s!==void 0){const o=new M,l=new M;for(let c=0,h=s.length;c<h;c++){const d=s[c];if(d.POSITION!==void 0){const u=t.json.accessors[d.POSITION],f=u.min,m=u.max;if(f!==void 0&&m!==void 0){if(l.setX(Math.max(Math.abs(f[0]),Math.abs(m[0]))),l.setY(Math.max(Math.abs(f[1]),Math.abs(m[1]))),l.setZ(Math.max(Math.abs(f[2]),Math.abs(m[2]))),u.normalized){const v=Zh(xr[u.componentType]);l.multiplyScalar(v)}o.max(l)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}n.expandByVector(o)}r.boundingBox=n;const a=new Pi;n.getCenter(a.center),a.radius=n.min.distanceTo(n.max)/2,r.boundingSphere=a}function sp(r,e,t){const i=e.attributes,n=[];function s(a,o){return t.getDependency("accessor",a).then(function(l){r.setAttribute(o,l)})}for(const a in i){const o=qh[a]||a.toLowerCase();o in r.attributes||n.push(s(i[a],o))}if(e.indices!==void 0&&!r.index){const a=t.getDependency("accessor",e.indices).then(function(o){r.setIndex(o)});n.push(a)}return nt.workingColorSpace!==oi&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${nt.workingColorSpace}" not supported.`),zn(r,e),qE(r,e,t),Promise.all(n).then(function(){return e.targets!==void 0?GE(r,e.targets,t):r})}const rp=1e3;class ap{constructor(e,t,i){var n;this.geometry=e,this.material=t.clone(),this.material.vertexColors=!0,this.instancedMesh=new ao(this.geometry,this.material,rp),this.instancedMesh.instanceMatrix.setUsage(Dr),(n=this.instancedMesh.instanceColor)==null||n.setUsage(Dr),i.add(this.instancedMesh),this.nodeIdToInstanceId=new Map,this.instanceIdToNodeId=new Map,this.activeInstances=0}addNode(e){if(this.activeInstances>=rp)return console.warn("InstancedMeshManager: Max instances reached."),null;const t=this.activeInstances++;return this.nodeIdToInstanceId.set(e.id,t),this.instanceIdToNodeId.set(t,e.id),this.updateNodeTransform(e,t),this.updateNodeColor(e,t),t}updateNodeTransform(e,t=this.nodeIdToInstanceId.get(e.id)){var o;if(t===void 0)return;const i=new Ne,n=e.position,s=((o=e.mesh)==null?void 0:o.quaternion)||new en,a=new M(e.size,e.size,e.size);i.compose(n,s,a),this.instancedMesh.setMatrixAt(t,i),this.instancedMesh.instanceMatrix.needsUpdate=!0}updateNodeColor(e,t=this.nodeIdToInstanceId.get(e.id)){if(t===void 0||!this.instancedMesh.instanceColor)return;const i=new fe(e.data.color||16777215);this.instancedMesh.setColorAt(t,i),this.instancedMesh.instanceColor.needsUpdate=!0}removeNode(e){const t=this.nodeIdToInstanceId.get(e.id);t!==void 0&&(this.instancedMesh.setMatrixAt(t,new Ne().makeScale(0,0,0)),this.instancedMesh.instanceMatrix.needsUpdate=!0,this.nodeIdToInstanceId.delete(e.id),this.instanceIdToNodeId.delete(t))}getRaycastIntersection(e){if(!this.instancedMesh||this.activeInstances===0)return null;const t=e.intersectObject(this.instancedMesh);if(t.length===0)return null;const i=t[0].instanceId,n=this.instanceIdToNodeId.get(i);return n?{...t[0],nodeId:n}:null}dispose(){var e;(e=this.instancedMesh.parent)==null||e.remove(this.instancedMesh),this.instancedMesh.geometry.dispose(),this.instancedMesh.material.dispose(),this.nodeIdToInstanceId.clear(),this.instanceIdToNodeId.clear()}}class ZE{constructor(e){this.scene=e,this.meshGroups=new Map,this.gltfLoader=new Um,this.loadedGltfGeometries=new Map,this._initDefaultGeometries()}async _loadGltfModel(e){if(this.loadedGltfGeometries.has(e))return this.loadedGltfGeometries.get(e);try{const t=await this.gltfLoader.loadAsync(e);let i=null;return t.scene.traverse(n=>{n.isMesh&&(i=n.geometry)}),i?(this.loadedGltfGeometries.set(e,i),i):(console.warn(`GLTF model at ${e} contains no mesh geometry.`),null)}catch(t){return console.error(`Error loading GLTF model from ${e}:`,t),null}}_initDefaultGeometries(){const e=new Sn(.5,16,12),t=new Ci({roughness:.6,metalness:.2});this.meshGroups.set("sphere",new ap(e,t,this.scene))}async getNodeGroup(e){if(e.data.shape==="sphere")return this.meshGroups.get("sphere");if(e.data.gltfUrl){let t=this.meshGroups.get(e.data.gltfUrl);if(!t){const i=await this._loadGltfModel(e.data.gltfUrl);if(i){const n=new Ci({roughness:.6,metalness:.2});t=new ap(i,n,this.scene),this.meshGroups.set(e.data.gltfUrl,t)}}return t}return null}async addNode(e){const t=await this.getNodeGroup(e);if(!t)return e.isInstanced=!1,!1;const i=t.addNode(e);return i===null?(e.isInstanced=!1,!1):(e.isInstanced=!0,e.instanceId=i,e.mesh&&(e.mesh.visible=!1),!0)}async updateNode(e){if(!e.isInstanced)return;const t=await this.getNodeGroup(e);t&&(t.updateNodeTransform(e),t.updateNodeColor(e))}async removeNode(e){if(!e.isInstanced)return;const t=await this.getNodeGroup(e);t&&(t.removeNode(e),e.isInstanced=!1)}raycast(e){let t=null;for(const i of this.meshGroups.values()){const n=i.getRaycastIntersection(e);n&&(!t||n.distance<t.distance)&&(t=n)}return t}dispose(){this.meshGroups.forEach(e=>e.dispose()),this.meshGroups.clear()}}const op=new qt,Ko=new M;class Hm extends Ny{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new _t(e,3)),this.setAttribute("uv",new _t(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Wh(t,6,1);return this.setAttribute("instanceStart",new Wn(i,3,0)),this.setAttribute("instanceEnd",new Wn(i,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Wh(t,6,1);return this.setAttribute("instanceColorStart",new Wn(i,3,0)),this.setAttribute("instanceColorEnd",new Wn(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new dy(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qt);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),op.setFromBufferAttribute(t),this.boundingBox.union(op))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Pi),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let s=0,a=e.count;s<a;s++)Ko.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(Ko)),Ko.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(Ko));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}}he.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Z(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};Mi.line={uniforms:Ad.merge([he.common,he.fog,he.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			float alpha = opacity;
			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class $d extends Ot{constructor(e){super({type:"LineMaterial",uniforms:Ad.clone(Mi.line.uniforms),vertexShader:Mi.line.vertexShader,fragmentShader:Mi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const Hc=new Ke,lp=new M,cp=new M,ni=new Ke,si=new Ke,vn=new Ke,Gc=new M,Vc=new Ne,ri=new $y,hp=new M,Jo=new qt,Qo=new Pi,yn=new Ke;let bn,Fs;function dp(r,e,t){return yn.set(0,0,-e,1).applyMatrix4(r.projectionMatrix),yn.multiplyScalar(1/yn.w),yn.x=Fs/t.width,yn.y=Fs/t.height,yn.applyMatrix4(r.projectionMatrixInverse),yn.multiplyScalar(1/yn.w),Math.abs(Math.max(yn.x,yn.y))}function YE(r,e){const t=r.matrixWorld,i=r.geometry,n=i.attributes.instanceStart,s=i.attributes.instanceEnd,a=Math.min(i.instanceCount,n.count);for(let o=0,l=a;o<l;o++){ri.start.fromBufferAttribute(n,o),ri.end.fromBufferAttribute(s,o),ri.applyMatrix4(t);const c=new M,h=new M;bn.distanceSqToSegment(ri.start,ri.end,h,c),h.distanceTo(c)<Fs*.5&&e.push({point:h,pointOnLine:c,distance:bn.origin.distanceTo(h),object:r,face:null,faceIndex:o,uv:null,uv1:null})}}function KE(r,e,t){const i=e.projectionMatrix,s=r.material.resolution,a=r.matrixWorld,o=r.geometry,l=o.attributes.instanceStart,c=o.attributes.instanceEnd,h=Math.min(o.instanceCount,l.count),d=-e.near;bn.at(1,vn),vn.w=1,vn.applyMatrix4(e.matrixWorldInverse),vn.applyMatrix4(i),vn.multiplyScalar(1/vn.w),vn.x*=s.x/2,vn.y*=s.y/2,vn.z=0,Gc.copy(vn),Vc.multiplyMatrices(e.matrixWorldInverse,a);for(let u=0,f=h;u<f;u++){if(ni.fromBufferAttribute(l,u),si.fromBufferAttribute(c,u),ni.w=1,si.w=1,ni.applyMatrix4(Vc),si.applyMatrix4(Vc),ni.z>d&&si.z>d)continue;if(ni.z>d){const _=ni.z-si.z,y=(ni.z-d)/_;ni.lerp(si,y)}else if(si.z>d){const _=si.z-ni.z,y=(si.z-d)/_;si.lerp(ni,y)}ni.applyMatrix4(i),si.applyMatrix4(i),ni.multiplyScalar(1/ni.w),si.multiplyScalar(1/si.w),ni.x*=s.x/2,ni.y*=s.y/2,si.x*=s.x/2,si.y*=s.y/2,ri.start.copy(ni),ri.start.z=0,ri.end.copy(si),ri.end.z=0;const v=ri.closestPointToPointParameter(Gc,!0);ri.at(v,hp);const g=Qr.lerp(ni.z,si.z,v),p=g>=-1&&g<=1,x=Gc.distanceTo(hp)<Fs*.5;if(p&&x){ri.start.fromBufferAttribute(l,u),ri.end.fromBufferAttribute(c,u),ri.start.applyMatrix4(a),ri.end.applyMatrix4(a);const _=new M,y=new M;bn.distanceSqToSegment(ri.start,ri.end,y,_),t.push({point:y,pointOnLine:_,distance:bn.origin.distanceTo(y),object:r,face:null,faceIndex:u,uv:null,uv1:null})}}}class JE extends st{constructor(e=new Hm,t=new $d({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let a=0,o=0,l=t.count;a<l;a++,o+=2)lp.fromBufferAttribute(t,a),cp.fromBufferAttribute(i,a),n[o]=o===0?0:n[o-1],n[o+1]=n[o]+lp.distanceTo(cp);const s=new Wh(n,2,1);return e.setAttribute("instanceDistanceStart",new Wn(s,1,0)),e.setAttribute("instanceDistanceEnd",new Wn(s,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=e.params.Line2!==void 0&&e.params.Line2.threshold||0;bn=e.ray;const a=this.matrixWorld,o=this.geometry,l=this.material;Fs=l.linewidth+s,o.boundingSphere===null&&o.computeBoundingSphere(),Qo.copy(o.boundingSphere).applyMatrix4(a);let c;if(i)c=Fs*.5;else{const d=Math.max(n.near,Qo.distanceToPoint(bn.origin));c=dp(n,d,l.resolution)}if(Qo.radius+=c,bn.intersectsSphere(Qo)===!1)return;o.boundingBox===null&&o.computeBoundingBox(),Jo.copy(o.boundingBox).applyMatrix4(a);let h;if(i)h=Fs*.5;else{const d=Math.max(n.near,Jo.distanceToPoint(bn.origin));h=dp(n,d,l.resolution)}Jo.expandByScalar(h),bn.intersectsBox(Jo)!==!1&&(i?YE(this,t):KE(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(Hc),this.material.uniforms.resolution.value.set(Hc.z,Hc.w))}}class Gm extends Hm{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}setFromPoints(e){const t=e.length-1,i=new Float32Array(6*t);for(let n=0;n<t;n++)i[6*n]=e[n].x,i[6*n+1]=e[n].y,i[6*n+2]=e[n].z||0,i[6*n+3]=e[n+1].x,i[6*n+4]=e[n+1].y,i[6*n+5]=e[n+1].z||0;return super.setPositions(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class Vm extends JE{constructor(e=new Gm,t=new $d({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}class QE extends mn{constructor(t,i){super(t,i);E(this,"scene",null);E(this,"cssScene",null);E(this,"renderGL",null);E(this,"renderCSS3D",null);E(this,"composer",null);E(this,"clock",null);E(this,"bloomEffect",null);E(this,"ssaoEffect",null);E(this,"outlineEffect",null);E(this,"normalPass",null);E(this,"selection",null);E(this,"renderPass",null);E(this,"normalPassInstance",null);E(this,"effectPassBloom",null);E(this,"effectPassSSAO",null);E(this,"effectPassOutline",null);E(this,"effectsConfig",{bloom:{enabled:!0,intensity:.5,kernelSize:Br.MEDIUM,luminanceThreshold:.85,luminanceSmoothing:.4},ssao:{enabled:!0,blendFunction:Xe.MULTIPLY,samples:16,rings:4,distanceThreshold:.05,distanceFalloff:.01,rangeThreshold:.005,rangeFalloff:.001,luminanceInfluence:.6,radius:15,scale:.6,bias:.03,intensity:1.5,color:0},outline:{enabled:!0,blendFunction:Xe.SCREEN,edgeStrength:2.5,pulseSpeed:0,visibleEdgeColor:16755200,hiddenEdgeColor:2230538,kernelSize:Br.VERY_SMALL,blur:!1,xRay:!0}});E(this,"css3dContainer",null);E(this,"webglCanvas",null);E(this,"background",{color:1710621,alpha:1});E(this,"managedLights",new Map);E(this,"instancedMeshManager",null);E(this,"_onWindowResize",()=>{var s,a;const t=(a=(s=this.pluginManager)==null?void 0:s.getPlugin("CameraPlugin"))==null?void 0:a.getCameraInstance();if(!t||!this.renderGL||!this.renderCSS3D||!this.composer)return;const{innerWidth:i,innerHeight:n}=window;t.aspect=i/n,t.updateProjectionMatrix(),this.renderGL.setSize(i,n),this.composer.setSize(i,n),this.renderCSS3D.setSize(i,n),this.space.emit("renderer:resize",{width:i,height:n})});this.scene=new za,this.cssScene=new za,this.clock=new Oy}getName(){return"RenderingPlugin"}init(){super.init(),this._setupRenderersAndComposer(),this._setupLighting(),this.setBackground(this.background.color,this.background.alpha),this.instancedMeshManager=new ZE(this.scene),window.addEventListener("resize",this._onWindowResize,!1),this._setupSelectionListener(),this._rebuildEffectPasses()}_setupSelectionListener(){this.space.on("selection:changed",this.handleSelectionChange.bind(this))}handleSelectionChange(t){var i;!this.outlineEffect||!this.selection||!this.effectsConfig.outline.enabled||(this.selection.clear(),(i=t.selected)==null||i.forEach(n=>{const s=n.mesh||n.line;s&&this._isObjectInMainScene(s)&&(s instanceof st||s instanceof Vm||s instanceof ea)&&this.selection.add(s)}))}_isObjectInMainScene(t){let i=t;for(;i;){if(i===this.scene)return!0;i=i.parent}return!1}update(){var n,s,a,o,l,c,h;const t=(s=(n=this.pluginManager)==null?void 0:n.getPlugin("CameraPlugin"))==null?void 0:s.getCameraInstance(),i=this.clock.getDelta();t&&this.composer&&this.composer.renderer?(this.composer.render(i),(a=this.renderCSS3D)==null||a.render(this.cssScene,t)):t&&this.renderGL&&(this.renderGL.render(this.scene,t),(o=this.renderCSS3D)==null||o.render(this.cssScene,t)),(h=(c=(l=this.pluginManager)==null?void 0:l.getPlugin("MinimapPlugin"))==null?void 0:c.render)==null||h.call(c,this.renderGL)}_setupRenderersAndComposer(){var i,n,s;if(!((i=this.space)!=null&&i.container)){console.error("RenderingPlugin: SpaceGraph container not available.");return}const t=(s=(n=this.pluginManager)==null?void 0:n.getPlugin("CameraPlugin"))==null?void 0:s.getCameraInstance();if(!t){console.error("RenderingPlugin: Camera instance not available.");return}this.webglCanvas=ue("#webgl-canvas")||document.createElement("canvas"),this.webglCanvas.id="webgl-canvas",this.webglCanvas.parentNode||this.space.container.appendChild(this.webglCanvas),this.renderGL=new RS({canvas:this.webglCanvas,powerPreference:"high-performance",antialias:!1,stencil:!0,depth:!0,alpha:!0}),this.renderGL.setSize(window.innerWidth,window.innerHeight),this.renderGL.setPixelRatio(window.devicePixelRatio),this.renderGL.outputColorSpace=et,this.renderGL.shadowMap.enabled=!0,this.renderGL.shadowMap.type=Hp,this.composer=new WS(this.renderGL),this.renderPass=new Vl(this.scene,t),this.composer.addPass(this.renderPass),this.renderCSS3D=new IS,this.renderCSS3D.setSize(window.innerWidth,window.innerHeight),this.css3dContainer=ue("#css3d-container"),this.css3dContainer||(this.css3dContainer=document.createElement("div"),this.css3dContainer.id="css3d-container",this.space.container.appendChild(this.css3dContainer)),this.css3dContainer.appendChild(this.renderCSS3D.domElement),Object.assign(this.renderCSS3D.domElement.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",pointerEvents:"none"})}_rebuildEffectPasses(){var i,n,s,a,o,l,c,h,d;if(!this.composer||!this.renderPass||!this.composer.renderer)return;const t=(n=(i=this.pluginManager)==null?void 0:i.getPlugin("CameraPlugin"))==null?void 0:n.getCameraInstance();t&&((s=this.normalPassInstance)==null||s.dispose(),this.composer.removePass(this.normalPassInstance),this.normalPassInstance=null,(a=this.effectPassSSAO)==null||a.dispose(),this.composer.removePass(this.effectPassSSAO),this.effectPassSSAO=null,(o=this.effectPassOutline)==null||o.dispose(),this.composer.removePass(this.effectPassOutline),this.effectPassOutline=null,(l=this.effectPassBloom)==null||l.dispose(),this.composer.removePass(this.effectPassBloom),this.effectPassBloom=null,(c=this.ssaoEffect)==null||c.dispose(),this.ssaoEffect=null,(h=this.outlineEffect)==null||h.dispose(),this.outlineEffect=null,(d=this.bloomEffect)==null||d.dispose(),this.bloomEffect=null,this.effectsConfig.ssao.enabled&&(this.normalPassInstance=new pE(this.scene,t,{renderTarget:new kt(1,1,{minFilter:Xt,magFilter:Xt,format:vi})}),this.composer.addPass(this.normalPassInstance),this.ssaoEffect=new cE(t,this.normalPassInstance.texture,this.effectsConfig.ssao),this.effectPassSSAO=new zc(t,this.ssaoEffect),this.composer.addPass(this.effectPassSSAO)),this.effectsConfig.outline.enabled&&(this.selection??(this.selection=new km),this.outlineEffect=new eE(this.scene,t,this.effectsConfig.outline),this.outlineEffect.selection=this.selection,this.effectPassOutline=new zc(t,this.outlineEffect),this.composer.addPass(this.effectPassOutline)),this.effectsConfig.bloom.enabled&&(this.bloomEffect=new Gw(this.effectsConfig.bloom),this.effectPassBloom=new zc(t,this.bloomEffect),this.composer.addPass(this.effectPassBloom)))}setEffectEnabled(t,i){if(!this.effectsConfig[t])return console.warn(`RenderingPlugin: Effect "${t}" not found.`);this.effectsConfig[t].enabled=i,this._rebuildEffectPasses(),this.space.emit("effect:enabled:changed",{effectName:t,enabled:i})}configureEffect(t,i){if(!this.effectsConfig[t])return console.warn(`RenderingPlugin: Effect "${t}" not found.`);Object.assign(this.effectsConfig[t],i),this._rebuildEffectPasses(),this.space.emit("effect:settings:changed",{effectName:t,settings:i})}getEffectConfiguration(t){return this.effectsConfig[t]?{...this.effectsConfig[t]}:null}addLight(t,i,n={}){var l,c,h,d,u,f;if(this.managedLights.has(t))return this.managedLights.get(t);let s;const a=n.color??16777215,o=n.intensity??1;switch(i.toLowerCase()){case"ambient":s=new Dy(a,o);break;case"directional":if(s=new Cm(a,o),s.position.set(((l=n.position)==null?void 0:l.x)??50,((c=n.position)==null?void 0:c.y)??100,((h=n.position)==null?void 0:h.z)??75),n.target instanceof yt?s.target=n.target:n.target instanceof M?s.target.position.copy(n.target):s.target.position.set(0,0,0),this.scene.add(s.target),n.castShadow!==!1){s.castShadow=!0,s.shadow.mapSize.width=n.shadowMapSizeWidth??2048,s.shadow.mapSize.height=n.shadowMapSizeHeight??2048,s.shadow.camera.near=n.shadowCameraNear??.5,s.shadow.camera.far=n.shadowCameraFar??500;const m=n.shadowCameraSize??100;s.shadow.camera.left=-m,s.shadow.camera.right=m,s.shadow.camera.top=m,s.shadow.camera.bottom=-m}break;case"point":s=new Tm(a,o,n.distance??1e3,n.decay??2),s.position.set(((d=n.position)==null?void 0:d.x)??0,((u=n.position)==null?void 0:u.y)??0,((f=n.position)==null?void 0:f.z)??0),n.castShadow&&(s.castShadow=!0,s.shadow.mapSize.width=n.shadowMapSizeWidth??1024,s.shadow.mapSize.height=n.shadowMapSizeHeight??1024,s.shadow.camera.near=n.shadowCameraNear??.5,s.shadow.camera.far=n.shadowCameraFar??500);break;default:return console.error(`RenderingPlugin: Unknown light type '${i}'`),null}return s?(s.userData.lightId=t,this.managedLights.set(t,s),this.scene.add(s),this.space.emit("light:added",{id:t,type:i,light:s}),s):null}removeLight(t){var n,s;const i=this.managedLights.get(t);return i?(((n=i.target)==null?void 0:n.parent)===this.scene&&this.scene.remove(i.target),this.scene.remove(i),(s=i.dispose)==null||s.call(i),this.managedLights.delete(t),this.space.emit("light:removed",{id:t}),!0):console.warn(`RenderingPlugin: Light '${t}' not found.`)||!1}getLight(t){return this.managedLights.get(t)}configureLight(t,i){var s;const n=this.managedLights.get(t);if(!n)return!1;if(i.color!==void 0&&n.color.set(i.color),i.intensity!==void 0&&(n.intensity=i.intensity),i.position&&((s=n.position)==null||s.set(i.position.x,i.position.y,i.position.z)),i.castShadow!==void 0&&n.castShadow!==void 0&&(n.castShadow=i.castShadow),n.shadow){if(i.shadowMapSizeWidth!==void 0&&(n.shadow.mapSize.width=i.shadowMapSizeWidth),i.shadowMapSizeHeight!==void 0&&(n.shadow.mapSize.height=i.shadowMapSizeHeight),i.shadowCameraNear!==void 0&&(n.shadow.camera.near=i.shadowCameraNear),i.shadowCameraFar!==void 0&&(n.shadow.camera.far=i.shadowCameraFar),n.shadow.camera instanceof ho&&i.shadowCameraSize!==void 0){const a=i.shadowCameraSize;n.shadow.camera.left=-a,n.shadow.camera.right=a,n.shadow.camera.top=a,n.shadow.camera.bottom=-a}n.shadow.camera.updateProjectionMatrix()}return this.space.emit("light:configured",{id:t,light:n,options:i}),!0}_setupLighting(){this.addLight("defaultAmbient","ambient",{intensity:.8}),this.addLight("defaultDirectional","directional",{intensity:1.2,position:{x:150,y:200,z:100},castShadow:!0,shadowMapSizeWidth:2048,shadowMapSizeHeight:2048,shadowCameraNear:10,shadowCameraFar:600,shadowCameraSize:150})}setBackground(t=0,i=0){var n;this.background={color:t,alpha:i},(n=this.renderGL)==null||n.setClearColor(t,i),this.webglCanvas&&(this.webglCanvas.style.backgroundColor=i===0?"transparent":`#${new fe(t).getHexString()}`)}_updateFrustumHelper(){var u;const t=(u=this.pluginManager.getPlugin("CameraPlugin"))==null?void 0:u.getCameraInstance();if(!this.frustumHelper||!t){this.frustumHelper&&(this.frustumHelper.visible=!1);return}t.updateMatrixWorld(),t.updateProjectionMatrix();const i=[],n=[new M(-1,-1,-1),new M(1,-1,-1),new M(1,1,-1),new M(-1,1,-1),new M(-1,-1,1),new M(1,-1,1),new M(1,1,1),new M(-1,1,1)];for(let f=0;f<8;f++)i.push(n[f].clone().unproject(t));const s=i.map(f=>new M(f.x,f.y,0));let a=1/0,o=-1/0,l=1/0,c=-1/0;s.forEach(f=>{a=Math.min(a,f.x),o=Math.max(o,f.x),l=Math.min(l,f.y),c=Math.max(c,f.y)});const h=[a,l,0,o,l,0,o,c,0,a,c,0],d=new Float32Array([h[0],h[1],h[2],h[3],h[4],h[5],h[3],h[4],h[5],h[6],h[7],h[8],h[6],h[7],h[8],h[9],h[10],h[11],h[9],h[10],h[11],h[0],h[1],h[2]]);this.frustumHelper.geometry.setAttribute("position",new Ct(d,3)),this.frustumHelper.geometry.attributes.position.needsUpdate=!0,this.frustumHelper.geometry.computeBoundingSphere(),this.frustumHelper.visible=!0}getWebGLScene(){return this.scene}getCSS3DScene(){return this.cssScene}getInstancedMeshManager(){return this.instancedMeshManager}getCSS3DRenderer(){return this.renderCSS3D}dispose(){var t,i,n,s,a,o,l,c,h,d,u,f,m,v,g,p,x,_;super.dispose(),window.removeEventListener("resize",this._onWindowResize),this.space.off("selection:changed",this.handleSelectionChange),(t=this.instancedMeshManager)==null||t.dispose(),this.instancedMeshManager=null,(i=this.effectPassBloom)==null||i.dispose(),(n=this.effectPassSSAO)==null||n.dispose(),(s=this.effectPassOutline)==null||s.dispose(),(a=this.normalPassInstance)==null||a.dispose(),(o=this.bloomEffect)==null||o.dispose(),(l=this.ssaoEffect)==null||l.dispose(),(c=this.outlineEffect)==null||c.dispose(),(h=this.selection)==null||h.dispose(),(d=this.composer)==null||d.dispose(),(u=this.renderPass)==null||u.dispose(),(f=this.renderGL)==null||f.dispose(),(v=(m=this.renderCSS3D)==null?void 0:m.domElement)==null||v.remove(),(g=this.css3dContainer)==null||g.remove(),(p=this.scene)==null||p.traverse(y=>{var w;(w=y.geometry)==null||w.dispose(),y.material&&(Array.isArray(y.material)?y.material.forEach(C=>C.dispose()):y.material.dispose())}),(x=this.scene)==null||x.clear(),(_=this.cssScene)==null||_.clear(),this.scene=null,this.cssScene=null,this.renderGL=null}}function Un(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function Wm(r,e){r.prototype=Object.create(e.prototype),r.prototype.constructor=r,r.__proto__=e}/*!
 * GSAP 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var zi={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},Hr={duration:.5,overwrite:!1,delay:0},Xd,ai,Et,Zi=1e8,vt=1/Zi,Yh=Math.PI*2,eT=Yh/4,tT=0,jm=Math.sqrt,iT=Math.cos,nT=Math.sin,ti=function(e){return typeof e=="string"},It=function(e){return typeof e=="function"},$n=function(e){return typeof e=="number"},qd=function(e){return typeof e>"u"},Tn=function(e){return typeof e=="object"},Si=function(e){return e!==!1},Zd=function(){return typeof window<"u"},el=function(e){return It(e)||ti(e)},$m=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},ui=Array.isArray,Kh=/(?:-?\.?\d|\.)+/gi,Xm=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,mr=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Wc=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,qm=/[+-]=-?[.\d]+/,Zm=/[^,'"\[\]\s]+/gi,sT=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,Lt,_n,Jh,Yd,Fi={},xl={},Ym,Km=function(e){return(xl=Gr(e,Fi))&&Ai},Kd=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},Ha=function(e,t){return!t&&console.warn(e)},Jm=function(e,t){return e&&(Fi[e]=t)&&xl&&(xl[e]=t)||Fi},Ga=function(){return 0},rT={suppressEvents:!0,isStart:!0,kill:!1},hl={suppressEvents:!0,kill:!1},aT={suppressEvents:!0},Jd={},us=[],Qh={},Qm,Ii={},jc={},up=30,dl=[],Qd="",eu=function(e){var t=e[0],i,n;if(Tn(t)||It(t)||(e=[e]),!(i=(t._gsap||{}).harness)){for(n=dl.length;n--&&!dl[n].targetTest(t););i=dl[n]}for(n=e.length;n--;)e[n]&&(e[n]._gsap||(e[n]._gsap=new Sg(e[n],i)))||e.splice(n,1);return e},Bs=function(e){return e._gsap||eu(Yi(e))[0]._gsap},eg=function(e,t,i){return(i=e[t])&&It(i)?e[t]():qd(i)&&e.getAttribute&&e.getAttribute(t)||i},wi=function(e,t){return(e=e.split(",")).forEach(t)||e},Ft=function(e){return Math.round(e*1e5)/1e5||0},jt=function(e){return Math.round(e*1e7)/1e7||0},br=function(e,t){var i=t.charAt(0),n=parseFloat(t.substr(2));return e=parseFloat(e),i==="+"?e+n:i==="-"?e-n:i==="*"?e*n:e/n},oT=function(e,t){for(var i=t.length,n=0;e.indexOf(t[n])<0&&++n<i;);return n<i},bl=function(){var e=us.length,t=us.slice(0),i,n;for(Qh={},us.length=0,i=0;i<e;i++)n=t[i],n&&n._lazy&&(n.render(n._lazy[0],n._lazy[1],!0)._lazy=0)},tu=function(e){return!!(e._initted||e._startAt||e.add)},tg=function(e,t,i,n){us.length&&!ai&&bl(),e.render(t,i,!!(ai&&t<0&&tu(e))),us.length&&!ai&&bl()},ig=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(Zm).length<2?t:ti(e)?e.trim():e},ng=function(e){return e},Bi=function(e,t){for(var i in t)i in e||(e[i]=t[i]);return e},lT=function(e){return function(t,i){for(var n in i)n in t||n==="duration"&&e||n==="ease"||(t[n]=i[n])}},Gr=function(e,t){for(var i in t)e[i]=t[i];return e},fp=function r(e,t){for(var i in t)i!=="__proto__"&&i!=="constructor"&&i!=="prototype"&&(e[i]=Tn(t[i])?r(e[i]||(e[i]={}),t[i]):t[i]);return e},Ml=function(e,t){var i={},n;for(n in e)n in t||(i[n]=e[n]);return i},Ca=function(e){var t=e.parent||Lt,i=e.keyframes?lT(ui(e.keyframes)):Bi;if(Si(e.inherit))for(;t;)i(e,t.vars.defaults),t=t.parent||t._dp;return e},cT=function(e,t){for(var i=e.length,n=i===t.length;n&&i--&&e[i]===t[i];);return i<0},sg=function(e,t,i,n,s){var a=e[n],o;if(s)for(o=t[s];a&&a[s]>o;)a=a._prev;return a?(t._next=a._next,a._next=t):(t._next=e[i],e[i]=t),t._next?t._next._prev=t:e[n]=t,t._prev=a,t.parent=t._dp=e,t},Wl=function(e,t,i,n){i===void 0&&(i="_first"),n===void 0&&(n="_last");var s=t._prev,a=t._next;s?s._next=a:e[i]===t&&(e[i]=a),a?a._prev=s:e[n]===t&&(e[n]=s),t._next=t._prev=t.parent=null},gs=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove&&e.parent.remove(e),e._act=0},Hs=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var i=e;i;)i._dirty=1,i=i.parent;return e},hT=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},ed=function(e,t,i,n){return e._startAt&&(ai?e._startAt.revert(hl):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,n))},dT=function r(e){return!e||e._ts&&r(e.parent)},pp=function(e){return e._repeat?Vr(e._tTime,e=e.duration()+e._rDelay)*e:0},Vr=function(e,t){var i=Math.floor(e=jt(e/t));return e&&i===e?i-1:i},Sl=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},jl=function(e){return e._end=jt(e._start+(e._tDur/Math.abs(e._ts||e._rts||vt)||0))},$l=function(e,t){var i=e._dp;return i&&i.smoothChildTiming&&e._ts&&(e._start=jt(i._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),jl(e),i._dirty||Hs(i,e)),e},rg=function(e,t){var i;if((t._time||!t._dur&&t._initted||t._start<e._time&&(t._dur||!t.add))&&(i=Sl(e.rawTime(),t),(!t._dur||fo(0,t.totalDuration(),i)-t._tTime>vt)&&t.render(i,!0)),Hs(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(i=e;i._dp;)i.rawTime()>=0&&i.totalTime(i._tTime),i=i._dp;e._zTime=-vt}},Mn=function(e,t,i,n){return t.parent&&gs(t),t._start=jt(($n(i)?i:i||e!==Lt?Wi(e,i,t):e._time)+t._delay),t._end=jt(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),sg(e,t,"_first","_last",e._sort?"_start":0),td(t)||(e._recent=t),n||rg(e,t),e._ts<0&&$l(e,e._tTime),e},ag=function(e,t){return(Fi.ScrollTrigger||Kd("scrollTrigger",t))&&Fi.ScrollTrigger.create(t,e)},og=function(e,t,i,n,s){if(nu(e,t,s),!e._initted)return 1;if(!i&&e._pt&&!ai&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&Qm!==ki.frame)return us.push(e),e._lazy=[s,n],1},uT=function r(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||r(t))},td=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},fT=function(e,t,i,n){var s=e.ratio,a=t<0||!t&&(!e._start&&uT(e)&&!(!e._initted&&td(e))||(e._ts<0||e._dp._ts<0)&&!td(e))?0:1,o=e._rDelay,l=0,c,h,d;if(o&&e._repeat&&(l=fo(0,e._tDur,t),h=Vr(l,o),e._yoyo&&h&1&&(a=1-a),h!==Vr(e._tTime,o)&&(s=1-a,e.vars.repeatRefresh&&e._initted&&e.invalidate())),a!==s||ai||n||e._zTime===vt||!t&&e._zTime){if(!e._initted&&og(e,t,n,i,l))return;for(d=e._zTime,e._zTime=t||(i?vt:0),i||(i=t&&!d),e.ratio=a,e._from&&(a=1-a),e._time=0,e._tTime=l,c=e._pt;c;)c.r(a,c.d),c=c._next;t<0&&ed(e,t,i,!0),e._onUpdate&&!i&&Oi(e,"onUpdate"),l&&e._repeat&&!i&&e.parent&&Oi(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===a&&(a&&gs(e,1),!i&&!ai&&(Oi(e,a?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},pT=function(e,t,i){var n;if(i>t)for(n=e._first;n&&n._start<=i;){if(n.data==="isPause"&&n._start>t)return n;n=n._next}else for(n=e._last;n&&n._start>=i;){if(n.data==="isPause"&&n._start<t)return n;n=n._prev}},Wr=function(e,t,i,n){var s=e._repeat,a=jt(t)||0,o=e._tTime/e._tDur;return o&&!n&&(e._time*=a/e._dur),e._dur=a,e._tDur=s?s<0?1e10:jt(a*(s+1)+e._rDelay*s):a,o>0&&!n&&$l(e,e._tTime=e._tDur*o),e.parent&&jl(e),i||Hs(e.parent,e),e},mp=function(e){return e instanceof gi?Hs(e):Wr(e,e._dur)},mT={_start:0,endTime:Ga,totalDuration:Ga},Wi=function r(e,t,i){var n=e.labels,s=e._recent||mT,a=e.duration()>=Zi?s.endTime(!1):e._dur,o,l,c;return ti(t)&&(isNaN(t)||t in n)?(l=t.charAt(0),c=t.substr(-1)==="%",o=t.indexOf("="),l==="<"||l===">"?(o>=0&&(t=t.replace(/=/,"")),(l==="<"?s._start:s.endTime(s._repeat>=0))+(parseFloat(t.substr(1))||0)*(c?(o<0?s:i).totalDuration()/100:1)):o<0?(t in n||(n[t]=a),n[t]):(l=parseFloat(t.charAt(o-1)+t.substr(o+1)),c&&i&&(l=l/100*(ui(i)?i[0]:i).totalDuration()),o>1?r(e,t.substr(0,o-1),i)+l:a+l)):t==null?a:+t},Aa=function(e,t,i){var n=$n(t[1]),s=(n?2:1)+(e<2?0:1),a=t[s],o,l;if(n&&(a.duration=t[1]),a.parent=i,e){for(o=a,l=i;l&&!("immediateRender"in o);)o=l.vars.defaults||{},l=Si(l.vars.inherit)&&l.parent;a.immediateRender=Si(o.immediateRender),e<2?a.runBackwards=1:a.startAt=t[s-1]}return new Wt(t[0],a,t[s+1])},xs=function(e,t){return e||e===0?t(e):t},fo=function(e,t,i){return i<e?e:i>t?t:i},hi=function(e,t){return!ti(e)||!(t=sT.exec(e))?"":t[1]},gT=function(e,t,i){return xs(i,function(n){return fo(e,t,n)})},id=[].slice,lg=function(e,t){return e&&Tn(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&Tn(e[0]))&&!e.nodeType&&e!==_n},vT=function(e,t,i){return i===void 0&&(i=[]),e.forEach(function(n){var s;return ti(n)&&!t||lg(n,1)?(s=i).push.apply(s,Yi(n)):i.push(n)})||i},Yi=function(e,t,i){return Et&&!t&&Et.selector?Et.selector(e):ti(e)&&!i&&(Jh||!jr())?id.call((t||Yd).querySelectorAll(e),0):ui(e)?vT(e,i):lg(e)?id.call(e,0):e?[e]:[]},nd=function(e){return e=Yi(e)[0]||Ha("Invalid scope")||{},function(t){var i=e.current||e.nativeElement||e;return Yi(t,i.querySelectorAll?i:i===e?Ha("Invalid scope")||Yd.createElement("div"):e)}},cg=function(e){return e.sort(function(){return .5-Math.random()})},hg=function(e){if(It(e))return e;var t=Tn(e)?e:{each:e},i=Gs(t.ease),n=t.from||0,s=parseFloat(t.base)||0,a={},o=n>0&&n<1,l=isNaN(n)||o,c=t.axis,h=n,d=n;return ti(n)?h=d={center:.5,edges:.5,end:1}[n]||0:!o&&l&&(h=n[0],d=n[1]),function(u,f,m){var v=(m||t).length,g=a[v],p,x,_,y,w,C,A,L,b;if(!g){if(b=t.grid==="auto"?0:(t.grid||[1,Zi])[1],!b){for(A=-Zi;A<(A=m[b++].getBoundingClientRect().left)&&b<v;);b<v&&b--}for(g=a[v]=[],p=l?Math.min(b,v)*h-.5:n%b,x=b===Zi?0:l?v*d/b-.5:n/b|0,A=0,L=Zi,C=0;C<v;C++)_=C%b-p,y=x-(C/b|0),g[C]=w=c?Math.abs(c==="y"?y:_):jm(_*_+y*y),w>A&&(A=w),w<L&&(L=w);n==="random"&&cg(g),g.max=A-L,g.min=L,g.v=v=(parseFloat(t.amount)||parseFloat(t.each)*(b>v?v-1:c?c==="y"?v/b:b:Math.max(b,v/b))||0)*(n==="edges"?-1:1),g.b=v<0?s-v:s,g.u=hi(t.amount||t.each)||0,i=i&&v<0?xg(i):i}return v=(g[u]-g.min)/g.max||0,jt(g.b+(i?i(v):v)*g.v)+g.u}},sd=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(i){var n=jt(Math.round(parseFloat(i)/e)*e*t);return(n-n%1)/t+($n(i)?0:hi(i))}},dg=function(e,t){var i=ui(e),n,s;return!i&&Tn(e)&&(n=i=e.radius||Zi,e.values?(e=Yi(e.values),(s=!$n(e[0]))&&(n*=n)):e=sd(e.increment)),xs(t,i?It(e)?function(a){return s=e(a),Math.abs(s-a)<=n?s:a}:function(a){for(var o=parseFloat(s?a.x:a),l=parseFloat(s?a.y:0),c=Zi,h=0,d=e.length,u,f;d--;)s?(u=e[d].x-o,f=e[d].y-l,u=u*u+f*f):u=Math.abs(e[d]-o),u<c&&(c=u,h=d);return h=!n||c<=n?e[h]:a,s||h===a||$n(a)?h:h+hi(a)}:sd(e))},ug=function(e,t,i,n){return xs(ui(e)?!t:i===!0?!!(i=0):!n,function(){return ui(e)?e[~~(Math.random()*e.length)]:(i=i||1e-5)&&(n=i<1?Math.pow(10,(i+"").length-2):1)&&Math.floor(Math.round((e-i/2+Math.random()*(t-e+i*.99))/i)*i*n)/n})},yT=function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return function(n){return t.reduce(function(s,a){return a(s)},n)}},_T=function(e,t){return function(i){return e(parseFloat(i))+(t||hi(i))}},xT=function(e,t,i){return pg(e,t,0,1,i)},fg=function(e,t,i){return xs(i,function(n){return e[~~t(n)]})},bT=function r(e,t,i){var n=t-e;return ui(e)?fg(e,r(0,e.length),t):xs(i,function(s){return(n+(s-e)%n)%n+e})},MT=function r(e,t,i){var n=t-e,s=n*2;return ui(e)?fg(e,r(0,e.length-1),t):xs(i,function(a){return a=(s+(a-e)%s)%s||0,e+(a>n?s-a:a)})},Va=function(e){for(var t=0,i="",n,s,a,o;~(n=e.indexOf("random(",t));)a=e.indexOf(")",n),o=e.charAt(n+7)==="[",s=e.substr(n+7,a-n-7).match(o?Zm:Kh),i+=e.substr(t,n-t)+ug(o?s:+s[0],o?0:+s[1],+s[2]||1e-5),t=a+1;return i+e.substr(t,e.length-t)},pg=function(e,t,i,n,s){var a=t-e,o=n-i;return xs(s,function(l){return i+((l-e)/a*o||0)})},ST=function r(e,t,i,n){var s=isNaN(e+t)?0:function(f){return(1-f)*e+f*t};if(!s){var a=ti(e),o={},l,c,h,d,u;if(i===!0&&(n=1)&&(i=null),a)e={p:e},t={p:t};else if(ui(e)&&!ui(t)){for(h=[],d=e.length,u=d-2,c=1;c<d;c++)h.push(r(e[c-1],e[c]));d--,s=function(m){m*=d;var v=Math.min(u,~~m);return h[v](m-v)},i=t}else n||(e=Gr(ui(e)?[]:{},e));if(!h){for(l in t)iu.call(o,e,l,"get",t[l]);s=function(m){return au(m,o)||(a?e.p:e)}}}return xs(i,s)},gp=function(e,t,i){var n=e.labels,s=Zi,a,o,l;for(a in n)o=n[a]-t,o<0==!!i&&o&&s>(o=Math.abs(o))&&(l=a,s=o);return l},Oi=function(e,t,i){var n=e.vars,s=n[t],a=Et,o=e._ctx,l,c,h;if(s)return l=n[t+"Params"],c=n.callbackScope||e,i&&us.length&&bl(),o&&(Et=o),h=l?s.apply(c,l):s.call(c),Et=a,h},xa=function(e){return gs(e),e.scrollTrigger&&e.scrollTrigger.kill(!!ai),e.progress()<1&&Oi(e,"onInterrupt"),e},gr,mg=[],gg=function(e){if(e)if(e=!e.name&&e.default||e,Zd()||e.headless){var t=e.name,i=It(e),n=t&&!i&&e.init?function(){this._props=[]}:e,s={init:Ga,render:au,add:iu,kill:FT,modifier:UT,rawVars:0},a={targetTest:0,get:0,getSetter:ru,aliases:{},register:0};if(jr(),e!==n){if(Ii[t])return;Bi(n,Bi(Ml(e,s),a)),Gr(n.prototype,Gr(s,Ml(e,a))),Ii[n.prop=t]=n,e.targetTest&&(dl.push(n),Jd[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}Jm(t,n),e.register&&e.register(Ai,n,Ei)}else mg.push(e)},mt=255,ba={aqua:[0,mt,mt],lime:[0,mt,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,mt],navy:[0,0,128],white:[mt,mt,mt],olive:[128,128,0],yellow:[mt,mt,0],orange:[mt,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[mt,0,0],pink:[mt,192,203],cyan:[0,mt,mt],transparent:[mt,mt,mt,0]},$c=function(e,t,i){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(i-t)*e*6:e<.5?i:e*3<2?t+(i-t)*(2/3-e)*6:t)*mt+.5|0},vg=function(e,t,i){var n=e?$n(e)?[e>>16,e>>8&mt,e&mt]:0:ba.black,s,a,o,l,c,h,d,u,f,m;if(!n){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),ba[e])n=ba[e];else if(e.charAt(0)==="#"){if(e.length<6&&(s=e.charAt(1),a=e.charAt(2),o=e.charAt(3),e="#"+s+s+a+a+o+o+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return n=parseInt(e.substr(1,6),16),[n>>16,n>>8&mt,n&mt,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),n=[e>>16,e>>8&mt,e&mt]}else if(e.substr(0,3)==="hsl"){if(n=m=e.match(Kh),!t)l=+n[0]%360/360,c=+n[1]/100,h=+n[2]/100,a=h<=.5?h*(c+1):h+c-h*c,s=h*2-a,n.length>3&&(n[3]*=1),n[0]=$c(l+1/3,s,a),n[1]=$c(l,s,a),n[2]=$c(l-1/3,s,a);else if(~e.indexOf("="))return n=e.match(Xm),i&&n.length<4&&(n[3]=1),n}else n=e.match(Kh)||ba.transparent;n=n.map(Number)}return t&&!m&&(s=n[0]/mt,a=n[1]/mt,o=n[2]/mt,d=Math.max(s,a,o),u=Math.min(s,a,o),h=(d+u)/2,d===u?l=c=0:(f=d-u,c=h>.5?f/(2-d-u):f/(d+u),l=d===s?(a-o)/f+(a<o?6:0):d===a?(o-s)/f+2:(s-a)/f+4,l*=60),n[0]=~~(l+.5),n[1]=~~(c*100+.5),n[2]=~~(h*100+.5)),i&&n.length<4&&(n[3]=1),n},yg=function(e){var t=[],i=[],n=-1;return e.split(fs).forEach(function(s){var a=s.match(mr)||[];t.push.apply(t,a),i.push(n+=a.length+1)}),t.c=i,t},vp=function(e,t,i){var n="",s=(e+n).match(fs),a=t?"hsla(":"rgba(",o=0,l,c,h,d;if(!s)return e;if(s=s.map(function(u){return(u=vg(u,t,1))&&a+(t?u[0]+","+u[1]+"%,"+u[2]+"%,"+u[3]:u.join(","))+")"}),i&&(h=yg(e),l=i.c,l.join(n)!==h.c.join(n)))for(c=e.replace(fs,"1").split(mr),d=c.length-1;o<d;o++)n+=c[o]+(~l.indexOf(o)?s.shift()||a+"0,0,0,0)":(h.length?h:s.length?s:i).shift());if(!c)for(c=e.split(fs),d=c.length-1;o<d;o++)n+=c[o]+s[o];return n+c[d]},fs=function(){var r="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in ba)r+="|"+e+"\\b";return new RegExp(r+")","gi")}(),wT=/hsl[a]?\(/,_g=function(e){var t=e.join(" "),i;if(fs.lastIndex=0,fs.test(t))return i=wT.test(t),e[1]=vp(e[1],i),e[0]=vp(e[0],i,yg(e[1])),!0},Wa,ki=function(){var r=Date.now,e=500,t=33,i=r(),n=i,s=1e3/240,a=s,o=[],l,c,h,d,u,f,m=function v(g){var p=r()-n,x=g===!0,_,y,w,C;if((p>e||p<0)&&(i+=p-t),n+=p,w=n-i,_=w-a,(_>0||x)&&(C=++d.frame,u=w-d.time*1e3,d.time=w=w/1e3,a+=_+(_>=s?4:s-_),y=1),x||(l=c(v)),y)for(f=0;f<o.length;f++)o[f](w,u,C,g)};return d={time:0,frame:0,tick:function(){m(!0)},deltaRatio:function(g){return u/(1e3/(g||60))},wake:function(){Ym&&(!Jh&&Zd()&&(_n=Jh=window,Yd=_n.document||{},Fi.gsap=Ai,(_n.gsapVersions||(_n.gsapVersions=[])).push(Ai.version),Km(xl||_n.GreenSockGlobals||!_n.gsap&&_n||{}),mg.forEach(gg)),h=typeof requestAnimationFrame<"u"&&requestAnimationFrame,l&&d.sleep(),c=h||function(g){return setTimeout(g,a-d.time*1e3+1|0)},Wa=1,m(2))},sleep:function(){(h?cancelAnimationFrame:clearTimeout)(l),Wa=0,c=Ga},lagSmoothing:function(g,p){e=g||1/0,t=Math.min(p||33,e)},fps:function(g){s=1e3/(g||240),a=d.time*1e3+s},add:function(g,p,x){var _=p?function(y,w,C,A){g(y,w,C,A),d.remove(_)}:g;return d.remove(g),o[x?"unshift":"push"](_),jr(),_},remove:function(g,p){~(p=o.indexOf(g))&&o.splice(p,1)&&f>=p&&f--},_listeners:o},d}(),jr=function(){return!Wa&&ki.wake()},it={},ET=/^[\d.\-M][\d.\-,\s]/,TT=/["']/g,CT=function(e){for(var t={},i=e.substr(1,e.length-3).split(":"),n=i[0],s=1,a=i.length,o,l,c;s<a;s++)l=i[s],o=s!==a-1?l.lastIndexOf(","):l.length,c=l.substr(0,o),t[n]=isNaN(c)?c.replace(TT,"").trim():+c,n=l.substr(o+1).trim();return t},AT=function(e){var t=e.indexOf("(")+1,i=e.indexOf(")"),n=e.indexOf("(",t);return e.substring(t,~n&&n<i?e.indexOf(")",i+1):i)},PT=function(e){var t=(e+"").split("("),i=it[t[0]];return i&&t.length>1&&i.config?i.config.apply(null,~e.indexOf("{")?[CT(t[1])]:AT(e).split(",").map(ig)):it._CE&&ET.test(e)?it._CE("",e):i},xg=function(e){return function(t){return 1-e(1-t)}},bg=function r(e,t){for(var i=e._first,n;i;)i instanceof gi?r(i,t):i.vars.yoyoEase&&(!i._yoyo||!i._repeat)&&i._yoyo!==t&&(i.timeline?r(i.timeline,t):(n=i._ease,i._ease=i._yEase,i._yEase=n,i._yoyo=t)),i=i._next},Gs=function(e,t){return e&&(It(e)?e:it[e]||PT(e))||t},qs=function(e,t,i,n){i===void 0&&(i=function(l){return 1-t(1-l)}),n===void 0&&(n=function(l){return l<.5?t(l*2)/2:1-t((1-l)*2)/2});var s={easeIn:t,easeOut:i,easeInOut:n},a;return wi(e,function(o){it[o]=Fi[o]=s,it[a=o.toLowerCase()]=i;for(var l in s)it[a+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=it[o+"."+l]=s[l]}),s},Mg=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},Xc=function r(e,t,i){var n=t>=1?t:1,s=(i||(e?.3:.45))/(t<1?t:1),a=s/Yh*(Math.asin(1/n)||0),o=function(h){return h===1?1:n*Math.pow(2,-10*h)*nT((h-a)*s)+1},l=e==="out"?o:e==="in"?function(c){return 1-o(1-c)}:Mg(o);return s=Yh/s,l.config=function(c,h){return r(e,c,h)},l},qc=function r(e,t){t===void 0&&(t=1.70158);var i=function(a){return a?--a*a*((t+1)*a+t)+1:0},n=e==="out"?i:e==="in"?function(s){return 1-i(1-s)}:Mg(i);return n.config=function(s){return r(e,s)},n};wi("Linear,Quad,Cubic,Quart,Quint,Strong",function(r,e){var t=e<5?e+1:e;qs(r+",Power"+(t-1),e?function(i){return Math.pow(i,t)}:function(i){return i},function(i){return 1-Math.pow(1-i,t)},function(i){return i<.5?Math.pow(i*2,t)/2:1-Math.pow((1-i)*2,t)/2})});it.Linear.easeNone=it.none=it.Linear.easeIn;qs("Elastic",Xc("in"),Xc("out"),Xc());(function(r,e){var t=1/e,i=2*t,n=2.5*t,s=function(o){return o<t?r*o*o:o<i?r*Math.pow(o-1.5/e,2)+.75:o<n?r*(o-=2.25/e)*o+.9375:r*Math.pow(o-2.625/e,2)+.984375};qs("Bounce",function(a){return 1-s(1-a)},s)})(7.5625,2.75);qs("Expo",function(r){return Math.pow(2,10*(r-1))*r+r*r*r*r*r*r*(1-r)});qs("Circ",function(r){return-(jm(1-r*r)-1)});qs("Sine",function(r){return r===1?1:-iT(r*eT)+1});qs("Back",qc("in"),qc("out"),qc());it.SteppedEase=it.steps=Fi.SteppedEase={config:function(e,t){e===void 0&&(e=1);var i=1/e,n=e+(t?0:1),s=t?1:0,a=1-vt;return function(o){return((n*fo(0,a,o)|0)+s)*i}}};Hr.ease=it["quad.out"];wi("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(r){return Qd+=r+","+r+"Params,"});var Sg=function(e,t){this.id=tT++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:eg,this.set=t?t.getSetter:ru},ja=function(){function r(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,Wr(this,+t.duration,1,1),this.data=t.data,Et&&(this._ctx=Et,Et.data.push(this)),Wa||ki.wake()}var e=r.prototype;return e.delay=function(i){return i||i===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+i-this._delay),this._delay=i,this):this._delay},e.duration=function(i){return arguments.length?this.totalDuration(this._repeat>0?i+(i+this._rDelay)*this._repeat:i):this.totalDuration()&&this._dur},e.totalDuration=function(i){return arguments.length?(this._dirty=0,Wr(this,this._repeat<0?i:(i-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(i,n){if(jr(),!arguments.length)return this._tTime;var s=this._dp;if(s&&s.smoothChildTiming&&this._ts){for($l(this,i),!s._dp||s.parent||rg(s,this);s&&s.parent;)s.parent._time!==s._start+(s._ts>=0?s._tTime/s._ts:(s.totalDuration()-s._tTime)/-s._ts)&&s.totalTime(s._tTime,!0),s=s.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&i<this._tDur||this._ts<0&&i>0||!this._tDur&&!i)&&Mn(this._dp,this,this._start-this._delay)}return(this._tTime!==i||!this._dur&&!n||this._initted&&Math.abs(this._zTime)===vt||!i&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=i),tg(this,i,n)),this},e.time=function(i,n){return arguments.length?this.totalTime(Math.min(this.totalDuration(),i+pp(this))%(this._dur+this._rDelay)||(i?this._dur:0),n):this._time},e.totalProgress=function(i,n){return arguments.length?this.totalTime(this.totalDuration()*i,n):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.rawTime()>=0&&this._initted?1:0},e.progress=function(i,n){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-i:i)+pp(this),n):this.duration()?Math.min(1,this._time/this._dur):this.rawTime()>0?1:0},e.iteration=function(i,n){var s=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(i-1)*s,n):this._repeat?Vr(this._tTime,s)+1:1},e.timeScale=function(i,n){if(!arguments.length)return this._rts===-vt?0:this._rts;if(this._rts===i)return this;var s=this.parent&&this._ts?Sl(this.parent._time,this):this._tTime;return this._rts=+i||0,this._ts=this._ps||i===-vt?0:this._rts,this.totalTime(fo(-Math.abs(this._delay),this.totalDuration(),s),n!==!1),jl(this),hT(this)},e.paused=function(i){return arguments.length?(this._ps!==i&&(this._ps=i,i?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(jr(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==vt&&(this._tTime-=vt)))),this):this._ps},e.startTime=function(i){if(arguments.length){this._start=i;var n=this.parent||this._dp;return n&&(n._sort||!this.parent)&&Mn(n,this,i-this._delay),this}return this._start},e.endTime=function(i){return this._start+(Si(i)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(i){var n=this.parent||this._dp;return n?i&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Sl(n.rawTime(i),this):this._tTime:this._tTime},e.revert=function(i){i===void 0&&(i=aT);var n=ai;return ai=i,tu(this)&&(this.timeline&&this.timeline.revert(i),this.totalTime(-.01,i.suppressEvents)),this.data!=="nested"&&i.kill!==!1&&this.kill(),ai=n,this},e.globalTime=function(i){for(var n=this,s=arguments.length?i:n.rawTime();n;)s=n._start+s/(Math.abs(n._ts)||1),n=n._dp;return!this.parent&&this._sat?this._sat.globalTime(i):s},e.repeat=function(i){return arguments.length?(this._repeat=i===1/0?-2:i,mp(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(i){if(arguments.length){var n=this._time;return this._rDelay=i,mp(this),n?this.time(n):this}return this._rDelay},e.yoyo=function(i){return arguments.length?(this._yoyo=i,this):this._yoyo},e.seek=function(i,n){return this.totalTime(Wi(this,i),Si(n))},e.restart=function(i,n){return this.play().totalTime(i?-this._delay:0,Si(n)),this._dur||(this._zTime=-vt),this},e.play=function(i,n){return i!=null&&this.seek(i,n),this.reversed(!1).paused(!1)},e.reverse=function(i,n){return i!=null&&this.seek(i||this.totalDuration(),n),this.reversed(!0).paused(!1)},e.pause=function(i,n){return i!=null&&this.seek(i,n),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(i){return arguments.length?(!!i!==this.reversed()&&this.timeScale(-this._rts||(i?-vt:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-vt,this},e.isActive=function(){var i=this.parent||this._dp,n=this._start,s;return!!(!i||this._ts&&this._initted&&i.isActive()&&(s=i.rawTime(!0))>=n&&s<this.endTime(!0)-vt)},e.eventCallback=function(i,n,s){var a=this.vars;return arguments.length>1?(n?(a[i]=n,s&&(a[i+"Params"]=s),i==="onUpdate"&&(this._onUpdate=n)):delete a[i],this):a[i]},e.then=function(i){var n=this;return new Promise(function(s){var a=It(i)?i:ng,o=function(){var c=n.then;n.then=null,It(a)&&(a=a(n))&&(a.then||a===n)&&(n.then=c),s(a),n.then=c};n._initted&&n.totalProgress()===1&&n._ts>=0||!n._tTime&&n._ts<0?o():n._prom=o})},e.kill=function(){xa(this)},r}();Bi(ja.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-vt,_prom:0,_ps:!1,_rts:1});var gi=function(r){Wm(e,r);function e(i,n){var s;return i===void 0&&(i={}),s=r.call(this,i)||this,s.labels={},s.smoothChildTiming=!!i.smoothChildTiming,s.autoRemoveChildren=!!i.autoRemoveChildren,s._sort=Si(i.sortChildren),Lt&&Mn(i.parent||Lt,Un(s),n),i.reversed&&s.reverse(),i.paused&&s.paused(!0),i.scrollTrigger&&ag(Un(s),i.scrollTrigger),s}var t=e.prototype;return t.to=function(n,s,a){return Aa(0,arguments,this),this},t.from=function(n,s,a){return Aa(1,arguments,this),this},t.fromTo=function(n,s,a,o){return Aa(2,arguments,this),this},t.set=function(n,s,a){return s.duration=0,s.parent=this,Ca(s).repeatDelay||(s.repeat=0),s.immediateRender=!!s.immediateRender,new Wt(n,s,Wi(this,a),1),this},t.call=function(n,s,a){return Mn(this,Wt.delayedCall(0,n,s),a)},t.staggerTo=function(n,s,a,o,l,c,h){return a.duration=s,a.stagger=a.stagger||o,a.onComplete=c,a.onCompleteParams=h,a.parent=this,new Wt(n,a,Wi(this,l)),this},t.staggerFrom=function(n,s,a,o,l,c,h){return a.runBackwards=1,Ca(a).immediateRender=Si(a.immediateRender),this.staggerTo(n,s,a,o,l,c,h)},t.staggerFromTo=function(n,s,a,o,l,c,h,d){return o.startAt=a,Ca(o).immediateRender=Si(o.immediateRender),this.staggerTo(n,s,o,l,c,h,d)},t.render=function(n,s,a){var o=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,h=n<=0?0:jt(n),d=this._zTime<0!=n<0&&(this._initted||!c),u,f,m,v,g,p,x,_,y,w,C,A;if(this!==Lt&&h>l&&n>=0&&(h=l),h!==this._tTime||a||d){if(o!==this._time&&c&&(h+=this._time-o,n+=this._time-o),u=h,y=this._start,_=this._ts,p=!_,d&&(c||(o=this._zTime),(n||!s)&&(this._zTime=n)),this._repeat){if(C=this._yoyo,g=c+this._rDelay,this._repeat<-1&&n<0)return this.totalTime(g*100+n,s,a);if(u=jt(h%g),h===l?(v=this._repeat,u=c):(w=jt(h/g),v=~~w,v&&v===w&&(u=c,v--),u>c&&(u=c)),w=Vr(this._tTime,g),!o&&this._tTime&&w!==v&&this._tTime-w*g-this._dur<=0&&(w=v),C&&v&1&&(u=c-u,A=1),v!==w&&!this._lock){var L=C&&w&1,b=L===(C&&v&1);if(v<w&&(L=!L),o=L?0:h%c?c:h,this._lock=1,this.render(o||(A?0:jt(v*g)),s,!c)._lock=0,this._tTime=h,!s&&this.parent&&Oi(this,"onRepeat"),this.vars.repeatRefresh&&!A&&(this.invalidate()._lock=1),o&&o!==this._time||p!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,b&&(this._lock=2,o=L?c:-1e-4,this.render(o,!0),this.vars.repeatRefresh&&!A&&this.invalidate()),this._lock=0,!this._ts&&!p)return this;bg(this,A)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(x=pT(this,jt(o),jt(u)),x&&(h-=u-(u=x._start))),this._tTime=h,this._time=u,this._act=!_,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=n,o=0),!o&&h&&!s&&!w&&(Oi(this,"onStart"),this._tTime!==h))return this;if(u>=o&&n>=0)for(f=this._first;f;){if(m=f._next,(f._act||u>=f._start)&&f._ts&&x!==f){if(f.parent!==this)return this.render(n,s,a);if(f.render(f._ts>0?(u-f._start)*f._ts:(f._dirty?f.totalDuration():f._tDur)+(u-f._start)*f._ts,s,a),u!==this._time||!this._ts&&!p){x=0,m&&(h+=this._zTime=-vt);break}}f=m}else{f=this._last;for(var S=n<0?n:u;f;){if(m=f._prev,(f._act||S<=f._end)&&f._ts&&x!==f){if(f.parent!==this)return this.render(n,s,a);if(f.render(f._ts>0?(S-f._start)*f._ts:(f._dirty?f.totalDuration():f._tDur)+(S-f._start)*f._ts,s,a||ai&&tu(f)),u!==this._time||!this._ts&&!p){x=0,m&&(h+=this._zTime=S?-vt:vt);break}}f=m}}if(x&&!s&&(this.pause(),x.render(u>=o?0:-vt)._zTime=u>=o?1:-1,this._ts))return this._start=y,jl(this),this.render(n,s,a);this._onUpdate&&!s&&Oi(this,"onUpdate",!0),(h===l&&this._tTime>=this.totalDuration()||!h&&o)&&(y===this._start||Math.abs(_)!==Math.abs(this._ts))&&(this._lock||((n||!c)&&(h===l&&this._ts>0||!h&&this._ts<0)&&gs(this,1),!s&&!(n<0&&!o)&&(h||o||!l)&&(Oi(this,h===l&&n>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(h<l&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(n,s){var a=this;if($n(s)||(s=Wi(this,s,n)),!(n instanceof ja)){if(ui(n))return n.forEach(function(o){return a.add(o,s)}),this;if(ti(n))return this.addLabel(n,s);if(It(n))n=Wt.delayedCall(0,n);else return this}return this!==n?Mn(this,n,s):this},t.getChildren=function(n,s,a,o){n===void 0&&(n=!0),s===void 0&&(s=!0),a===void 0&&(a=!0),o===void 0&&(o=-Zi);for(var l=[],c=this._first;c;)c._start>=o&&(c instanceof Wt?s&&l.push(c):(a&&l.push(c),n&&l.push.apply(l,c.getChildren(!0,s,a)))),c=c._next;return l},t.getById=function(n){for(var s=this.getChildren(1,1,1),a=s.length;a--;)if(s[a].vars.id===n)return s[a]},t.remove=function(n){return ti(n)?this.removeLabel(n):It(n)?this.killTweensOf(n):(n.parent===this&&Wl(this,n),n===this._recent&&(this._recent=this._last),Hs(this))},t.totalTime=function(n,s){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=jt(ki.time-(this._ts>0?n/this._ts:(this.totalDuration()-n)/-this._ts))),r.prototype.totalTime.call(this,n,s),this._forcing=0,this):this._tTime},t.addLabel=function(n,s){return this.labels[n]=Wi(this,s),this},t.removeLabel=function(n){return delete this.labels[n],this},t.addPause=function(n,s,a){var o=Wt.delayedCall(0,s||Ga,a);return o.data="isPause",this._hasPause=1,Mn(this,o,Wi(this,n))},t.removePause=function(n){var s=this._first;for(n=Wi(this,n);s;)s._start===n&&s.data==="isPause"&&gs(s),s=s._next},t.killTweensOf=function(n,s,a){for(var o=this.getTweensOf(n,a),l=o.length;l--;)os!==o[l]&&o[l].kill(n,s);return this},t.getTweensOf=function(n,s){for(var a=[],o=Yi(n),l=this._first,c=$n(s),h;l;)l instanceof Wt?oT(l._targets,o)&&(c?(!os||l._initted&&l._ts)&&l.globalTime(0)<=s&&l.globalTime(l.totalDuration())>s:!s||l.isActive())&&a.push(l):(h=l.getTweensOf(o,s)).length&&a.push.apply(a,h),l=l._next;return a},t.tweenTo=function(n,s){s=s||{};var a=this,o=Wi(a,n),l=s,c=l.startAt,h=l.onStart,d=l.onStartParams,u=l.immediateRender,f,m=Wt.to(a,Bi({ease:s.ease||"none",lazy:!1,immediateRender:!1,time:o,overwrite:"auto",duration:s.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale())||vt,onStart:function(){if(a.pause(),!f){var g=s.duration||Math.abs((o-(c&&"time"in c?c.time:a._time))/a.timeScale());m._dur!==g&&Wr(m,g,0,1).render(m._time,!0,!0),f=1}h&&h.apply(m,d||[])}},s));return u?m.render(0):m},t.tweenFromTo=function(n,s,a){return this.tweenTo(s,Bi({startAt:{time:Wi(this,n)}},a))},t.recent=function(){return this._recent},t.nextLabel=function(n){return n===void 0&&(n=this._time),gp(this,Wi(this,n))},t.previousLabel=function(n){return n===void 0&&(n=this._time),gp(this,Wi(this,n),1)},t.currentLabel=function(n){return arguments.length?this.seek(n,!0):this.previousLabel(this._time+vt)},t.shiftChildren=function(n,s,a){a===void 0&&(a=0);for(var o=this._first,l=this.labels,c;o;)o._start>=a&&(o._start+=n,o._end+=n),o=o._next;if(s)for(c in l)l[c]>=a&&(l[c]+=n);return Hs(this)},t.invalidate=function(n){var s=this._first;for(this._lock=0;s;)s.invalidate(n),s=s._next;return r.prototype.invalidate.call(this,n)},t.clear=function(n){n===void 0&&(n=!0);for(var s=this._first,a;s;)a=s._next,this.remove(s),s=a;return this._dp&&(this._time=this._tTime=this._pTime=0),n&&(this.labels={}),Hs(this)},t.totalDuration=function(n){var s=0,a=this,o=a._last,l=Zi,c,h,d;if(arguments.length)return a.timeScale((a._repeat<0?a.duration():a.totalDuration())/(a.reversed()?-n:n));if(a._dirty){for(d=a.parent;o;)c=o._prev,o._dirty&&o.totalDuration(),h=o._start,h>l&&a._sort&&o._ts&&!a._lock?(a._lock=1,Mn(a,o,h-o._delay,1)._lock=0):l=h,h<0&&o._ts&&(s-=h,(!d&&!a._dp||d&&d.smoothChildTiming)&&(a._start+=h/a._ts,a._time-=h,a._tTime-=h),a.shiftChildren(-h,!1,-1/0),l=0),o._end>s&&o._ts&&(s=o._end),o=c;Wr(a,a===Lt&&a._time>s?a._time:s,1,1),a._dirty=0}return a._tDur},e.updateRoot=function(n){if(Lt._ts&&(tg(Lt,Sl(n,Lt)),Qm=ki.frame),ki.frame>=up){up+=zi.autoSleep||120;var s=Lt._first;if((!s||!s._ts)&&zi.autoSleep&&ki._listeners.length<2){for(;s&&!s._ts;)s=s._next;s||ki.sleep()}}},e}(ja);Bi(gi.prototype,{_lock:0,_hasPause:0,_forcing:0});var LT=function(e,t,i,n,s,a,o){var l=new Ei(this._pt,e,t,0,1,Pg,null,s),c=0,h=0,d,u,f,m,v,g,p,x;for(l.b=i,l.e=n,i+="",n+="",(p=~n.indexOf("random("))&&(n=Va(n)),a&&(x=[i,n],a(x,e,t),i=x[0],n=x[1]),u=i.match(Wc)||[];d=Wc.exec(n);)m=d[0],v=n.substring(c,d.index),f?f=(f+1)%5:v.substr(-5)==="rgba("&&(f=1),m!==u[h++]&&(g=parseFloat(u[h-1])||0,l._pt={_next:l._pt,p:v||h===1?v:",",s:g,c:m.charAt(1)==="="?br(g,m)-g:parseFloat(m)-g,m:f&&f<4?Math.round:0},c=Wc.lastIndex);return l.c=c<n.length?n.substring(c,n.length):"",l.fp=o,(qm.test(n)||p)&&(l.e=0),this._pt=l,l},iu=function(e,t,i,n,s,a,o,l,c,h){It(n)&&(n=n(s||0,e,a));var d=e[t],u=i!=="get"?i:It(d)?c?e[t.indexOf("set")||!It(e["get"+t.substr(3)])?t:"get"+t.substr(3)](c):e[t]():d,f=It(d)?c?kT:Cg:su,m;if(ti(n)&&(~n.indexOf("random(")&&(n=Va(n)),n.charAt(1)==="="&&(m=br(u,n)+(hi(u)||0),(m||m===0)&&(n=m))),!h||u!==n||rd)return!isNaN(u*n)&&n!==""?(m=new Ei(this._pt,e,t,+u||0,n-(u||0),typeof d=="boolean"?zT:Ag,0,f),c&&(m.fp=c),o&&m.modifier(o,this,e),this._pt=m):(!d&&!(t in e)&&Kd(t,n),LT.call(this,e,t,u,n,f,l||zi.stringFilter,c))},RT=function(e,t,i,n,s){if(It(e)&&(e=Pa(e,s,t,i,n)),!Tn(e)||e.style&&e.nodeType||ui(e)||$m(e))return ti(e)?Pa(e,s,t,i,n):e;var a={},o;for(o in e)a[o]=Pa(e[o],s,t,i,n);return a},wg=function(e,t,i,n,s,a){var o,l,c,h;if(Ii[e]&&(o=new Ii[e]).init(s,o.rawVars?t[e]:RT(t[e],n,s,a,i),i,n,a)!==!1&&(i._pt=l=new Ei(i._pt,s,e,0,1,o.render,o,0,o.priority),i!==gr))for(c=i._ptLookup[i._targets.indexOf(s)],h=o._props.length;h--;)c[o._props[h]]=l;return o},os,rd,nu=function r(e,t,i){var n=e.vars,s=n.ease,a=n.startAt,o=n.immediateRender,l=n.lazy,c=n.onUpdate,h=n.runBackwards,d=n.yoyoEase,u=n.keyframes,f=n.autoRevert,m=e._dur,v=e._startAt,g=e._targets,p=e.parent,x=p&&p.data==="nested"?p.vars.targets:g,_=e._overwrite==="auto"&&!Xd,y=e.timeline,w,C,A,L,b,S,N,O,k,H,j,B,K;if(y&&(!u||!s)&&(s="none"),e._ease=Gs(s,Hr.ease),e._yEase=d?xg(Gs(d===!0?s:d,Hr.ease)):0,d&&e._yoyo&&!e._repeat&&(d=e._yEase,e._yEase=e._ease,e._ease=d),e._from=!y&&!!n.runBackwards,!y||u&&!n.stagger){if(O=g[0]?Bs(g[0]).harness:0,B=O&&n[O.prop],w=Ml(n,Jd),v&&(v._zTime<0&&v.progress(1),t<0&&h&&o&&!f?v.render(-1,!0):v.revert(h&&m?hl:rT),v._lazy=0),a){if(gs(e._startAt=Wt.set(g,Bi({data:"isStart",overwrite:!1,parent:p,immediateRender:!0,lazy:!v&&Si(l),startAt:null,delay:0,onUpdate:c&&function(){return Oi(e,"onUpdate")},stagger:0},a))),e._startAt._dp=0,e._startAt._sat=e,t<0&&(ai||!o&&!f)&&e._startAt.revert(hl),o&&m&&t<=0&&i<=0){t&&(e._zTime=t);return}}else if(h&&m&&!v){if(t&&(o=!1),A=Bi({overwrite:!1,data:"isFromStart",lazy:o&&!v&&Si(l),immediateRender:o,stagger:0,parent:p},w),B&&(A[O.prop]=B),gs(e._startAt=Wt.set(g,A)),e._startAt._dp=0,e._startAt._sat=e,t<0&&(ai?e._startAt.revert(hl):e._startAt.render(-1,!0)),e._zTime=t,!o)r(e._startAt,vt,vt);else if(!t)return}for(e._pt=e._ptCache=0,l=m&&Si(l)||l&&!m,C=0;C<g.length;C++){if(b=g[C],N=b._gsap||eu(g)[C]._gsap,e._ptLookup[C]=H={},Qh[N.id]&&us.length&&bl(),j=x===g?C:x.indexOf(b),O&&(k=new O).init(b,B||w,e,j,x)!==!1&&(e._pt=L=new Ei(e._pt,b,k.name,0,1,k.render,k,0,k.priority),k._props.forEach(function(W){H[W]=L}),k.priority&&(S=1)),!O||B)for(A in w)Ii[A]&&(k=wg(A,w,e,j,b,x))?k.priority&&(S=1):H[A]=L=iu.call(e,b,A,"get",w[A],j,x,0,n.stringFilter);e._op&&e._op[C]&&e.kill(b,e._op[C]),_&&e._pt&&(os=e,Lt.killTweensOf(b,H,e.globalTime(t)),K=!e.parent,os=0),e._pt&&l&&(Qh[N.id]=1)}S&&Lg(e),e._onInit&&e._onInit(e)}e._onUpdate=c,e._initted=(!e._op||e._pt)&&!K,u&&t<=0&&y.render(Zi,!0,!0)},DT=function(e,t,i,n,s,a,o,l){var c=(e._pt&&e._ptCache||(e._ptCache={}))[t],h,d,u,f;if(!c)for(c=e._ptCache[t]=[],u=e._ptLookup,f=e._targets.length;f--;){if(h=u[f][t],h&&h.d&&h.d._pt)for(h=h.d._pt;h&&h.p!==t&&h.fp!==t;)h=h._next;if(!h)return rd=1,e.vars[t]="+=0",nu(e,o),rd=0,l?Ha(t+" not eligible for reset"):1;c.push(h)}for(f=c.length;f--;)d=c[f],h=d._pt||d,h.s=(n||n===0)&&!s?n:h.s+(n||0)+a*h.c,h.c=i-h.s,d.e&&(d.e=Ft(i)+hi(d.e)),d.b&&(d.b=h.s+hi(d.b))},NT=function(e,t){var i=e[0]?Bs(e[0]).harness:0,n=i&&i.aliases,s,a,o,l;if(!n)return t;s=Gr({},t);for(a in n)if(a in s)for(l=n[a].split(","),o=l.length;o--;)s[l[o]]=s[a];return s},IT=function(e,t,i,n){var s=t.ease||n||"power1.inOut",a,o;if(ui(t))o=i[e]||(i[e]=[]),t.forEach(function(l,c){return o.push({t:c/(t.length-1)*100,v:l,e:s})});else for(a in t)o=i[a]||(i[a]=[]),a==="ease"||o.push({t:parseFloat(e),v:t[a],e:s})},Pa=function(e,t,i,n,s){return It(e)?e.call(t,i,n,s):ti(e)&&~e.indexOf("random(")?Va(e):e},Eg=Qd+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",Tg={};wi(Eg+",id,stagger,delay,duration,paused,scrollTrigger",function(r){return Tg[r]=1});var Wt=function(r){Wm(e,r);function e(i,n,s,a){var o;typeof n=="number"&&(s.duration=n,n=s,s=null),o=r.call(this,a?n:Ca(n))||this;var l=o.vars,c=l.duration,h=l.delay,d=l.immediateRender,u=l.stagger,f=l.overwrite,m=l.keyframes,v=l.defaults,g=l.scrollTrigger,p=l.yoyoEase,x=n.parent||Lt,_=(ui(i)||$m(i)?$n(i[0]):"length"in n)?[i]:Yi(i),y,w,C,A,L,b,S,N;if(o._targets=_.length?eu(_):Ha("GSAP target "+i+" not found. https://gsap.com",!zi.nullTargetWarn)||[],o._ptLookup=[],o._overwrite=f,m||u||el(c)||el(h)){if(n=o.vars,y=o.timeline=new gi({data:"nested",defaults:v||{},targets:x&&x.data==="nested"?x.vars.targets:_}),y.kill(),y.parent=y._dp=Un(o),y._start=0,u||el(c)||el(h)){if(A=_.length,S=u&&hg(u),Tn(u))for(L in u)~Eg.indexOf(L)&&(N||(N={}),N[L]=u[L]);for(w=0;w<A;w++)C=Ml(n,Tg),C.stagger=0,p&&(C.yoyoEase=p),N&&Gr(C,N),b=_[w],C.duration=+Pa(c,Un(o),w,b,_),C.delay=(+Pa(h,Un(o),w,b,_)||0)-o._delay,!u&&A===1&&C.delay&&(o._delay=h=C.delay,o._start+=h,C.delay=0),y.to(b,C,S?S(w,b,_):0),y._ease=it.none;y.duration()?c=h=0:o.timeline=0}else if(m){Ca(Bi(y.vars.defaults,{ease:"none"})),y._ease=Gs(m.ease||n.ease||"none");var O=0,k,H,j;if(ui(m))m.forEach(function(B){return y.to(_,B,">")}),y.duration();else{C={};for(L in m)L==="ease"||L==="easeEach"||IT(L,m[L],C,m.easeEach);for(L in C)for(k=C[L].sort(function(B,K){return B.t-K.t}),O=0,w=0;w<k.length;w++)H=k[w],j={ease:H.e,duration:(H.t-(w?k[w-1].t:0))/100*c},j[L]=H.v,y.to(_,j,O),O+=j.duration;y.duration()<c&&y.to({},{duration:c-y.duration()})}}c||o.duration(c=y.duration())}else o.timeline=0;return f===!0&&!Xd&&(os=Un(o),Lt.killTweensOf(_),os=0),Mn(x,Un(o),s),n.reversed&&o.reverse(),n.paused&&o.paused(!0),(d||!c&&!m&&o._start===jt(x._time)&&Si(d)&&dT(Un(o))&&x.data!=="nested")&&(o._tTime=-vt,o.render(Math.max(0,-h)||0)),g&&ag(Un(o),g),o}var t=e.prototype;return t.render=function(n,s,a){var o=this._time,l=this._tDur,c=this._dur,h=n<0,d=n>l-vt&&!h?l:n<vt?0:n,u,f,m,v,g,p,x,_,y;if(!c)fT(this,n,s,a);else if(d!==this._tTime||!n||a||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==h||this._lazy){if(u=d,_=this.timeline,this._repeat){if(v=c+this._rDelay,this._repeat<-1&&h)return this.totalTime(v*100+n,s,a);if(u=jt(d%v),d===l?(m=this._repeat,u=c):(g=jt(d/v),m=~~g,m&&m===g?(u=c,m--):u>c&&(u=c)),p=this._yoyo&&m&1,p&&(y=this._yEase,u=c-u),g=Vr(this._tTime,v),u===o&&!a&&this._initted&&m===g)return this._tTime=d,this;m!==g&&(_&&this._yEase&&bg(_,p),this.vars.repeatRefresh&&!p&&!this._lock&&u!==v&&this._initted&&(this._lock=a=1,this.render(jt(v*m),!0).invalidate()._lock=0))}if(!this._initted){if(og(this,h?n:u,a,s,d))return this._tTime=0,this;if(o!==this._time&&!(a&&this.vars.repeatRefresh&&m!==g))return this;if(c!==this._dur)return this.render(n,s,a)}if(this._tTime=d,this._time=u,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=x=(y||this._ease)(u/c),this._from&&(this.ratio=x=1-x),!o&&d&&!s&&!g&&(Oi(this,"onStart"),this._tTime!==d))return this;for(f=this._pt;f;)f.r(x,f.d),f=f._next;_&&_.render(n<0?n:_._dur*_._ease(u/this._dur),s,a)||this._startAt&&(this._zTime=n),this._onUpdate&&!s&&(h&&ed(this,n,s,a),Oi(this,"onUpdate")),this._repeat&&m!==g&&this.vars.onRepeat&&!s&&this.parent&&Oi(this,"onRepeat"),(d===this._tDur||!d)&&this._tTime===d&&(h&&!this._onUpdate&&ed(this,n,!0,!0),(n||!c)&&(d===this._tDur&&this._ts>0||!d&&this._ts<0)&&gs(this,1),!s&&!(h&&!o)&&(d||o||p)&&(Oi(this,d===l?"onComplete":"onReverseComplete",!0),this._prom&&!(d<l&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(n){return(!n||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(n),r.prototype.invalidate.call(this,n)},t.resetTo=function(n,s,a,o,l){Wa||ki.wake(),this._ts||this.play();var c=Math.min(this._dur,(this._dp._time-this._start)*this._ts),h;return this._initted||nu(this,c),h=this._ease(c/this._dur),DT(this,n,s,a,o,h,c,l)?this.resetTo(n,s,a,o,1):($l(this,0),this.parent||sg(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(n,s){if(s===void 0&&(s="all"),!n&&(!s||s==="all"))return this._lazy=this._pt=0,this.parent?xa(this):this.scrollTrigger&&this.scrollTrigger.kill(!!ai),this;if(this.timeline){var a=this.timeline.totalDuration();return this.timeline.killTweensOf(n,s,os&&os.vars.overwrite!==!0)._first||xa(this),this.parent&&a!==this.timeline.totalDuration()&&Wr(this,this._dur*this.timeline._tDur/a,0,1),this}var o=this._targets,l=n?Yi(n):o,c=this._ptLookup,h=this._pt,d,u,f,m,v,g,p;if((!s||s==="all")&&cT(o,l))return s==="all"&&(this._pt=0),xa(this);for(d=this._op=this._op||[],s!=="all"&&(ti(s)&&(v={},wi(s,function(x){return v[x]=1}),s=v),s=NT(o,s)),p=o.length;p--;)if(~l.indexOf(o[p])){u=c[p],s==="all"?(d[p]=s,m=u,f={}):(f=d[p]=d[p]||{},m=s);for(v in m)g=u&&u[v],g&&((!("kill"in g.d)||g.d.kill(v)===!0)&&Wl(this,g,"_pt"),delete u[v]),f!=="all"&&(f[v]=1)}return this._initted&&!this._pt&&h&&xa(this),this},e.to=function(n,s){return new e(n,s,arguments[2])},e.from=function(n,s){return Aa(1,arguments)},e.delayedCall=function(n,s,a,o){return new e(s,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:n,onComplete:s,onReverseComplete:s,onCompleteParams:a,onReverseCompleteParams:a,callbackScope:o})},e.fromTo=function(n,s,a){return Aa(2,arguments)},e.set=function(n,s){return s.duration=0,s.repeatDelay||(s.repeat=0),new e(n,s)},e.killTweensOf=function(n,s,a){return Lt.killTweensOf(n,s,a)},e}(ja);Bi(Wt.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});wi("staggerTo,staggerFrom,staggerFromTo",function(r){Wt[r]=function(){var e=new gi,t=id.call(arguments,0);return t.splice(r==="staggerFromTo"?5:4,0,0),e[r].apply(e,t)}});var su=function(e,t,i){return e[t]=i},Cg=function(e,t,i){return e[t](i)},kT=function(e,t,i,n){return e[t](n.fp,i)},OT=function(e,t,i){return e.setAttribute(t,i)},ru=function(e,t){return It(e[t])?Cg:qd(e[t])&&e.setAttribute?OT:su},Ag=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},zT=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},Pg=function(e,t){var i=t._pt,n="";if(!e&&t.b)n=t.b;else if(e===1&&t.e)n=t.e;else{for(;i;)n=i.p+(i.m?i.m(i.s+i.c*e):Math.round((i.s+i.c*e)*1e4)/1e4)+n,i=i._next;n+=t.c}t.set(t.t,t.p,n,t)},au=function(e,t){for(var i=t._pt;i;)i.r(e,i.d),i=i._next},UT=function(e,t,i,n){for(var s=this._pt,a;s;)a=s._next,s.p===n&&s.modifier(e,t,i),s=a},FT=function(e){for(var t=this._pt,i,n;t;)n=t._next,t.p===e&&!t.op||t.op===e?Wl(this,t,"_pt"):t.dep||(i=1),t=n;return!i},BT=function(e,t,i,n){n.mSet(e,t,n.m.call(n.tween,i,n.mt),n)},Lg=function(e){for(var t=e._pt,i,n,s,a;t;){for(i=t._next,n=s;n&&n.pr>t.pr;)n=n._next;(t._prev=n?n._prev:a)?t._prev._next=t:s=t,(t._next=n)?n._prev=t:a=t,t=i}e._pt=s},Ei=function(){function r(t,i,n,s,a,o,l,c,h){this.t=i,this.s=s,this.c=a,this.p=n,this.r=o||Ag,this.d=l||this,this.set=c||su,this.pr=h||0,this._next=t,t&&(t._prev=this)}var e=r.prototype;return e.modifier=function(i,n,s){this.mSet=this.mSet||this.set,this.set=BT,this.m=i,this.mt=s,this.tween=n},r}();wi(Qd+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(r){return Jd[r]=1});Fi.TweenMax=Fi.TweenLite=Wt;Fi.TimelineLite=Fi.TimelineMax=gi;Lt=new gi({sortChildren:!1,defaults:Hr,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});zi.stringFilter=_g;var Vs=[],ul={},HT=[],yp=0,GT=0,Zc=function(e){return(ul[e]||HT).map(function(t){return t()})},ad=function(){var e=Date.now(),t=[];e-yp>2&&(Zc("matchMediaInit"),Vs.forEach(function(i){var n=i.queries,s=i.conditions,a,o,l,c;for(o in n)a=_n.matchMedia(n[o]).matches,a&&(l=1),a!==s[o]&&(s[o]=a,c=1);c&&(i.revert(),l&&t.push(i))}),Zc("matchMediaRevert"),t.forEach(function(i){return i.onMatch(i,function(n){return i.add(null,n)})}),yp=e,Zc("matchMedia"))},Rg=function(){function r(t,i){this.selector=i&&nd(i),this.data=[],this._r=[],this.isReverted=!1,this.id=GT++,t&&this.add(t)}var e=r.prototype;return e.add=function(i,n,s){It(i)&&(s=n,n=i,i=It);var a=this,o=function(){var c=Et,h=a.selector,d;return c&&c!==a&&c.data.push(a),s&&(a.selector=nd(s)),Et=a,d=n.apply(a,arguments),It(d)&&a._r.push(d),Et=c,a.selector=h,a.isReverted=!1,d};return a.last=o,i===It?o(a,function(l){return a.add(null,l)}):i?a[i]=o:o},e.ignore=function(i){var n=Et;Et=null,i(this),Et=n},e.getTweens=function(){var i=[];return this.data.forEach(function(n){return n instanceof r?i.push.apply(i,n.getTweens()):n instanceof Wt&&!(n.parent&&n.parent.data==="nested")&&i.push(n)}),i},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(i,n){var s=this;if(i?function(){for(var o=s.getTweens(),l=s.data.length,c;l--;)c=s.data[l],c.data==="isFlip"&&(c.revert(),c.getChildren(!0,!0,!1).forEach(function(h){return o.splice(o.indexOf(h),1)}));for(o.map(function(h){return{g:h._dur||h._delay||h._sat&&!h._sat.vars.immediateRender?h.globalTime(0):-1/0,t:h}}).sort(function(h,d){return d.g-h.g||-1/0}).forEach(function(h){return h.t.revert(i)}),l=s.data.length;l--;)c=s.data[l],c instanceof gi?c.data!=="nested"&&(c.scrollTrigger&&c.scrollTrigger.revert(),c.kill()):!(c instanceof Wt)&&c.revert&&c.revert(i);s._r.forEach(function(h){return h(i,s)}),s.isReverted=!0}():this.data.forEach(function(o){return o.kill&&o.kill()}),this.clear(),n)for(var a=Vs.length;a--;)Vs[a].id===this.id&&Vs.splice(a,1)},e.revert=function(i){this.kill(i||{})},r}(),VT=function(){function r(t){this.contexts=[],this.scope=t,Et&&Et.data.push(this)}var e=r.prototype;return e.add=function(i,n,s){Tn(i)||(i={matches:i});var a=new Rg(0,s||this.scope),o=a.conditions={},l,c,h;Et&&!a.selector&&(a.selector=Et.selector),this.contexts.push(a),n=a.add("onMatch",n),a.queries=i;for(c in i)c==="all"?h=1:(l=_n.matchMedia(i[c]),l&&(Vs.indexOf(a)<0&&Vs.push(a),(o[c]=l.matches)&&(h=1),l.addListener?l.addListener(ad):l.addEventListener("change",ad)));return h&&n(a,function(d){return a.add(null,d)}),this},e.revert=function(i){this.kill(i||{})},e.kill=function(i){this.contexts.forEach(function(n){return n.kill(i,!0)})},r}(),wl={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];t.forEach(function(n){return gg(n)})},timeline:function(e){return new gi(e)},getTweensOf:function(e,t){return Lt.getTweensOf(e,t)},getProperty:function(e,t,i,n){ti(e)&&(e=Yi(e)[0]);var s=Bs(e||{}).get,a=i?ng:ig;return i==="native"&&(i=""),e&&(t?a((Ii[t]&&Ii[t].get||s)(e,t,i,n)):function(o,l,c){return a((Ii[o]&&Ii[o].get||s)(e,o,l,c))})},quickSetter:function(e,t,i){if(e=Yi(e),e.length>1){var n=e.map(function(h){return Ai.quickSetter(h,t,i)}),s=n.length;return function(h){for(var d=s;d--;)n[d](h)}}e=e[0]||{};var a=Ii[t],o=Bs(e),l=o.harness&&(o.harness.aliases||{})[t]||t,c=a?function(h){var d=new a;gr._pt=0,d.init(e,i?h+i:h,gr,0,[e]),d.render(1,d),gr._pt&&au(1,gr)}:o.set(e,l);return a?c:function(h){return c(e,l,i?h+i:h,o,1)}},quickTo:function(e,t,i){var n,s=Ai.to(e,Bi((n={},n[t]="+=0.1",n.paused=!0,n.stagger=0,n),i||{})),a=function(l,c,h){return s.resetTo(t,l,c,h)};return a.tween=s,a},isTweening:function(e){return Lt.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=Gs(e.ease,Hr.ease)),fp(Hr,e||{})},config:function(e){return fp(zi,e||{})},registerEffect:function(e){var t=e.name,i=e.effect,n=e.plugins,s=e.defaults,a=e.extendTimeline;(n||"").split(",").forEach(function(o){return o&&!Ii[o]&&!Fi[o]&&Ha(t+" effect requires "+o+" plugin.")}),jc[t]=function(o,l,c){return i(Yi(o),Bi(l||{},s),c)},a&&(gi.prototype[t]=function(o,l,c){return this.add(jc[t](o,Tn(l)?l:(c=l)&&{},this),c)})},registerEase:function(e,t){it[e]=Gs(t)},parseEase:function(e,t){return arguments.length?Gs(e,t):it},getById:function(e){return Lt.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var i=new gi(e),n,s;for(i.smoothChildTiming=Si(e.smoothChildTiming),Lt.remove(i),i._dp=0,i._time=i._tTime=Lt._time,n=Lt._first;n;)s=n._next,(t||!(!n._dur&&n instanceof Wt&&n.vars.onComplete===n._targets[0]))&&Mn(i,n,n._start-n._delay),n=s;return Mn(Lt,i,0),i},context:function(e,t){return e?new Rg(e,t):Et},matchMedia:function(e){return new VT(e)},matchMediaRefresh:function(){return Vs.forEach(function(e){var t=e.conditions,i,n;for(n in t)t[n]&&(t[n]=!1,i=1);i&&e.revert()})||ad()},addEventListener:function(e,t){var i=ul[e]||(ul[e]=[]);~i.indexOf(t)||i.push(t)},removeEventListener:function(e,t){var i=ul[e],n=i&&i.indexOf(t);n>=0&&i.splice(n,1)},utils:{wrap:bT,wrapYoyo:MT,distribute:hg,random:ug,snap:dg,normalize:xT,getUnit:hi,clamp:gT,splitColor:vg,toArray:Yi,selector:nd,mapRange:pg,pipe:yT,unitize:_T,interpolate:ST,shuffle:cg},install:Km,effects:jc,ticker:ki,updateRoot:gi.updateRoot,plugins:Ii,globalTimeline:Lt,core:{PropTween:Ei,globals:Jm,Tween:Wt,Timeline:gi,Animation:ja,getCache:Bs,_removeLinkedListItem:Wl,reverting:function(){return ai},context:function(e){return e&&Et&&(Et.data.push(e),e._ctx=Et),Et},suppressOverwrites:function(e){return Xd=e}}};wi("to,from,fromTo,delayedCall,set,killTweensOf",function(r){return wl[r]=Wt[r]});ki.add(gi.updateRoot);gr=wl.to({},{duration:0});var WT=function(e,t){for(var i=e._pt;i&&i.p!==t&&i.op!==t&&i.fp!==t;)i=i._next;return i},jT=function(e,t){var i=e._targets,n,s,a;for(n in t)for(s=i.length;s--;)a=e._ptLookup[s][n],a&&(a=a.d)&&(a._pt&&(a=WT(a,n)),a&&a.modifier&&a.modifier(t[n],e,i[s],n))},Yc=function(e,t){return{name:e,headless:1,rawVars:1,init:function(n,s,a){a._onInit=function(o){var l,c;if(ti(s)&&(l={},wi(s,function(h){return l[h]=1}),s=l),t){l={};for(c in s)l[c]=t(s[c]);s=l}jT(o,s)}}}},Ai=wl.registerPlugin({name:"attr",init:function(e,t,i,n,s){var a,o,l;this.tween=i;for(a in t)l=e.getAttribute(a)||"",o=this.add(e,"setAttribute",(l||0)+"",t[a],n,s,0,0,a),o.op=a,o.b=l,this._props.push(a)},render:function(e,t){for(var i=t._pt;i;)ai?i.set(i.t,i.p,i.b,i):i.r(e,i.d),i=i._next}},{name:"endArray",headless:1,init:function(e,t){for(var i=t.length;i--;)this.add(e,i,e[i]||0,t[i],0,0,0,0,0,1)}},Yc("roundProps",sd),Yc("modifiers"),Yc("snap",dg))||wl;Wt.version=gi.version=Ai.version="3.13.0";Ym=1;Zd()&&jr();it.Power0;it.Power1;it.Power2;it.Power3;it.Power4;it.Linear;it.Quad;it.Cubic;it.Quart;it.Quint;it.Strong;it.Elastic;it.Back;it.SteppedEase;it.Bounce;it.Sine;it.Expo;it.Circ;/*!
 * CSSPlugin 3.13.0
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var _p,ls,Mr,ou,Us,xp,lu,$T=function(){return typeof window<"u"},Xn={},Ns=180/Math.PI,Sr=Math.PI/180,dr=Math.atan2,bp=1e8,cu=/([A-Z])/g,XT=/(left|right|width|margin|padding|x)/i,qT=/[\s,\(]\S/,wn={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},od=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},ZT=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},YT=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},KT=function(e,t){var i=t.s+t.c*e;t.set(t.t,t.p,~~(i+(i<0?-.5:.5))+t.u,t)},Dg=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},Ng=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},JT=function(e,t,i){return e.style[t]=i},QT=function(e,t,i){return e.style.setProperty(t,i)},eC=function(e,t,i){return e._gsap[t]=i},tC=function(e,t,i){return e._gsap.scaleX=e._gsap.scaleY=i},iC=function(e,t,i,n,s){var a=e._gsap;a.scaleX=a.scaleY=i,a.renderTransform(s,a)},nC=function(e,t,i,n,s){var a=e._gsap;a[t]=i,a.renderTransform(s,a)},Dt="transform",Ti=Dt+"Origin",sC=function r(e,t){var i=this,n=this.target,s=n.style,a=n._gsap;if(e in Xn&&s){if(this.tfm=this.tfm||{},e!=="transform")e=wn[e]||e,~e.indexOf(",")?e.split(",").forEach(function(o){return i.tfm[o]=Bn(n,o)}):this.tfm[e]=a.x?a[e]:Bn(n,e),e===Ti&&(this.tfm.zOrigin=a.zOrigin);else return wn.transform.split(",").forEach(function(o){return r.call(i,o,t)});if(this.props.indexOf(Dt)>=0)return;a.svg&&(this.svgo=n.getAttribute("data-svg-origin"),this.props.push(Ti,t,"")),e=Dt}(s||t)&&this.props.push(e,t,s[e])},Ig=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},rC=function(){var e=this.props,t=this.target,i=t.style,n=t._gsap,s,a;for(s=0;s<e.length;s+=3)e[s+1]?e[s+1]===2?t[e[s]](e[s+2]):t[e[s]]=e[s+2]:e[s+2]?i[e[s]]=e[s+2]:i.removeProperty(e[s].substr(0,2)==="--"?e[s]:e[s].replace(cu,"-$1").toLowerCase());if(this.tfm){for(a in this.tfm)n[a]=this.tfm[a];n.svg&&(n.renderTransform(),t.setAttribute("data-svg-origin",this.svgo||"")),s=lu(),(!s||!s.isStart)&&!i[Dt]&&(Ig(i),n.zOrigin&&i[Ti]&&(i[Ti]+=" "+n.zOrigin+"px",n.zOrigin=0,n.renderTransform()),n.uncache=1)}},kg=function(e,t){var i={target:e,props:[],revert:rC,save:sC};return e._gsap||Ai.core.getCache(e),t&&e.style&&e.nodeType&&t.split(",").forEach(function(n){return i.save(n)}),i},Og,ld=function(e,t){var i=ls.createElementNS?ls.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):ls.createElement(e);return i&&i.style?i:ls.createElement(e)},Ki=function r(e,t,i){var n=getComputedStyle(e);return n[t]||n.getPropertyValue(t.replace(cu,"-$1").toLowerCase())||n.getPropertyValue(t)||!i&&r(e,$r(t)||t,1)||""},Mp="O,Moz,ms,Ms,Webkit".split(","),$r=function(e,t,i){var n=t||Us,s=n.style,a=5;if(e in s&&!i)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);a--&&!(Mp[a]+e in s););return a<0?null:(a===3?"ms":a>=0?Mp[a]:"")+e},cd=function(){$T()&&window.document&&(_p=window,ls=_p.document,Mr=ls.documentElement,Us=ld("div")||{style:{}},ld("div"),Dt=$r(Dt),Ti=Dt+"Origin",Us.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",Og=!!$r("perspective"),lu=Ai.core.reverting,ou=1)},Sp=function(e){var t=e.ownerSVGElement,i=ld("svg",t&&t.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),n=e.cloneNode(!0),s;n.style.display="block",i.appendChild(n),Mr.appendChild(i);try{s=n.getBBox()}catch{}return i.removeChild(n),Mr.removeChild(i),s},wp=function(e,t){for(var i=t.length;i--;)if(e.hasAttribute(t[i]))return e.getAttribute(t[i])},zg=function(e){var t,i;try{t=e.getBBox()}catch{t=Sp(e),i=1}return t&&(t.width||t.height)||i||(t=Sp(e)),t&&!t.width&&!t.x&&!t.y?{x:+wp(e,["x","cx","x1"])||0,y:+wp(e,["y","cy","y1"])||0,width:0,height:0}:t},Ug=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&zg(e))},$s=function(e,t){if(t){var i=e.style,n;t in Xn&&t!==Ti&&(t=Dt),i.removeProperty?(n=t.substr(0,2),(n==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),i.removeProperty(n==="--"?t:t.replace(cu,"-$1").toLowerCase())):i.removeAttribute(t)}},cs=function(e,t,i,n,s,a){var o=new Ei(e._pt,t,i,0,1,a?Ng:Dg);return e._pt=o,o.b=n,o.e=s,e._props.push(i),o},Ep={deg:1,rad:1,turn:1},aC={grid:1,flex:1},vs=function r(e,t,i,n){var s=parseFloat(i)||0,a=(i+"").trim().substr((s+"").length)||"px",o=Us.style,l=XT.test(t),c=e.tagName.toLowerCase()==="svg",h=(c?"client":"offset")+(l?"Width":"Height"),d=100,u=n==="px",f=n==="%",m,v,g,p;if(n===a||!s||Ep[n]||Ep[a])return s;if(a!=="px"&&!u&&(s=r(e,t,i,"px")),p=e.getCTM&&Ug(e),(f||a==="%")&&(Xn[t]||~t.indexOf("adius")))return m=p?e.getBBox()[l?"width":"height"]:e[h],Ft(f?s/m*d:s/100*m);if(o[l?"width":"height"]=d+(u?a:n),v=n!=="rem"&&~t.indexOf("adius")||n==="em"&&e.appendChild&&!c?e:e.parentNode,p&&(v=(e.ownerSVGElement||{}).parentNode),(!v||v===ls||!v.appendChild)&&(v=ls.body),g=v._gsap,g&&f&&g.width&&l&&g.time===ki.time&&!g.uncache)return Ft(s/g.width*d);if(f&&(t==="height"||t==="width")){var x=e.style[t];e.style[t]=d+n,m=e[h],x?e.style[t]=x:$s(e,t)}else(f||a==="%")&&!aC[Ki(v,"display")]&&(o.position=Ki(e,"position")),v===e&&(o.position="static"),v.appendChild(Us),m=Us[h],v.removeChild(Us),o.position="absolute";return l&&f&&(g=Bs(v),g.time=ki.time,g.width=v[h]),Ft(u?m*s/d:m&&s?d/m*s:0)},Bn=function(e,t,i,n){var s;return ou||cd(),t in wn&&t!=="transform"&&(t=wn[t],~t.indexOf(",")&&(t=t.split(",")[0])),Xn[t]&&t!=="transform"?(s=Xa(e,n),s=t!=="transformOrigin"?s[t]:s.svg?s.origin:Tl(Ki(e,Ti))+" "+s.zOrigin+"px"):(s=e.style[t],(!s||s==="auto"||n||~(s+"").indexOf("calc("))&&(s=El[t]&&El[t](e,t,i)||Ki(e,t)||eg(e,t)||(t==="opacity"?1:0))),i&&!~(s+"").trim().indexOf(" ")?vs(e,t,s,i)+i:s},oC=function(e,t,i,n){if(!i||i==="none"){var s=$r(t,e,1),a=s&&Ki(e,s,1);a&&a!==i?(t=s,i=a):t==="borderColor"&&(i=Ki(e,"borderTopColor"))}var o=new Ei(this._pt,e.style,t,0,1,Pg),l=0,c=0,h,d,u,f,m,v,g,p,x,_,y,w;if(o.b=i,o.e=n,i+="",n+="",n.substring(0,6)==="var(--"&&(n=Ki(e,n.substring(4,n.indexOf(")")))),n==="auto"&&(v=e.style[t],e.style[t]=n,n=Ki(e,t)||n,v?e.style[t]=v:$s(e,t)),h=[i,n],_g(h),i=h[0],n=h[1],u=i.match(mr)||[],w=n.match(mr)||[],w.length){for(;d=mr.exec(n);)g=d[0],x=n.substring(l,d.index),m?m=(m+1)%5:(x.substr(-5)==="rgba("||x.substr(-5)==="hsla(")&&(m=1),g!==(v=u[c++]||"")&&(f=parseFloat(v)||0,y=v.substr((f+"").length),g.charAt(1)==="="&&(g=br(f,g)+y),p=parseFloat(g),_=g.substr((p+"").length),l=mr.lastIndex-_.length,_||(_=_||zi.units[t]||y,l===n.length&&(n+=_,o.e+=_)),y!==_&&(f=vs(e,t,v,_)||0),o._pt={_next:o._pt,p:x||c===1?x:",",s:f,c:p-f,m:m&&m<4||t==="zIndex"?Math.round:0});o.c=l<n.length?n.substring(l,n.length):""}else o.r=t==="display"&&n==="none"?Ng:Dg;return qm.test(n)&&(o.e=0),this._pt=o,o},Tp={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},lC=function(e){var t=e.split(" "),i=t[0],n=t[1]||"50%";return(i==="top"||i==="bottom"||n==="left"||n==="right")&&(e=i,i=n,n=e),t[0]=Tp[i]||i,t[1]=Tp[n]||n,t.join(" ")},cC=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var i=t.t,n=i.style,s=t.u,a=i._gsap,o,l,c;if(s==="all"||s===!0)n.cssText="",l=1;else for(s=s.split(","),c=s.length;--c>-1;)o=s[c],Xn[o]&&(l=1,o=o==="transformOrigin"?Ti:Dt),$s(i,o);l&&($s(i,Dt),a&&(a.svg&&i.removeAttribute("transform"),n.scale=n.rotate=n.translate="none",Xa(i,1),a.uncache=1,Ig(n)))}},El={clearProps:function(e,t,i,n,s){if(s.data!=="isFromStart"){var a=e._pt=new Ei(e._pt,t,i,0,0,cC);return a.u=n,a.pr=-10,a.tween=s,e._props.push(i),1}}},$a=[1,0,0,1,0,0],Fg={},Bg=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},Cp=function(e){var t=Ki(e,Dt);return Bg(t)?$a:t.substr(7).match(Xm).map(Ft)},hu=function(e,t){var i=e._gsap||Bs(e),n=e.style,s=Cp(e),a,o,l,c;return i.svg&&e.getAttribute("transform")?(l=e.transform.baseVal.consolidate().matrix,s=[l.a,l.b,l.c,l.d,l.e,l.f],s.join(",")==="1,0,0,1,0,0"?$a:s):(s===$a&&!e.offsetParent&&e!==Mr&&!i.svg&&(l=n.display,n.display="block",a=e.parentNode,(!a||!e.offsetParent&&!e.getBoundingClientRect().width)&&(c=1,o=e.nextElementSibling,Mr.appendChild(e)),s=Cp(e),l?n.display=l:$s(e,"display"),c&&(o?a.insertBefore(e,o):a?a.appendChild(e):Mr.removeChild(e))),t&&s.length>6?[s[0],s[1],s[4],s[5],s[12],s[13]]:s)},hd=function(e,t,i,n,s,a){var o=e._gsap,l=s||hu(e,!0),c=o.xOrigin||0,h=o.yOrigin||0,d=o.xOffset||0,u=o.yOffset||0,f=l[0],m=l[1],v=l[2],g=l[3],p=l[4],x=l[5],_=t.split(" "),y=parseFloat(_[0])||0,w=parseFloat(_[1])||0,C,A,L,b;i?l!==$a&&(A=f*g-m*v)&&(L=y*(g/A)+w*(-v/A)+(v*x-g*p)/A,b=y*(-m/A)+w*(f/A)-(f*x-m*p)/A,y=L,w=b):(C=zg(e),y=C.x+(~_[0].indexOf("%")?y/100*C.width:y),w=C.y+(~(_[1]||_[0]).indexOf("%")?w/100*C.height:w)),n||n!==!1&&o.smooth?(p=y-c,x=w-h,o.xOffset=d+(p*f+x*v)-p,o.yOffset=u+(p*m+x*g)-x):o.xOffset=o.yOffset=0,o.xOrigin=y,o.yOrigin=w,o.smooth=!!n,o.origin=t,o.originIsAbsolute=!!i,e.style[Ti]="0px 0px",a&&(cs(a,o,"xOrigin",c,y),cs(a,o,"yOrigin",h,w),cs(a,o,"xOffset",d,o.xOffset),cs(a,o,"yOffset",u,o.yOffset)),e.setAttribute("data-svg-origin",y+" "+w)},Xa=function(e,t){var i=e._gsap||new Sg(e);if("x"in i&&!t&&!i.uncache)return i;var n=e.style,s=i.scaleX<0,a="px",o="deg",l=getComputedStyle(e),c=Ki(e,Ti)||"0",h,d,u,f,m,v,g,p,x,_,y,w,C,A,L,b,S,N,O,k,H,j,B,K,W,oe,me,_e,ze,Je,X,re;return h=d=u=v=g=p=x=_=y=0,f=m=1,i.svg=!!(e.getCTM&&Ug(e)),l.translate&&((l.translate!=="none"||l.scale!=="none"||l.rotate!=="none")&&(n[Dt]=(l.translate!=="none"?"translate3d("+(l.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(l.rotate!=="none"?"rotate("+l.rotate+") ":"")+(l.scale!=="none"?"scale("+l.scale.split(" ").join(",")+") ":"")+(l[Dt]!=="none"?l[Dt]:"")),n.scale=n.rotate=n.translate="none"),A=hu(e,i.svg),i.svg&&(i.uncache?(W=e.getBBox(),c=i.xOrigin-W.x+"px "+(i.yOrigin-W.y)+"px",K=""):K=!t&&e.getAttribute("data-svg-origin"),hd(e,K||c,!!K||i.originIsAbsolute,i.smooth!==!1,A)),w=i.xOrigin||0,C=i.yOrigin||0,A!==$a&&(N=A[0],O=A[1],k=A[2],H=A[3],h=j=A[4],d=B=A[5],A.length===6?(f=Math.sqrt(N*N+O*O),m=Math.sqrt(H*H+k*k),v=N||O?dr(O,N)*Ns:0,x=k||H?dr(k,H)*Ns+v:0,x&&(m*=Math.abs(Math.cos(x*Sr))),i.svg&&(h-=w-(w*N+C*k),d-=C-(w*O+C*H))):(re=A[6],Je=A[7],me=A[8],_e=A[9],ze=A[10],X=A[11],h=A[12],d=A[13],u=A[14],L=dr(re,ze),g=L*Ns,L&&(b=Math.cos(-L),S=Math.sin(-L),K=j*b+me*S,W=B*b+_e*S,oe=re*b+ze*S,me=j*-S+me*b,_e=B*-S+_e*b,ze=re*-S+ze*b,X=Je*-S+X*b,j=K,B=W,re=oe),L=dr(-k,ze),p=L*Ns,L&&(b=Math.cos(-L),S=Math.sin(-L),K=N*b-me*S,W=O*b-_e*S,oe=k*b-ze*S,X=H*S+X*b,N=K,O=W,k=oe),L=dr(O,N),v=L*Ns,L&&(b=Math.cos(L),S=Math.sin(L),K=N*b+O*S,W=j*b+B*S,O=O*b-N*S,B=B*b-j*S,N=K,j=W),g&&Math.abs(g)+Math.abs(v)>359.9&&(g=v=0,p=180-p),f=Ft(Math.sqrt(N*N+O*O+k*k)),m=Ft(Math.sqrt(B*B+re*re)),L=dr(j,B),x=Math.abs(L)>2e-4?L*Ns:0,y=X?1/(X<0?-X:X):0),i.svg&&(K=e.getAttribute("transform"),i.forceCSS=e.setAttribute("transform","")||!Bg(Ki(e,Dt)),K&&e.setAttribute("transform",K))),Math.abs(x)>90&&Math.abs(x)<270&&(s?(f*=-1,x+=v<=0?180:-180,v+=v<=0?180:-180):(m*=-1,x+=x<=0?180:-180)),t=t||i.uncache,i.x=h-((i.xPercent=h&&(!t&&i.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-h)?-50:0)))?e.offsetWidth*i.xPercent/100:0)+a,i.y=d-((i.yPercent=d&&(!t&&i.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-d)?-50:0)))?e.offsetHeight*i.yPercent/100:0)+a,i.z=u+a,i.scaleX=Ft(f),i.scaleY=Ft(m),i.rotation=Ft(v)+o,i.rotationX=Ft(g)+o,i.rotationY=Ft(p)+o,i.skewX=x+o,i.skewY=_+o,i.transformPerspective=y+a,(i.zOrigin=parseFloat(c.split(" ")[2])||!t&&i.zOrigin||0)&&(n[Ti]=Tl(c)),i.xOffset=i.yOffset=0,i.force3D=zi.force3D,i.renderTransform=i.svg?dC:Og?Hg:hC,i.uncache=0,i},Tl=function(e){return(e=e.split(" "))[0]+" "+e[1]},Kc=function(e,t,i){var n=hi(t);return Ft(parseFloat(t)+parseFloat(vs(e,"x",i+"px",n)))+n},hC=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,Hg(e,t)},Ls="0deg",ga="0px",Rs=") ",Hg=function(e,t){var i=t||this,n=i.xPercent,s=i.yPercent,a=i.x,o=i.y,l=i.z,c=i.rotation,h=i.rotationY,d=i.rotationX,u=i.skewX,f=i.skewY,m=i.scaleX,v=i.scaleY,g=i.transformPerspective,p=i.force3D,x=i.target,_=i.zOrigin,y="",w=p==="auto"&&e&&e!==1||p===!0;if(_&&(d!==Ls||h!==Ls)){var C=parseFloat(h)*Sr,A=Math.sin(C),L=Math.cos(C),b;C=parseFloat(d)*Sr,b=Math.cos(C),a=Kc(x,a,A*b*-_),o=Kc(x,o,-Math.sin(C)*-_),l=Kc(x,l,L*b*-_+_)}g!==ga&&(y+="perspective("+g+Rs),(n||s)&&(y+="translate("+n+"%, "+s+"%) "),(w||a!==ga||o!==ga||l!==ga)&&(y+=l!==ga||w?"translate3d("+a+", "+o+", "+l+") ":"translate("+a+", "+o+Rs),c!==Ls&&(y+="rotate("+c+Rs),h!==Ls&&(y+="rotateY("+h+Rs),d!==Ls&&(y+="rotateX("+d+Rs),(u!==Ls||f!==Ls)&&(y+="skew("+u+", "+f+Rs),(m!==1||v!==1)&&(y+="scale("+m+", "+v+Rs),x.style[Dt]=y||"translate(0, 0)"},dC=function(e,t){var i=t||this,n=i.xPercent,s=i.yPercent,a=i.x,o=i.y,l=i.rotation,c=i.skewX,h=i.skewY,d=i.scaleX,u=i.scaleY,f=i.target,m=i.xOrigin,v=i.yOrigin,g=i.xOffset,p=i.yOffset,x=i.forceCSS,_=parseFloat(a),y=parseFloat(o),w,C,A,L,b;l=parseFloat(l),c=parseFloat(c),h=parseFloat(h),h&&(h=parseFloat(h),c+=h,l+=h),l||c?(l*=Sr,c*=Sr,w=Math.cos(l)*d,C=Math.sin(l)*d,A=Math.sin(l-c)*-u,L=Math.cos(l-c)*u,c&&(h*=Sr,b=Math.tan(c-h),b=Math.sqrt(1+b*b),A*=b,L*=b,h&&(b=Math.tan(h),b=Math.sqrt(1+b*b),w*=b,C*=b)),w=Ft(w),C=Ft(C),A=Ft(A),L=Ft(L)):(w=d,L=u,C=A=0),(_&&!~(a+"").indexOf("px")||y&&!~(o+"").indexOf("px"))&&(_=vs(f,"x",a,"px"),y=vs(f,"y",o,"px")),(m||v||g||p)&&(_=Ft(_+m-(m*w+v*A)+g),y=Ft(y+v-(m*C+v*L)+p)),(n||s)&&(b=f.getBBox(),_=Ft(_+n/100*b.width),y=Ft(y+s/100*b.height)),b="matrix("+w+","+C+","+A+","+L+","+_+","+y+")",f.setAttribute("transform",b),x&&(f.style[Dt]=b)},uC=function(e,t,i,n,s){var a=360,o=ti(s),l=parseFloat(s)*(o&&~s.indexOf("rad")?Ns:1),c=l-n,h=n+c+"deg",d,u;return o&&(d=s.split("_")[1],d==="short"&&(c%=a,c!==c%(a/2)&&(c+=c<0?a:-a)),d==="cw"&&c<0?c=(c+a*bp)%a-~~(c/a)*a:d==="ccw"&&c>0&&(c=(c-a*bp)%a-~~(c/a)*a)),e._pt=u=new Ei(e._pt,t,i,n,c,ZT),u.e=h,u.u="deg",e._props.push(i),u},Ap=function(e,t){for(var i in t)e[i]=t[i];return e},fC=function(e,t,i){var n=Ap({},i._gsap),s="perspective,force3D,transformOrigin,svgOrigin",a=i.style,o,l,c,h,d,u,f,m;n.svg?(c=i.getAttribute("transform"),i.setAttribute("transform",""),a[Dt]=t,o=Xa(i,1),$s(i,Dt),i.setAttribute("transform",c)):(c=getComputedStyle(i)[Dt],a[Dt]=t,o=Xa(i,1),a[Dt]=c);for(l in Xn)c=n[l],h=o[l],c!==h&&s.indexOf(l)<0&&(f=hi(c),m=hi(h),d=f!==m?vs(i,l,c,m):parseFloat(c),u=parseFloat(h),e._pt=new Ei(e._pt,o,l,d,u-d,od),e._pt.u=m||0,e._props.push(l));Ap(o,n)};wi("padding,margin,Width,Radius",function(r,e){var t="Top",i="Right",n="Bottom",s="Left",a=(e<3?[t,i,n,s]:[t+s,t+i,n+i,n+s]).map(function(o){return e<2?r+o:"border"+o+r});El[e>1?"border"+r:r]=function(o,l,c,h,d){var u,f;if(arguments.length<4)return u=a.map(function(m){return Bn(o,m,c)}),f=u.join(" "),f.split(u[0]).length===5?u[0]:f;u=(h+"").split(" "),f={},a.forEach(function(m,v){return f[m]=u[v]=u[v]||u[(v-1)/2|0]}),o.init(l,f,d)}});var Gg={name:"css",register:cd,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,i,n,s){var a=this._props,o=e.style,l=i.vars.startAt,c,h,d,u,f,m,v,g,p,x,_,y,w,C,A,L;ou||cd(),this.styles=this.styles||kg(e),L=this.styles.props,this.tween=i;for(v in t)if(v!=="autoRound"&&(h=t[v],!(Ii[v]&&wg(v,t,i,n,e,s)))){if(f=typeof h,m=El[v],f==="function"&&(h=h.call(i,n,e,s),f=typeof h),f==="string"&&~h.indexOf("random(")&&(h=Va(h)),m)m(this,e,v,h,i)&&(A=1);else if(v.substr(0,2)==="--")c=(getComputedStyle(e).getPropertyValue(v)+"").trim(),h+="",fs.lastIndex=0,fs.test(c)||(g=hi(c),p=hi(h)),p?g!==p&&(c=vs(e,v,c,p)+p):g&&(h+=g),this.add(o,"setProperty",c,h,n,s,0,0,v),a.push(v),L.push(v,0,o[v]);else if(f!=="undefined"){if(l&&v in l?(c=typeof l[v]=="function"?l[v].call(i,n,e,s):l[v],ti(c)&&~c.indexOf("random(")&&(c=Va(c)),hi(c+"")||c==="auto"||(c+=zi.units[v]||hi(Bn(e,v))||""),(c+"").charAt(1)==="="&&(c=Bn(e,v))):c=Bn(e,v),u=parseFloat(c),x=f==="string"&&h.charAt(1)==="="&&h.substr(0,2),x&&(h=h.substr(2)),d=parseFloat(h),v in wn&&(v==="autoAlpha"&&(u===1&&Bn(e,"visibility")==="hidden"&&d&&(u=0),L.push("visibility",0,o.visibility),cs(this,o,"visibility",u?"inherit":"hidden",d?"inherit":"hidden",!d)),v!=="scale"&&v!=="transform"&&(v=wn[v],~v.indexOf(",")&&(v=v.split(",")[0]))),_=v in Xn,_){if(this.styles.save(v),f==="string"&&h.substring(0,6)==="var(--"&&(h=Ki(e,h.substring(4,h.indexOf(")"))),d=parseFloat(h)),y||(w=e._gsap,w.renderTransform&&!t.parseTransform||Xa(e,t.parseTransform),C=t.smoothOrigin!==!1&&w.smooth,y=this._pt=new Ei(this._pt,o,Dt,0,1,w.renderTransform,w,0,-1),y.dep=1),v==="scale")this._pt=new Ei(this._pt,w,"scaleY",w.scaleY,(x?br(w.scaleY,x+d):d)-w.scaleY||0,od),this._pt.u=0,a.push("scaleY",v),v+="X";else if(v==="transformOrigin"){L.push(Ti,0,o[Ti]),h=lC(h),w.svg?hd(e,h,0,C,0,this):(p=parseFloat(h.split(" ")[2])||0,p!==w.zOrigin&&cs(this,w,"zOrigin",w.zOrigin,p),cs(this,o,v,Tl(c),Tl(h)));continue}else if(v==="svgOrigin"){hd(e,h,1,C,0,this);continue}else if(v in Fg){uC(this,w,v,u,x?br(u,x+h):h);continue}else if(v==="smoothOrigin"){cs(this,w,"smooth",w.smooth,h);continue}else if(v==="force3D"){w[v]=h;continue}else if(v==="transform"){fC(this,h,e);continue}}else v in o||(v=$r(v)||v);if(_||(d||d===0)&&(u||u===0)&&!qT.test(h)&&v in o)g=(c+"").substr((u+"").length),d||(d=0),p=hi(h)||(v in zi.units?zi.units[v]:g),g!==p&&(u=vs(e,v,c,p)),this._pt=new Ei(this._pt,_?w:o,v,u,(x?br(u,x+d):d)-u,!_&&(p==="px"||v==="zIndex")&&t.autoRound!==!1?KT:od),this._pt.u=p||0,g!==p&&p!=="%"&&(this._pt.b=c,this._pt.r=YT);else if(v in o)oC.call(this,e,v,c,x?x+h:h);else if(v in e)this.add(e,v,c||e[v],x?x+h:h,n,s);else if(v!=="parseTransform"){Kd(v,h);continue}_||(v in o?L.push(v,0,o[v]):typeof e[v]=="function"?L.push(v,2,e[v]()):L.push(v,1,c||e[v])),a.push(v)}}A&&Lg(this)},render:function(e,t){if(t.tween._time||!lu())for(var i=t._pt;i;)i.r(e,i.d),i=i._next;else t.styles.revert()},get:Bn,aliases:wn,getSetter:function(e,t,i){var n=wn[t];return n&&n.indexOf(",")<0&&(t=n),t in Xn&&t!==Ti&&(e._gsap.x||Bn(e,"x"))?i&&xp===i?t==="scale"?tC:eC:(xp=i||{})&&(t==="scale"?iC:nC):e.style&&!qd(e.style[t])?JT:~t.indexOf("-")?QT:ru(e,t)},core:{_removeProperty:$s,_getMatrix:hu}};Ai.utils.checkPrefix=$r;Ai.core.getStyleSaver=kg;(function(r,e,t,i){var n=wi(r+","+e+","+t,function(s){Xn[s]=1});wi(e,function(s){zi.units[s]="deg",Fg[s]=1}),wn[n[13]]=r+","+e,wi(i,function(s){var a=s.split(":");wn[a[1]]=n[a[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");wi("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(r){zi.units[r]="px"});Ai.registerPlugin(Gg);var Ut=Ai.registerPlugin(Gg)||Ai;Ut.core.Tween;const ur=new Ui(0,0,0,"YXZ"),fr=new M,pC={type:"change"},mC={type:"lock"},gC={type:"unlock"},Pp=.002,Lp=Math.PI/2;class vC extends qy{constructor(e,t=null){super(e,t),this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=yC.bind(this),this._onPointerlockChange=_C.bind(this),this._onPointerlockError=xC.bind(this),this.domElement!==null&&this.connect(this.domElement)}connect(e){super.connect(e),this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return console.warn("THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead."),this.object}getDirection(e){return e.set(0,0,-1).applyQuaternion(this.object.quaternion)}moveForward(e){if(this.enabled===!1)return;const t=this.object;fr.setFromMatrixColumn(t.matrix,0),fr.crossVectors(t.up,fr),t.position.addScaledVector(fr,e)}moveRight(e){if(this.enabled===!1)return;const t=this.object;fr.setFromMatrixColumn(t.matrix,0),t.position.addScaledVector(fr,e)}lock(e=!1){this.domElement.requestPointerLock({unadjustedMovement:e})}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function yC(r){if(this.enabled===!1||this.isLocked===!1)return;const e=this.object;ur.setFromQuaternion(e.quaternion),ur.y-=r.movementX*Pp*this.pointerSpeed,ur.x-=r.movementY*Pp*this.pointerSpeed,ur.x=Math.max(Lp-this.maxPolarAngle,Math.min(Lp-this.minPolarAngle,ur.x)),e.quaternion.setFromEuler(ur),this.dispatchEvent(pC)}function _C(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(mC),this.isLocked=!0):(this.dispatchEvent(gC),this.isLocked=!1)}function xC(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}const ft={ORBIT:"orbit",FREE:"free",TOP_DOWN:"top_down",FIRST_PERSON:"first_person"};class bC{constructor(e){E(this,"space",null);E(this,"_cam",null);E(this,"domElement",null);E(this,"targetPosition",new M);E(this,"targetLookAt",new M);E(this,"currentPosition",new M);E(this,"currentLookAt",new M);E(this,"isPanning",!1);E(this,"panStart",new Z);E(this,"viewHistory",[]);E(this,"maxHistory",20);E(this,"currentTargetNodeId",null);E(this,"initialState",null);E(this,"zoomSpeed",1);E(this,"panSpeed",.8);E(this,"minZoomDistance",10);E(this,"maxZoomDistance",15e3);E(this,"dampingFactor",.12);E(this,"animationFrameId",null);E(this,"namedViews",new Map);E(this,"cameraMode",ft.ORBIT);E(this,"freeCameraSpeed",250);E(this,"freeCameraVerticalSpeed",180);E(this,"pointerLockControls",null);E(this,"isPointerLocked",!1);E(this,"moveState",{forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1});E(this,"prevTime",performance.now());E(this,"followTargetObject",null);E(this,"followOptions",{distance:300,damping:.05,offset:new M(0,50,0),autoEndOnManualControl:!0});E(this,"isFollowing",!1);E(this,"_isManuallyControlled",!1);E(this,"endPan",()=>{this.isPanning&&(this.isPanning=!1,this.domElement.classList.remove("panning"),this._isManuallyControlled=!1)});E(this,"getCurrentTargetNodeId",()=>this.currentTargetNodeId);E(this,"setCurrentTargetNodeId",e=>{this.currentTargetNodeId=e});E(this,"_startUpdateLoop",()=>{this.animationFrameId=requestAnimationFrame(this._updateCameraLogic)});E(this,"_updateCameraLogic",()=>{const e=performance.now(),t=(e-this.prevTime)/1e3;this.prevTime=e;let i=!0;if((this.cameraMode===ft.FREE||this.cameraMode===ft.FIRST_PERSON)&&this.isPointerLocked){const n=this.freeCameraSpeed*t,s=this.freeCameraVerticalSpeed*t;let a=!1;if(this.moveState.forward&&(this.pointerLockControls.moveForward(n),a=!0),this.moveState.backward&&(this.pointerLockControls.moveForward(-n),a=!0),this.moveState.left&&(this.pointerLockControls.moveRight(-n),a=!0),this.moveState.right&&(this.pointerLockControls.moveRight(n),a=!0),this.cameraMode===ft.FREE&&(this.moveState.up&&(this._cam.position.y+=s,a=!0),this.moveState.down&&(this._cam.position.y-=s,a=!0)),a){this.targetPosition.copy(this._cam.position);const o=new M(0,0,-1).applyQuaternion(this._cam.quaternion);this.targetLookAt.copy(this._cam.position).add(o),this.currentPosition.copy(this._cam.position),this.currentLookAt.copy(this.targetLookAt),i=!1}}else if(this.cameraMode===ft.TOP_DOWN){this.targetLookAt.x=this.targetPosition.x,this.targetLookAt.z=this.targetPosition.z,this.targetLookAt.y=0,this.currentPosition.lerp(this.targetPosition,this.dampingFactor),this.currentLookAt.lerp(this.targetLookAt,this.dampingFactor),this._cam.position.copy(this.currentPosition),this._cam.lookAt(this.currentLookAt);const n=.001;this.currentPosition.distanceTo(this.targetPosition)<n&&this.currentLookAt.distanceTo(this.targetLookAt)<n&&(this.currentPosition.copy(this.targetPosition),this.currentLookAt.copy(this.targetLookAt)),i=!1}if(this.isFollowing&&this.followTargetObject&&!this._isManuallyControlled){const n=this.followTargetObject.isVector3?this.followTargetObject:this.followTargetObject.position;if(n){const s=n.clone().add(this.followOptions.offset);this.targetLookAt.lerp(s,this.followOptions.damping);const a=new M().subVectors(this.currentPosition,this.targetLookAt).normalize(),o=this.targetLookAt.clone().addScaledVector(a,this.followOptions.distance);this.targetPosition.lerp(o,this.followOptions.damping),i=!0}}i&&(this.currentPosition.lerp(this.targetPosition,this.dampingFactor),this.currentLookAt.lerp(this.targetLookAt,this.dampingFactor),this.currentPosition.distanceTo(this.targetPosition)<=.001&&this.currentPosition.copy(this.targetPosition),this.currentLookAt.distanceTo(this.targetLookAt)<=.001&&this.currentLookAt.copy(this.targetLookAt),this._cam.position.copy(this.currentPosition),this._cam.lookAt(this.currentLookAt)),this.animationFrameId=requestAnimationFrame(this._updateCameraLogic)});E(this,"getNamedViews",()=>Array.from(this.namedViews.keys()));E(this,"hasNamedView",e=>this.namedViews.has(e));if(!(e!=null&&e._cam)||!e.container)throw new Error("Camera requires SpaceGraph instance.");this.space=e,this._cam=e._cam,this.domElement=e.container,this.currentPosition.copy(this._cam.position),this.targetPosition.copy(this._cam.position),this.currentLookAt.set(this._cam.position.x,this._cam.position.y,0),this.targetLookAt.copy(this.currentLookAt),this._initializePointerLockControls(),this._loadNamedViewsFromStorage(),this._startUpdateLoop()}_initializePointerLockControls(){this.pointerLockControls=new vC(this._cam,this.domElement),this.pointerLockControls.minPolarAngle=0,this.pointerLockControls.maxPolarAngle=Math.PI,this.pointerLockControls.addEventListener("lock",()=>{this.isPointerLocked=!0,Object.keys(this.moveState).forEach(e=>this.moveState[e]=!1),this.domElement.style.cursor="none",this.space.emit("camera:pointerLockChanged",{locked:!0})}),this.pointerLockControls.addEventListener("unlock",()=>{this.isPointerLocked=!1,this.domElement.style.cursor=this.cameraMode===ft.FREE?"crosshair":"grab",this.space.emit("camera:pointerLockChanged",{locked:!1})})}setFreeCameraMovement(e,t){this.cameraMode===ft.FREE&&e in this.moveState&&(this.moveState[e]=t)}setInitialState(){this.initialState??(this.initialState={position:this.targetPosition.clone(),lookAt:this.targetLookAt.clone(),mode:this.cameraMode})}startPan(e,t){this.cameraMode!==ft.ORBIT&&this.cameraMode!==ft.TOP_DOWN||this.isPanning||(this._isManuallyControlled=!0,this.isPanning=!0,this.panStart.set(e,t),this.domElement.classList.add("panning"),Ut.killTweensOf(this.targetPosition),Ut.killTweensOf(this.targetLookAt),this.isFollowing&&this.followOptions.autoEndOnManualControl&&this.stopFollowing(),this.currentTargetNodeId=null)}pan(e,t){if(this.cameraMode!==ft.ORBIT&&this.cameraMode!==ft.TOP_DOWN||!this.isPanning)return;const i=this.currentPosition.distanceTo(this.currentLookAt),n=this._cam.fov*bt.DEG2RAD,s=this.domElement.clientHeight||window.innerHeight,o=2*Math.tan(n/2)*Math.max(1,i)/s;let l;this.cameraMode===ft.TOP_DOWN?l=new M(-e*o*this.panSpeed,0,t*o*this.panSpeed):l=new M().setFromMatrixColumn(this._cam.matrixWorld,0).multiplyScalar(-e*o*this.panSpeed).add(new M().setFromMatrixColumn(this._cam.matrixWorld,1).multiplyScalar(t*o*this.panSpeed)),this.targetPosition.add(l),this.targetLookAt.add(l)}zoom(e){this._isManuallyControlled=!0,Ut.killTweensOf(this.targetPosition),Ut.killTweensOf(this.targetLookAt),this.isFollowing&&this.followOptions.autoEndOnManualControl&&this.stopFollowing(),this.currentTargetNodeId=null;const t=Math.pow(.95,e*.025*this.zoomSpeed);if(this.cameraMode===ft.TOP_DOWN){let n=this.targetPosition.y*t;n=bt.clamp(n,this.minZoomDistance,this.maxZoomDistance),this.targetPosition.y=n,this.targetLookAt.x=this.targetPosition.x,this.targetLookAt.z=this.targetPosition.z,this.targetLookAt.y=0}else{const i=new M().subVectors(this.targetPosition,this.targetLookAt),n=i.length(),s=bt.clamp(n*t,this.minZoomDistance,this.maxZoomDistance);this.targetPosition.copy(this.targetLookAt).addScaledVector(i.normalize(),s)}}moveTo(e,t,i,n=.7,s=null,a=null){this._isManuallyControlled=!0,this.isFollowing&&this.followOptions.autoEndOnManualControl&&this.stopFollowing(),this.setInitialState();const o=new M(e,t,i),l=s instanceof M?s.clone():new M(e,t,0);Ut.killTweensOf(this.targetPosition),Ut.killTweensOf(this.targetLookAt);const c=()=>{this._isManuallyControlled=!1};Ut.to(this.targetPosition,{x:o.x,y:o.y,z:o.z,duration:n,ease:"power3.out",overwrite:!0}),Ut.to(this.targetLookAt,{x:l.x,y:l.y,z:l.z,duration:n,ease:"power3.out",overwrite:!0,onComplete:c}),a&&a!==this.cameraMode&&this.setCameraMode(a,!0)}resetView(e=.7){this.initialState?this.moveTo(this.initialState.position.x,this.initialState.position.y,this.initialState.position.z,e,this.initialState.lookAt,this.initialState.mode||ft.ORBIT):this.moveTo(0,0,700,e,new M(0,0,0),ft.ORBIT),this.viewHistory=[],this.currentTargetNodeId=null}pushState(){this.viewHistory.length>=this.maxHistory&&this.viewHistory.shift(),this.viewHistory.push({position:this.targetPosition.clone(),lookAt:this.targetLookAt.clone(),mode:this.cameraMode,targetNodeId:this.currentTargetNodeId})}popState(e=.6){const t=this.viewHistory.pop();t?this.moveTo(t.position.x,t.position.y,t.position.z,e,t.lookAt,t.mode):this.resetView(e),this.currentTargetNodeId=(t==null?void 0:t.targetNodeId)||null}startFollowing(e,t={}){e&&(this.followTargetObject=e,this.followOptions={...this.followOptions,...t},this.isFollowing=!0,this._isManuallyControlled=!1,this.currentTargetNodeId=(e==null?void 0:e.id)||null,Ut.killTweensOf(this.targetPosition),Ut.killTweensOf(this.targetLookAt),this.space.emit("camera:followStarted",{target:this.followTargetObject,options:this.followOptions}))}stopFollowing(){if(this.isFollowing){const e=this.followTargetObject;this.isFollowing=!1,this.followTargetObject=null,this.space.emit("camera:followStopped",{oldTarget:e})}}dispose(){var e;this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),(e=this.pointerLockControls)==null||e.dispose(),Ut.killTweensOf(this.targetPosition),Ut.killTweensOf(this.targetLookAt),this.space=null,this._cam=null,this.domElement=null,this.viewHistory=[],this.namedViews.clear(),this.followTargetObject=null}_loadNamedViewsFromStorage(){try{const e=localStorage.getItem("spacegraph_namedViews");if(e){const t=JSON.parse(e);Object.entries(t).forEach(([i,n])=>{this.namedViews.set(i,{position:new M(n.position.x,n.position.y,n.position.z),lookAt:new M(n.lookAt.x,n.lookAt.y,n.lookAt.z),mode:n.mode||ft.ORBIT,targetNodeId:n.targetNodeId})})}}catch(e){console.error("Camera: Error loading named views:",e)}}_saveNamedViewsToStorage(){try{const e={};this.namedViews.forEach((t,i)=>{e[i]={position:{x:t.position.x,y:t.position.y,z:t.position.z},lookAt:{x:t.lookAt.x,y:t.lookAt.y,z:t.lookAt.z},mode:t.mode,targetNodeId:t.targetNodeId}}),localStorage.setItem("spacegraph_namedViews",JSON.stringify(e))}catch(e){console.error("Camera: Error saving named views:",e)}}saveNamedView(e){return!e||typeof e!="string"?!1:(this.namedViews.set(e,{position:this.targetPosition.clone(),lookAt:this.targetLookAt.clone(),mode:this.cameraMode,targetNodeId:this.currentTargetNodeId}),this._saveNamedViewsToStorage(),this.space.emit("camera:namedViewSaved",{name:e,view:this.namedViews.get(e)}),!0)}restoreNamedView(e,t=.7){const i=this.namedViews.get(e);return i?(this.moveTo(i.position.x,i.position.y,i.position.z,t,i.lookAt,i.mode),this.setCurrentTargetNodeId(i.targetNodeId),this.space.emit("camera:namedViewRestored",{name:e,view:i}),!0):!1}deleteNamedView(e){return this.namedViews.has(e)?(this.namedViews.delete(e),this._saveNamedViewsToStorage(),this.space.emit("camera:namedViewDeleted",{name:e}),!0):!1}setCameraMode(e,t=!1){if(!Object.values(ft).includes(e)){console.warn(`Camera: Unknown mode "${e}" requested.`);return}if(this.cameraMode===e&&!t)return;const i=this.cameraMode;switch(this.cameraMode=e,this._isManuallyControlled=!0,(i===ft.FREE||i===ft.FIRST_PERSON)&&this.isPointerLocked&&this.pointerLockControls.unlock(),this.domElement.style.cursor="default",this.cameraMode){case ft.ORBIT:this.domElement.style.cursor="grab";break;case ft.FREE:this.domElement.style.cursor="crosshair",this.targetPosition.copy(this.currentPosition);const n=new M(0,0,-1).applyQuaternion(this._cam.quaternion);this.targetLookAt.copy(this.currentPosition).add(n);break;case ft.TOP_DOWN:this.domElement.style.cursor="move";const s=this.currentPosition.y>this.minZoomDistance?this.currentPosition.y:Math.max(this.minZoomDistance,500);this.targetPosition.set(this.currentLookAt.x,s,this.currentLookAt.z),this.targetLookAt.set(this.currentLookAt.x,0,this.currentLookAt.z);break;case ft.FIRST_PERSON:this.domElement.style.cursor="crosshair",this.targetPosition.copy(this.currentPosition);const a=new M(0,0,-1).applyQuaternion(this._cam.quaternion);this.targetLookAt.copy(this.currentPosition).add(a);break}this.space.emit("camera:modeChanged",{newMode:this.cameraMode,oldMode:i}),setTimeout(()=>this._isManuallyControlled=!1,50)}}class MC{constructor(e,t){E(this,"space",null);E(this,"camera",null);E(this,"cameraControls",null);E(this,"settings",{autoZoom:{enabled:!1,minDistance:50,maxDistance:2e3,targetPadding:1.5,transitionDuration:1,nodeCountThreshold:5,densityThreshold:.3},rotation:{enabled:!0,speed:.005,autoRotate:!1,autoRotateSpeed:.02,smoothDamping:.1,maxPolarAngle:Math.PI,minPolarAngle:0},peekMode:{enabled:!0,peekDistance:100,peekSpeed:.8,returnDuration:.6,mouseThreshold:50,cornerDetectionRadius:150},cinematic:{enableCinematicMode:!1,cinematicSpeed:.3,cinematicRadius:500,cinematicHeight:200,followPath:!0}});E(this,"autoZoomEnabled",!1);E(this,"lastNodeCount",0);E(this,"lastBoundingBox",null);E(this,"autoZoomTimer",null);E(this,"rotationVelocity",new Z);E(this,"targetRotation",new Z);E(this,"currentRotation",new Z);E(this,"autoRotateAngle",0);E(this,"isPeeking",!1);E(this,"peekStartPosition",new M);E(this,"peekStartTarget",new M);E(this,"peekDirection",new M);E(this,"mousePosition",new Z);E(this,"lastMousePosition",new Z);E(this,"cinematicMode",!1);E(this,"cinematicPath",[]);E(this,"cinematicProgress",0);E(this,"cinematicDirection",1);this.space=e,this.cameraControls=t,this.camera=e.camera,this._initializeEventListeners(),this._startUpdateLoop()}_initializeEventListeners(){this.space.container&&(this.space.container.addEventListener("mousemove",this._handleMouseMove.bind(this)),this.space.container.addEventListener("mouseenter",this._handleMouseEnter.bind(this)),this.space.container.addEventListener("mouseleave",this._handleMouseLeave.bind(this))),document.addEventListener("keydown",this._handleKeyDown.bind(this)),document.addEventListener("keyup",this._handleKeyUp.bind(this)),this.space.on("node:added",this._onGraphChange.bind(this)),this.space.on("node:removed",this._onGraphChange.bind(this)),this.space.on("layout:started",this._onLayoutChange.bind(this))}_handleMouseMove(e){const t=this.space.container.getBoundingClientRect();this.mousePosition.set((e.clientX-t.left)/t.width*2-1,-((e.clientY-t.top)/t.height)*2+1),this.settings.peekMode.enabled&&this._updatePeekMode()}_handleMouseEnter(){this.lastMousePosition.copy(this.mousePosition)}_handleMouseLeave(){this.isPeeking&&this._exitPeekMode()}_handleKeyDown(e){switch(e.code){case"KeyR":e.ctrlKey&&(this.toggleAutoRotation(),e.preventDefault());break;case"KeyZ":e.ctrlKey&&(this.toggleAutoZoom(),e.preventDefault());break;case"KeyP":this.togglePeekMode();break;case"KeyC":e.ctrlKey&&(this.toggleCinematicMode(),e.preventDefault());break}}_handleKeyUp(e){}_onGraphChange(){this.autoZoomEnabled&&(clearTimeout(this.autoZoomTimer),this.autoZoomTimer=setTimeout(()=>{this._performAutoZoom()},1e3))}_onLayoutChange(){this.autoZoomEnabled&&setTimeout(()=>{this._performAutoZoom()},1500)}_startUpdateLoop(){const e=()=>{this._updateRotation(),this._updateCinematicMode(),requestAnimationFrame(e)};e()}toggleAutoZoom(e=null){return this.autoZoomEnabled=e!==null?e:!this.autoZoomEnabled,this.autoZoomEnabled&&this._performAutoZoom(),this.space.emit("camera:autoZoomToggled",{enabled:this.autoZoomEnabled}),this.autoZoomEnabled}_performAutoZoom(){var a;const e=this.space.plugins.getPlugin("NodePlugin"),t=Array.from(((a=e==null?void 0:e.getNodes())==null?void 0:a.values())||[]);if(t.length===0)return;const i=this._calculateSceneBoundingBox(t),n=this._calculateOptimalZoomDistance(i,t.length),s=i.getCenter(new M);this.cameraControls.moveTo(s.x,s.y,s.z+n,this.settings.autoZoom.transitionDuration,s),this.lastNodeCount=t.length,this.lastBoundingBox=i}_calculateSceneBoundingBox(e){const t=new qt;return e.forEach(i=>{var o;const n=new qt,s=((o=i.getBoundingSphereRadius)==null?void 0:o.call(i))||50,a=i.position;n.setFromCenterAndSize(a,new M(s*2,s*2,s*2)),t.union(n)}),t}_calculateOptimalZoomDistance(e,t){const i=e.getSize(new M),n=Math.max(i.x,i.y,i.z),s=this.camera.fov*Math.PI/180,a=n*this.settings.autoZoom.targetPadding/(2*Math.tan(s/2)),o=Math.min(1.5,t/20),l=a*(1+o*.3);return Qr.clamp(l,this.settings.autoZoom.minDistance,this.settings.autoZoom.maxDistance)}toggleAutoRotation(e=null){return this.settings.rotation.autoRotate=e!==null?e:!this.settings.rotation.autoRotate,this.settings.rotation.autoRotate||(this.autoRotateAngle=0),this.space.emit("camera:autoRotationToggled",{enabled:this.settings.rotation.autoRotate}),this.settings.rotation.autoRotate}setRotationSpeed(e){this.settings.rotation.autoRotateSpeed=e}_updateRotation(){if(this.settings.rotation.autoRotate&&this.cameraControls.cameraMode===ft.ORBIT){this.autoRotateAngle+=this.settings.rotation.autoRotateSpeed;const e=this.cameraControls.targetLookAt.clone(),t=this.camera.position.clone(),i=t.distanceTo(e),n=e.x+Math.cos(this.autoRotateAngle)*i,s=e.z+Math.sin(this.autoRotateAngle)*i;this.cameraControls.targetPosition.set(n,t.y,s)}this.currentRotation.lerp(this.targetRotation,this.settings.rotation.smoothDamping)}togglePeekMode(e=null){return this.settings.peekMode.enabled=e!==null?e:!this.settings.peekMode.enabled,!this.settings.peekMode.enabled&&this.isPeeking&&this._exitPeekMode(),this.space.emit("camera:peekModeToggled",{enabled:this.settings.peekMode.enabled}),this.settings.peekMode.enabled}_updatePeekMode(){if(!this.settings.peekMode.enabled)return;const t=this.mousePosition.clone().sub(this.lastMousePosition).length(),i=Math.abs(this.mousePosition.x)>.7||Math.abs(this.mousePosition.y)>.7;i&&t>.01?(this.isPeeking||this._enterPeekMode(),this._updatePeekDirection()):this.isPeeking&&!i&&this._exitPeekMode(),this.lastMousePosition.copy(this.mousePosition)}_enterPeekMode(){this.isPeeking=!0,this.peekStartPosition.copy(this.camera.position),this.peekStartTarget.copy(this.cameraControls.targetLookAt),this.space.emit("camera:peekModeEntered")}_exitPeekMode(){this.isPeeking&&(this.isPeeking=!1,Ut.to(this.cameraControls.targetPosition,{x:this.peekStartPosition.x,y:this.peekStartPosition.y,z:this.peekStartPosition.z,duration:this.settings.peekMode.returnDuration,ease:"power2.out"}),Ut.to(this.cameraControls.targetLookAt,{x:this.peekStartTarget.x,y:this.peekStartTarget.y,z:this.peekStartTarget.z,duration:this.settings.peekMode.returnDuration,ease:"power2.out"}),this.space.emit("camera:peekModeExited"))}_updatePeekDirection(){if(!this.isPeeking)return;const e=new M(this.mousePosition.x*this.settings.peekMode.peekDistance,this.mousePosition.y*this.settings.peekMode.peekDistance*.5,0),t=this.camera.quaternion.clone();e.applyQuaternion(t),Ut.to(this.cameraControls.targetPosition,{x:this.peekStartPosition.x+e.x,y:this.peekStartPosition.y+e.y,z:this.peekStartPosition.z+e.z,duration:this.settings.peekMode.peekSpeed,ease:"power2.out"})}toggleCinematicMode(e=null){return this.cinematicMode=e!==null?e:!this.cinematicMode,this.cinematicMode?this._startCinematicMode():this._stopCinematicMode(),this.space.emit("camera:cinematicModeToggled",{enabled:this.cinematicMode}),this.cinematicMode}_startCinematicMode(){this._generateCinematicPath(),this.cinematicProgress=0,this.cinematicDirection=1}_stopCinematicMode(){this.cinematicPath=[],this.cinematicProgress=0}_generateCinematicPath(){var o;const e=this.space.plugins.getPlugin("NodePlugin"),t=Array.from(((o=e==null?void 0:e.getNodes())==null?void 0:o.values())||[]);if(t.length===0)return;const i=new M;t.forEach(l=>i.add(l.position)),i.divideScalar(t.length);const n=this.settings.cinematic.cinematicRadius,s=this.settings.cinematic.cinematicHeight,a=32;this.cinematicPath=[];for(let l=0;l<a;l++){const c=l/a*Math.PI*2,h=i.x+Math.cos(c)*n,d=i.z+Math.sin(c)*n,u=i.y+s+Math.sin(c*2)*50;this.cinematicPath.push({position:new M(h,u,d),lookAt:i.clone()})}}_updateCinematicMode(){if(!this.cinematicMode||this.cinematicPath.length===0)return;this.cinematicProgress+=this.settings.cinematic.cinematicSpeed*this.cinematicDirection*.01,this.cinematicProgress>=1?(this.cinematicProgress=1,this.cinematicDirection=-1):this.cinematicProgress<=0&&(this.cinematicProgress=0,this.cinematicDirection=1);const e=this.cinematicProgress*(this.cinematicPath.length-1),t=Math.floor(e),i=Math.min(t+1,this.cinematicPath.length-1),n=e-t,s=this.cinematicPath[t],a=this.cinematicPath[i];if(s&&a){const o=s.position.clone().lerp(a.position,n),l=s.lookAt.clone().lerp(a.lookAt,n);this.cameraControls.targetPosition.copy(o),this.cameraControls.targetLookAt.copy(l)}}smartFocusOnNode(e,t={}){var f;const{considerNeighbors:i=!0,includeEdges:n=!0,transitionDuration:s=1,contextRadius:a=200}=t;if(!e)return;let o=new qt;if(o.setFromCenterAndSize(e.position,new M(100,100,100)),i){const m=this.space.plugins.getPlugin("EdgePlugin"),v=Array.from(((f=m==null?void 0:m.getEdges())==null?void 0:f.values())||[]),g=new Set([e]);v.forEach(p=>{p.source===e&&p.target.position.distanceTo(e.position)<a&&g.add(p.target),p.target===e&&p.source.position.distanceTo(e.position)<a&&g.add(p.source)}),g.forEach(p=>{var y;const x=new qt,_=((y=p.getBoundingSphereRadius)==null?void 0:y.call(p))||50;x.setFromCenterAndSize(p.position,new M(_*2,_*2,_*2)),o.union(x)})}const l=o.getCenter(new M),c=o.getSize(new M),h=Math.max(c.x,c.y,c.z),d=this.camera.fov*Math.PI/180,u=h*1.5/(2*Math.tan(d/2));this.cameraControls.moveTo(l.x,l.y,l.z+Math.max(u,150),s,l)}createViewSequence(e,t={}){const{duration:i=2,pause:n=1,includeOverview:s=!0,smoothTransitions:a=!0}=t,o=[];return s&&o.push(()=>this._performAutoZoom()),e.forEach((l,c)=>{o.push(()=>{this.smartFocusOnNode(l,{transitionDuration:a?i:0,considerNeighbors:!0})})}),this._executeViewSequence(o,n)}async _executeViewSequence(e,t){for(let i=0;i<e.length;i++)await e[i](),i<e.length-1&&await new Promise(n=>setTimeout(n,t*1e3))}updateSettings(e){this.settings={...this.settings,...e}}getSettings(){return{...this.settings}}isAutoZoomEnabled(){return this.autoZoomEnabled}isAutoRotating(){return this.settings.rotation.autoRotate}isPeekModeEnabled(){return this.settings.peekMode.enabled}isCinematicModeActive(){return this.cinematicMode}dispose(){clearTimeout(this.autoZoomTimer),this.space.container.removeEventListener("mousemove",this._handleMouseMove.bind(this)),this.space.container.removeEventListener("mouseenter",this._handleMouseEnter.bind(this)),this.space.container.removeEventListener("mouseleave",this._handleMouseLeave.bind(this)),document.removeEventListener("keydown",this._handleKeyDown.bind(this)),document.removeEventListener("keyup",this._handleKeyUp.bind(this)),this.space=null,this.camera=null,this.cameraControls=null}}class SC extends mn{constructor(t,i){super(t,i);E(this,"perspectiveCamera",null);E(this,"cameraControls",null);E(this,"advancedControls",null)}getName(){return"CameraPlugin"}init(){super.init(),this.perspectiveCamera=new Jt(70,window.innerWidth/window.innerHeight,.1,2e4),this.perspectiveCamera.position.z=700,this.space&&(this.space._cam=this.perspectiveCamera),this.cameraControls=new bC(this.space),this.advancedControls=new MC(this.space,this.cameraControls),this._subscribeToEvents()}_subscribeToEvents(){this.space.on("ui:request:setCameraMode",t=>{this.setCameraMode(t)}),this.space.on("ui:request:toggleAutoZoom",()=>{this.toggleAutoZoom()}),this.space.on("ui:request:toggleAutoRotation",()=>{this.toggleAutoRotation()}),this.space.on("ui:request:togglePeekMode",()=>{this.togglePeekMode()}),this.space.on("ui:request:toggleCinematicMode",()=>{this.toggleCinematicMode()}),this.space.on("ui:request:smartFocus",(t,i)=>{this.smartFocusOnNode(t,i)})}getCameraInstance(){return this.perspectiveCamera}getControls(){return this.cameraControls}moveTo(t,i,n,s=.7,a=null){var o;(o=this.cameraControls)==null||o.moveTo(t,i,n,s,a)}_determineCenterViewTarget(t=null){const i=this.pluginManager.getPlugin("NodePlugin"),n=i==null?void 0:i.getNodes();let s=new M;return t instanceof M?s=t.clone():t&&typeof t.x=="number"?s.set(t.x,t.y,t.z):n&&n.size>0&&(n.forEach(a=>s.add(a.position)),s.divideScalar(n.size)),s}_determineOptimalDistance(t=400,i=700,n=0){return n>1?i:t}centerView(t=null,i=.7){var l;if(!this.perspectiveCamera||!this.cameraControls)return;const n=this._determineCenterViewTarget(t),s=this.pluginManager.getPlugin("NodePlugin"),a=((l=s==null?void 0:s.getNodes())==null?void 0:l.size)||0,o=this._determineOptimalDistance(400,700,a);this.moveTo(n.x,n.y,n.z+o,i,n)}_determineFocusNodeDistance(t){if(!t||!this.perspectiveCamera)return 50;const i=this.perspectiveCamera.fov*bt.DEG2RAD,n=this.perspectiveCamera.aspect,s=typeof t.getBoundingSphereRadius=="function"?t.getBoundingSphereRadius()*2:100,a=Math.max(s,s/n);return Math.max(50,a*1.5/(2*Math.tan(i/2)))}focusOnNode(t,i=.6,n=!1){if(!t||!this.perspectiveCamera||!this.cameraControls)return;const s=t.position.clone(),a=this._determineFocusNodeDistance(t);n&&this.pushState(),this.moveTo(s.x,s.y,s.z+a,i,s)}pan(t,i){var n;(n=this.cameraControls)==null||n.pan(t,i)}startPan(t,i){var n;(n=this.cameraControls)==null||n.startPan(t,i)}endPan(){var t;(t=this.cameraControls)==null||t.endPan()}zoom(t){var i;(i=this.cameraControls)==null||i.zoom(t)}resetView(t=.7){var i;(i=this.cameraControls)==null||i.resetView(t)}pushState(){var t;(t=this.cameraControls)==null||t.pushState()}popState(t=.6){var i;(i=this.cameraControls)==null||i.popState(t)}getCurrentTargetNodeId(){var t;return(t=this.cameraControls)==null?void 0:t.getCurrentTargetNodeId()}setCurrentTargetNodeId(t){var i;(i=this.cameraControls)==null||i.setCurrentTargetNodeId(t)}setInitialState(){var t;(t=this.cameraControls)==null||t.setInitialState()}saveNamedView(t){var i;return(i=this.cameraControls)==null?void 0:i.saveNamedView(t)}restoreNamedView(t,i=.7){var n;return(n=this.cameraControls)==null?void 0:n.restoreNamedView(t,i)}deleteNamedView(t){var i;return(i=this.cameraControls)==null?void 0:i.deleteNamedView(t)}getNamedViews(){var t;return((t=this.cameraControls)==null?void 0:t.getNamedViews())||[]}hasNamedView(t){var i;return((i=this.cameraControls)==null?void 0:i.hasNamedView(t))||!1}setCameraMode(t){var i;(i=this.cameraControls)==null||i.setCameraMode(t)}getCameraMode(){var t;return(t=this.cameraControls)==null?void 0:t.cameraMode}getAvailableCameraModes(){return{[ft.ORBIT]:"Orbit Control",[ft.FREE]:"Free Look",[ft.TOP_DOWN]:"Top Down",[ft.FIRST_PERSON]:"First Person"}}startFollowing(t,i={}){var n;(n=this.cameraControls)==null||n.startFollowing(t,i)}stopFollowing(){var t;(t=this.cameraControls)==null||t.stopFollowing()}isFollowing(){var t;return((t=this.cameraControls)==null?void 0:t.isFollowing)||!1}requestPointerLock(){var t,i;(i=(t=this.cameraControls)==null?void 0:t.pointerLockControls)==null||i.lock()}exitPointerLock(){var t,i;(i=(t=this.cameraControls)==null?void 0:t.pointerLockControls)==null||i.unlock()}toggleAutoZoom(t=null){var i;return(i=this.advancedControls)==null?void 0:i.toggleAutoZoom(t)}toggleAutoRotation(t=null){var i;return(i=this.advancedControls)==null?void 0:i.toggleAutoRotation(t)}setRotationSpeed(t){var i;(i=this.advancedControls)==null||i.setRotationSpeed(t)}togglePeekMode(t=null){var i;return(i=this.advancedControls)==null?void 0:i.togglePeekMode(t)}toggleCinematicMode(t=null){var i;return(i=this.advancedControls)==null?void 0:i.toggleCinematicMode(t)}smartFocusOnNode(t,i={}){var n;(n=this.advancedControls)==null||n.smartFocusOnNode(t,i)}createViewSequence(t,i={}){var n;return(n=this.advancedControls)==null?void 0:n.createViewSequence(t,i)}updateAdvancedSettings(t){var i;(i=this.advancedControls)==null||i.updateSettings(t)}getAdvancedSettings(){var t;return(t=this.advancedControls)==null?void 0:t.getSettings()}getAdvancedControlsStatus(){var t,i,n,s;return{autoZoom:((t=this.advancedControls)==null?void 0:t.isAutoZoomEnabled())||!1,autoRotation:((i=this.advancedControls)==null?void 0:i.isAutoRotating())||!1,peekMode:((n=this.advancedControls)==null?void 0:n.isPeekModeEnabled())||!1,cinematicMode:((s=this.advancedControls)==null?void 0:s.isCinematicModeActive())||!1}}dispose(){var t,i;super.dispose(),(t=this.advancedControls)==null||t.dispose(),(i=this.cameraControls)==null||i.dispose(),this.space&&this.space._cam===this.perspectiveCamera&&(this.space._cam=null),this.perspectiveCamera=null,this.advancedControls=null,this.cameraControls=null}}class Ji extends _s{constructor(t,i,n={},s=1.5){super(t,i,n,s);E(this,"shape","sphere");E(this,"size",50);E(this,"color",16777215);E(this,"gltfUrl",null);E(this,"lodData",[]);E(this,"isSelected",!1);E(this,"isHovered",!1);this.shape=this.data.shape??"sphere",this.size=Number.isFinite(this.data.size)?this.data.size:50,this.color=this.data.color??16777215,this.gltfUrl=this.data.gltfUrl??null,this.lodData=this.data.lodLevels??[],this.mesh=new No,this.mesh.userData={nodeId:this.id,type:"shape-node-lod"},this._setupLODLevels(),this.data.label&&(this.labelObject=this._createLabel(),this.labelObject.userData={nodeId:this.id,type:"shape-label"}),this.update(),this.updateBoundingSphere()}getDefaultData(){return{label:"",shape:"sphere",size:50,color:16777215,type:"shape",lodLevels:[],labelLod:[]}}_setupLODLevels(){var t;if((t=this.lodData)!=null&&t.length)this.lodData.forEach(i=>{const n=this._createRepresentationForLevel(i);n&&this.mesh.addLevel(n,i.distance)});else{const i=this._createRepresentationForLevel({shape:this.shape,gltfUrl:this.gltfUrl,gltfScale:this.data.gltfScale,size:this.size,color:this.color});i&&this.mesh.addLevel(i,0);const n=Math.max(10,(this.size||50)/3),s=this._createMeshForLevel({shape:"box",size:n,color:this.color});s&&this.mesh.addLevel(s,this.data.lodDistanceSimple??700),this.mesh.addLevel(new yt,this.data.lodDistanceHide??1500)}}_createRepresentationForLevel(t){return t.shape==="gltf"&&t.gltfUrl?(()=>{const i=new qi;return i.castShadow=!0,i.receiveShadow=!0,this._loadGltfModelForLevel(t,i),i})():t.shape?this._createMeshForLevel(t):null}_createMeshForLevel(t){let i;const n=Number.isFinite(t.size)?t.size:this.size,s=Math.max(5,n),a=t.shape||"sphere",o=t.color||this.color;switch(a){case"box":i=new Zn(s,s,s);break;case"sphere":default:i=new Sn(s/2,32,16);break}const l=new Ci({color:o,roughness:.7,metalness:.1}),c=new st(i,l);return c.castShadow=!0,c.receiveShadow=!0,c}_loadGltfModelForLevel(t,i){if(!t.gltfUrl||!i)return;new Um().load(t.gltfUrl,s=>{var f;const a=s.scene;a.traverse(m=>{m.isMesh&&(m.castShadow=!0,m.receiveShadow=!0,t.color&&m.material&&(Array.isArray(m.material)?m.material.forEach(v=>{(v.isMeshStandardMaterial||v.isMeshBasicMaterial)&&v.color.set(t.color)}):(m.material.isMeshStandardMaterial||m.material.isMeshBasicMaterial)&&m.material.color.set(t.color)))});const o=new qt().setFromObject(a),l=new M;o.getSize(l);const c=Math.max(l.x,l.y,l.z);let h=1;if(c>0){let m=t.gltfScale??this.data.gltfScale??t.size??this.size;(!Number.isFinite(m)||m<=0)&&(m=50),h=m/c}a.scale.set(h,h,h);const d=new M;for(o.getCenter(d),a.position.sub(d.multiplyScalar(h));i.children.length>0;)i.remove(i.children[0]);i.add(a);const u=this.mesh.levels.find(m=>m.object===i);(u==null?void 0:u.distance)===0&&this.updateBoundingSphere(),(f=this.space)==null||f.emit("node:updated",{node:this,property:"mesh_lod_level_loaded",levelDetail:t})},void 0,s=>{console.error(`ShapeNode: Failed to load GLTF model from ${t.gltfUrl}. Falling back to primitive shape.`,s);const a=t.size||this.size||20,o=t.color||this.color||16711680,l=this._createMeshForLevel({shape:"box",size:a,color:o});for(;i.children.length>0;)i.remove(i.children[0]);i.add(l);const c=this.mesh.levels.find(h=>h.object===i);(c==null?void 0:c.distance)===0&&this.updateBoundingSphere()})}updateBoundingSphere(){this._boundingSphere||(this._boundingSphere=new Pi);let t=null;if(this.mesh.levels.length>0&&(t=this.mesh.levels[0].object),t){const i=new qt;if(i.setFromObject(t,!0),!i.isEmpty()&&isFinite(i.min.x)&&isFinite(i.max.x)){const n=new M;i.getSize(n),this._boundingSphere.radius=n.length()/2,this._boundingSphere.center.copy(this.position)}else console.warn(`ShapeNode ${this.id}: Bounding box computation failed for object. Using fallback radius.`),this._boundingSphere.radius=(this.size||50)/2,this._boundingSphere.center.copy(this.position)}else this._boundingSphere.radius=(this.size||50)/2,this._boundingSphere.center.copy(this.position)}_createLabel(){const t={color:"var(--sg-node-text)",backgroundColor:"var(--sg-label-bg, rgba(10, 10, 20, 0.75))",fontSize:"14px"};return uo(this.data.label,this.id,"node-label-3d",t,"shape-label")}update(t){if(this.mesh&&this.mesh.position.copy(this.position),this.labelObject){const i=this.getBoundingSphereRadius()*1.1+10;this.labelObject.position.copy(this.position).y+=i,t!=null&&t._cam&&this.labelObject.quaternion.copy(t._cam.quaternion),ra(this.labelObject,this.data.labelLod,t)}}getBoundingSphereRadius(){var t,i;return(!this._boundingSphere||this.shape==="gltf"&&((t=this.mesh)==null?void 0:t.children.length)===0&&this._boundingSphere.radius===0)&&this.updateBoundingSphere(),((i=this._boundingSphere)==null?void 0:i.radius)??this.size/2}setSelectedStyle(t){var i,n;this.isSelected=t,this.mesh instanceof No&&this.mesh.levels.forEach(s=>{var a;(a=s.object)==null||a.traverse(o=>{var l,c;o.isMesh&&o.material&&((l=o.material.emissive)==null||l.setHex(t?16776960:0),o.material.emissiveIntensity=t&&((c=o.material.emissive)==null?void 0:c.getHex())!==0?1:0)})}),(n=(i=this.labelObject)==null?void 0:i.element)==null||n.classList.toggle("selected",t),t&&this.isHovered&&this.setHoverStyle(!1,!0)}setHoverStyle(t,i=!1){var n,s;!i&&this.isSelected||(this.isHovered=t,this.mesh instanceof No&&this.mesh.levels.forEach(a=>{var o;(o=a.object)==null||o.traverse(l=>{var c;if(l.isMesh&&l.material){const h=t&&!this.isSelected?2236928:0,d=t&&!this.isSelected?.4:0;(c=l.material.emissive)==null||c.setHex(h),l.material.emissiveIntensity=h!==0?d:0}})}),this.isSelected||(s=(n=this.labelObject)==null?void 0:n.element)==null||s.classList.toggle("hovered",t))}dispose(){var t,i,n,s,a;this.mesh&&(this.mesh instanceof No?this.mesh.levels.forEach(o=>{var l;(l=o.object)==null||l.traverse(c=>{var h,d;c.isMesh&&((h=c.geometry)==null||h.dispose(),Array.isArray(c.material)?c.material.forEach(u=>u.dispose()):(d=c.material)==null||d.dispose())})}):((t=this.mesh.geometry)==null||t.dispose(),Array.isArray(this.mesh.material)?this.mesh.material.forEach(o=>o.dispose()):(i=this.mesh.material)==null||i.dispose()),(n=this.mesh.parent)==null||n.remove(this.mesh),this.mesh=null),(a=(s=this.labelObject)==null?void 0:s.element)==null||a.remove(),this.labelObject=null,super.dispose()}}E(Ji,"typeName","shape");const wC=new Em;class qa extends _s{constructor(t,i,n={},s=1){super(t,i,n,s);E(this,"imageUrl",null);E(this,"imageSize",{width:100,height:100});this.nodeType="ImageNode",this.imageUrl=this.data.imageUrl||null,typeof this.data.size=="number"?this.imageSize={width:this.data.size,height:this.data.size}:typeof this.data.size=="object"&&this.data.size.width&&this.data.size.height?this.imageSize={...this.data.size}:this.imageSize={width:100,height:100},this.mesh=this._createMesh(),this.mesh.userData={nodeId:this.id,type:"image-node"},this.imageUrl?this._loadImageTexture():this.mesh.material=new Ci({color:5592405,side:$t}),this.data.label&&(this.labelObject=this._createLabel()),this.update(),this.updateBoundingSphere()}getDefaultData(){return{label:"",imageUrl:null,size:100,type:"image",color:16777215}}_createMesh(){const t=new ys(1,1),i=new Ci({color:this.data.color||16777215,side:$t,transparent:!0}),n=new st(t,i);return n.castShadow=!0,n.receiveShadow=!0,n}_loadImageTexture(){!this.imageUrl||!this.mesh||wC.load(this.imageUrl,t=>{var a;t.colorSpace=et,this.mesh.material.map=t,this.mesh.material.needsUpdate=!0;const i=t.image.width/t.image.height;let n,s;if(typeof this.data.size=="number"){const o=this.data.size;[n,s]=i>=1?[o,o/i]:[o*i,o]}else{n=this.imageSize.width,s=this.imageSize.height;const o=this.data.size||100;this.imageSize.width===this.imageSize.height&&this.imageSize.width===o&&([n,s]=i>=1?[o,o/i]:[o*i,o])}this.mesh.scale.set(n,s,1),this.imageSize={width:n,height:s},this.updateBoundingSphere(),(a=this.space)==null||a.emit("node:updated",{node:this,property:"mesh"})},void 0,()=>{this.mesh.material.color.set(16711680)})}updateBoundingSphere(){if(this.mesh){this._boundingSphere||(this._boundingSphere=new Pi);const{x:t,y:i}=this.mesh.scale;this._boundingSphere.radius=Math.sqrt(t*t+i*i)/2,this._boundingSphere.center.copy(this.position)}}_createLabel(){const t={color:"var(--sg-node-text)",backgroundColor:"var(--sg-label-bg, rgba(10, 10, 20, 0.75))",fontSize:"14px"};return uo(this.data.label,this.id,"node-label-3d",t,"shape-label")}update(t){if(super.update(t),this.labelObject&&this.mesh){const i=this.mesh.scale.y/2+20;this.labelObject.position.copy(this.position),this.labelObject.position.y+=i,t!=null&&t._cam&&this.labelObject.quaternion.copy(t._cam.quaternion),ra(this.labelObject,this.data.labelLod,t)}}setSelectedStyle(t){var i,n;super.setSelectedStyle(t),(n=(i=this.labelObject)==null?void 0:i.element)==null||n.classList.toggle("selected",t)}dispose(){var t,i,n;(n=(i=(t=this.mesh)==null?void 0:t.material)==null?void 0:i.map)==null||n.dispose(),super.dispose()}}E(qa,"typeName","image");const on=class on extends _s{constructor(t,i,n={},s=1.2){super(t,i,n,s);E(this,"htmlElement",null);E(this,"videoElement",null);E(this,"size",{width:on.DEFAULT_WIDTH,height:on.DEFAULT_HEIGHT});this.size={width:this.data.width??on.DEFAULT_WIDTH,height:this.data.height??on.DEFAULT_HEIGHT},this.htmlElement=this._createElement(),this.cssObject=new sa(this.htmlElement),this.cssObject.userData={nodeId:this.id,type:"video-node"},this.update()}getDefaultData(){return{label:"Video Node",videoUrl:"",videoType:"video/mp4",autoplay:!1,loop:!1,controls:!0,muted:!1,width:on.DEFAULT_WIDTH,height:on.DEFAULT_HEIGHT,type:"video",backgroundColor:"var(--sg-node-bg, #111)"}}_createElement(){const t=document.createElement("div");t.className="node-video node-common",t.id=`node-video-${this.id}`,t.dataset.nodeId=this.id,Object.assign(t.style,{width:`${this.size.width}px`,height:`${this.size.height}px`,backgroundColor:this.data.backgroundColor}),t.draggable=!1,t.ondragstart=n=>n.preventDefault(),this.videoElement=document.createElement("video"),Object.assign(this.videoElement.style,{width:"100%",height:"100%"}),this.videoElement.src=this.data.videoUrl,this.videoElement.type=this.data.videoType,this.data.autoplay&&(this.videoElement.autoplay=!0),this.data.loop&&(this.videoElement.loop=!0),this.data.controls&&(this.videoElement.controls=!0),this.data.muted&&(this.videoElement.muted=!0),this.videoElement.addEventListener("pointerdown",n=>n.stopPropagation()),this.videoElement.addEventListener("click",n=>n.stopPropagation()),this.videoElement.addEventListener("dblclick",n=>n.stopPropagation());const i=document.createElement("div");return i.className="node-title",i.textContent=this.data.label,Object.assign(i.style,{textAlign:"center",padding:"2px",fontSize:"12px",color:"var(--sg-node-text-light, #eee)",backgroundColor:"rgba(0,0,0,0.3)"}),t.appendChild(i),t.appendChild(this.videoElement),t}setVideoUrl(t,i){this.data.videoUrl=t,i&&(this.data.videoType=i),this.videoElement&&(this.videoElement.src=t,i&&(this.videoElement.type=i))}update(t){var i;this.cssObject&&(this.cssObject.position.copy(this.position),this.data.billboard&&((i=t==null?void 0:t.camera)!=null&&i._cam)&&this.cssObject.quaternion.copy(t.camera._cam.quaternion))}getBoundingSphereRadius(){return Math.sqrt(this.size.width**2+this.size.height**2)/2}setSelectedStyle(t){var i;(i=this.htmlElement)==null||i.classList.toggle("selected",t)}dispose(){this.videoElement&&(this.videoElement.pause(),this.videoElement.src="",this.videoElement.load()),super.dispose()}};E(on,"typeName","video"),E(on,"DEFAULT_WIDTH",320),E(on,"DEFAULT_HEIGHT",240);let Xr=on;const ln=class ln extends _s{constructor(t,i,n={},s=1.3){super(t,i,n,s);E(this,"htmlElement",null);E(this,"iframeElement",null);E(this,"size",{width:ln.DEFAULT_WIDTH,height:ln.DEFAULT_HEIGHT});this.size={width:this.data.width??ln.DEFAULT_WIDTH,height:this.data.height??ln.DEFAULT_HEIGHT},this.htmlElement=this._createElement(),this.cssObject=new sa(this.htmlElement),this.cssObject.userData={nodeId:this.id,type:"iframe-node"},this.update()}getDefaultData(){return{label:"IFrame Node",iframeUrl:"https://threejs.org",width:ln.DEFAULT_WIDTH,height:ln.DEFAULT_HEIGHT,type:"iframe",backgroundColor:"var(--sg-node-bg, #202025)",borderColor:"var(--sg-node-border-focus, #557799)"}}_createElement(){const t=document.createElement("div");t.className="node-iframe node-common",t.id=`node-iframe-${this.id}`,t.dataset.nodeId=this.id,Object.assign(t.style,{width:`${this.size.width}px`,height:`${this.size.height}px`,backgroundColor:this.data.backgroundColor,border:`1px solid ${this.data.borderColor}`}),t.draggable=!1,t.ondragstart=n=>n.preventDefault();const i=document.createElement("div");return i.className="node-title iframe-title-bar",i.textContent=this.data.label,Object.assign(i.style,{padding:"4px",textAlign:"center",fontSize:"12px",color:"var(--sg-node-text-light, #eee)",backgroundColor:"rgba(0,0,0,0.4)",position:"absolute",top:"0",left:"0",width:"calc(100% - 8px)",zIndex:"1",pointerEvents:"none"}),this.iframeElement=document.createElement("iframe"),Object.assign(this.iframeElement.style,{width:"100%",height:"100%",border:"none",pointerEvents:"auto"}),this.data.sandbox&&(this.iframeElement.sandbox=this.data.sandbox),this.iframeElement.src=this.data.iframeUrl,this.iframeElement.addEventListener("pointerdown",n=>n.stopPropagation()),this.iframeElement.addEventListener("wheel",n=>n.stopPropagation(),{passive:!1}),t.appendChild(i),t.appendChild(this.iframeElement),t}setIframeUrl(t){this.data.iframeUrl=t,this.iframeElement&&(this.iframeElement.src=t)}update(t){this.cssObject&&(this.cssObject.position.copy(this.position),this.data.billboard&&(t!=null&&t._cam)&&this.cssObject.quaternion.copy(t._cam.quaternion))}getBoundingSphereRadius(){return Math.sqrt(this.size.width**2+this.size.height**2)/2}setSelectedStyle(t){var i;(i=this.htmlElement)==null||i.classList.toggle("selected",t),this.htmlElement.style.borderColor=t?"var(--sg-selected-color1, #00ffff)":this.data.borderColor}dispose(){this.iframeElement&&(this.iframeElement.src="about:blank"),super.dispose()}};E(ln,"typeName","iframe"),E(ln,"DEFAULT_WIDTH",480),E(ln,"DEFAULT_HEIGHT",360);let qr=ln;class Za extends gt{constructor(t,i,n={},s=1.5){const a={width:n.width??300,height:n.height??200,label:n.label??"Group",content:"",type:"group",backgroundColor:n.backgroundColor??"rgba(50, 50, 70, 0.3)",borderColor:n.borderColor??"rgba(150, 150, 180, 0.5)",collapsible:n.collapsible??!0,defaultCollapsed:n.defaultCollapsed??!1,headerColor:n.headerColor??"rgba(0,0,0,0.2)",children:n.children||[],...n};super(t,i,a,s);E(this,"isCollapsed",!1);E(this,"childNodeIds",new Set);this.isCollapsed=a.defaultCollapsed,a.children.forEach(o=>this.childNodeIds.add(o)),this._setupGroupElement(),this.updateGroupAppearance()}getDefaultData(){return{...super.getDefaultData(),label:"Group",type:"group",width:300,height:200,content:"",backgroundColor:"rgba(50, 50, 70, 0.3)",borderColor:"rgba(150, 150, 180, 0.5)",collapsible:!0,defaultCollapsed:!1,headerColor:"rgba(0,0,0,0.2)",children:[],padding:this.data.padding??15}}_setupGroupElement(){var a;(a=ue(".node-controls",this.htmlElement))==null||a.remove();const t=ue(".node-content",this.htmlElement);t&&(t.innerHTML="",t.style.overflow="hidden"),this.htmlElement.style.setProperty("--node-bg",this.data.backgroundColor),this.htmlElement.style.border=`1px dashed ${this.data.borderColor}`,this.htmlElement.style.boxSizing="border-box";const i=document.createElement("div");i.className="group-node-header",Object.assign(i.style,{padding:"5px",backgroundColor:this.data.headerColor,cursor:this.data.collapsible?"pointer":"default",display:"flex",justifyContent:"space-between",alignItems:"center",borderBottom:`1px solid ${this.data.borderColor}`});const n=document.createElement("span");if(n.className="group-node-title",n.textContent=this.data.label,n.style.fontWeight="bold",i.appendChild(n),this.data.collapsible){const o=document.createElement("button");o.className="group-node-collapse-button",Object.assign(o.style,{background:"transparent",border:"1px solid #fff",color:"#fff",borderRadius:"3px",cursor:"pointer",padding:"2px 5px"}),o.textContent=this.isCollapsed?"⊕":"⊖",o.title=this.isCollapsed?"Expand":"Collapse",o.addEventListener("click",l=>{l.stopPropagation(),this.toggleCollapse()}),i.appendChild(o)}const s=ue(".node-inner-wrapper",this.htmlElement);s?s.insertBefore(i,s.firstChild):this.htmlElement.insertBefore(i,this.htmlElement.firstChild)}toggleCollapse(){var t,i,n;this.data.collapsible&&(this.isCollapsed=!this.isCollapsed,this.updateGroupAppearance(),this._updateChildNodeVisibility(),(t=this.space)==null||t.emit("node:group:stateChanged",{groupNode:this,isCollapsed:this.isCollapsed}),(n=(i=this.space)==null?void 0:i.plugins.getPlugin("LayoutPlugin"))==null||n.kick())}updateGroupAppearance(){const t=ue(".group-node-collapse-button",this.htmlElement);t&&(t.textContent=this.isCollapsed?"⊕":"⊖",t.title=this.isCollapsed?"Expand":"Collapse")}_updateChildNodeVisibility(){var i;const t=(i=this.space)==null?void 0:i.plugins.getPlugin("NodePlugin");t&&this.childNodeIds.forEach(n=>{const s=t.getNodeById(n);if(s){const a=!this.isCollapsed;s.mesh&&(s.mesh.visible=a),s.cssObject&&(s.cssObject.visible=a),s.labelObject&&(s.labelObject.visible=a)}})}addChild(t){this.childNodeIds.has(t)||t===this.id||(this.childNodeIds.add(t),this._updateChildNodeVisibility())}removeChild(t){var s;if(!this.childNodeIds.has(t))return;const i=(s=this.space)==null?void 0:s.plugins.getPlugin("NodePlugin"),n=i==null?void 0:i.getNodeById(t);n&&(n.mesh&&(n.mesh.visible=!0),n.cssObject&&(n.cssObject.visible=!0),n.labelObject&&(n.labelObject.visible=!0)),this.childNodeIds.delete(t)}getChildNodes(){var i;const t=(i=this.space)==null?void 0:i.plugins.getPlugin("NodePlugin");return t?Array.from(this.childNodeIds).map(n=>t.getNodeById(n)).filter(n=>n!=null):[]}update(t){super.update(t)}getBoundingSphereRadius(){return super.getBoundingSphereRadius()}dispose(){this.childNodeIds.clear(),super.dispose()}}E(Za,"typeName","group");const Rp=100,Dp="#222227",tl="#eeeeee";class Ya extends _s{constructor(t,i,n={},s=1.2){super(t,i,n,s);E(this,"canvas",null);E(this,"ctx",null);E(this,"texture",null);this.size=this.data.size||Rp,this._setupCanvas(),this._createChartMesh(),this.data.label&&(this.labelObject=this._createLabel()),this.update(),this.updateBoundingSphere()}getDefaultData(){return{label:"Data Node",type:"data",size:Rp,chartType:"bar",chartData:[{label:"A",value:10,color:"#ff6384"},{label:"B",value:20,color:"#36a2eb"},{label:"C",value:15,color:"#ffce56"}],chartBackgroundColor:Dp,chartTextColor:tl}}_setupCanvas(){this.canvas=document.createElement("canvas"),this.canvas.width=256,this.canvas.height=256,this.ctx=this.canvas.getContext("2d"),this.texture=new hm(this.canvas),this.texture.colorSpace=et}_createChartMesh(){const t=new ys(this.size,this.size),i=new Ci({map:this.texture,side:$t,transparent:!0,roughness:.8,metalness:.1});this.mesh=new st(t,i),this.mesh.userData={nodeId:this.id,type:"data-node-mesh"},this.mesh.castShadow=!0,this.mesh.receiveShadow=!0,this._drawChart()}_drawChart(){if(!this.ctx||!this.canvas)return;const{chartType:t,chartData:i,chartBackgroundColor:n,chartTextColor:s}=this.data,{width:a,height:o}=this.canvas;if(this.ctx.fillStyle=n||Dp,this.ctx.fillRect(0,0,a,o),this.ctx.fillStyle=s||tl,this.ctx.strokeStyle=s||tl,this.ctx.font="16px Arial",this.ctx.textAlign="center",!(i!=null&&i.length)){this.ctx.fillText("No Data",a/2,o/2),this.texture.needsUpdate=!0;return}switch(t){case"bar":this._drawBarChart(i,a,o);break;case"line":this.ctx.fillText("Line chart NI",a/2,o/2);break;case"pie":this.ctx.fillText("Pie chart NI",a/2,o/2);break;default:this.ctx.fillText(`Unknown: ${t}`,a/2,o/2)}this.texture.needsUpdate=!0}_drawBarChart(t,i,n){const s=t.length;if(s===0)return;const a=20,o=i-2*a,l=n-2*a-20,c=o/s-5,h=Math.max(...t.map(d=>d.value),0);if(h===0){this.ctx.fillText("All values are 0",i/2,n/2);return}t.forEach((d,u)=>{const f=d.value/h*l,m=a+u*(c+5),v=n-a-f-20;this.ctx.fillStyle=d.color||"#cccccc",this.ctx.fillRect(m,v,c,f),this.ctx.fillStyle=this.data.chartTextColor||tl,this.ctx.fillText(d.label||"",m+c/2,n-a+5)})}updateChartData(t){this.data.chartData=t,this._drawChart()}_createLabel(){const t=document.createElement("div");return t.className="node-label-3d node-common",t.textContent=this.data.label||"",t.dataset.nodeId=this.id,new sa(t)}update(t){if(super.update(t),this.labelObject){const i=this.getBoundingSphereRadius()*1.1+15;this.labelObject.position.copy(this.position).y+=i,t!=null&&t._cam&&this.labelObject.quaternion.copy(t._cam.quaternion)}}updateBoundingSphere(){this.mesh&&(this.mesh.geometry.boundingSphere||this.mesh.geometry.computeBoundingSphere(),this._boundingSphere=this.mesh.geometry.boundingSphere.clone(),this._boundingSphere.center.copy(this.position),this._boundingSphere.radius=this.size/2*Math.sqrt(2))}setSelectedStyle(t){var i,n,s,a;(i=this.mesh)!=null&&i.material&&((n=this.mesh.material.emissive)==null||n.setHex(t?3355392:0)),(a=(s=this.labelObject)==null?void 0:s.element)==null||a.classList.toggle("selected",t)}dispose(){var t;super.dispose(),(t=this.texture)==null||t.dispose(),this.canvas=null,this.ctx=null,this.texture=null}}E(Ya,"typeName","data");const Rl=class Rl extends gt{constructor(e,t,i={content:""}){super(e,t,bt.mergeDeep({type:Rl.typeName,editable:!0},i))}};E(Rl,"typeName","note");let dn=Rl;const Ra=class Ra extends _s{constructor(t,i,n={},s=1){super(t,i,n,s);E(this,"audioContext",null);E(this,"audioBuffer",null);E(this,"sourceNode",null);E(this,"gainNode",null);E(this,"isPlaying",!1);this.mesh=this.createMesh(),this.mesh.userData={nodeId:this.id,type:Ra.typeName},this.update(),this.data.audioUrl&&this._loadAudio(this.data.audioUrl)}getDefaultData(){return{...super.getDefaultData(),label:"Audio Node",audioUrl:"",autoplay:!1,loop:!1,volume:.8,color:52479,size:40}}createMesh(){if(this.mesh)return this.mesh;const t=new Sn(this.data.size*.5,16,12),i=new di({color:this.data.color,wireframe:!0});return this.mesh=new st(t,i),this.mesh.userData={nodeId:this.id,type:Ra.typeName},this.mesh}_loadAudio(t){t&&(this.audioContext=this.audioContext||new(window.AudioContext||window.webkitAudioContext),fetch(t).then(i=>i.arrayBuffer()).then(i=>this.audioContext.decodeAudioData(i)).then(i=>{this.audioBuffer=i,this.data.autoplay&&this.play()}).catch(i=>console.error("Error loading audio:",i)))}play(){var t;this.isPlaying||!this.audioBuffer||!this.audioContext||(this.sourceNode=this.audioContext.createBufferSource(),this.sourceNode.buffer=this.audioBuffer,this.sourceNode.loop=this.data.loop,this.gainNode=this.audioContext.createGain(),this.gainNode.gain.value=this.data.volume,this.sourceNode.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination),this.sourceNode.start(0),this.isPlaying=!0,this.sourceNode.onended=()=>{var i;this.isPlaying=!1,this.sourceNode=null,this.gainNode=null,this.data.loop||(i=this.space)==null||i.emit("node:audio:ended",{node:this})},(t=this.space)==null||t.emit("node:audio:played",{node:this}))}pause(){var t;!this.isPlaying||!this.sourceNode||(this.sourceNode.stop(),this.isPlaying=!1,(t=this.space)==null||t.emit("node:audio:paused",{node:this}))}setVolume(t){this.data.volume=t,this.gainNode&&(this.gainNode.gain.value=t)}setAudioUrl(t){this.data.audioUrl!==t&&(this.pause(),this.data.audioUrl=t,this._loadAudio(t))}dispose(){this.pause(),this.audioContext&&(this.audioContext.close(),this.audioContext=null),this.audioBuffer=null,super.dispose()}};E(Ra,"typeName","audio");let Zr=Ra;const Dl=class Dl extends _s{constructor(t,i,n={},s=1){super(t,i,n,s);E(this,"labelObject",null);this.mesh=this.createMesh(),this.mesh.userData={nodeId:this.id,type:Dl.typeName},(this.data.label||this.data.icon)&&(this.labelObject=this._createLabel()),this.update()}getDefaultData(){return{...super.getDefaultData(),label:"Document Node",documentUrl:"",icon:"📄",color:16763904,size:50,labelLod:[]}}createMesh(){if(this.mesh)return this.mesh;const t=new Zn(this.data.size,this.data.size*1.2,5),i=new Ci({color:this.data.color,roughness:.7,metalness:.1});return this.mesh=new st(t,i),this.mesh.castShadow=!0,this.mesh.receiveShadow=!0,this.mesh}_createLabel(){const t=this.data.icon?`${this.data.icon} ${this.data.label}`:this.data.label,i={color:"var(--sg-node-text)",backgroundColor:"var(--sg-label-bg, rgba(10, 10, 20, 0.75))",fontSize:"14px",padding:"5px 10px",borderRadius:"5px"};return uo(t,this.id,"node-label-3d",i,"document-label")}update(t){if(super.update(t),this.labelObject&&this.mesh){const i=this.getBoundingSphereRadius()*1.1+10;this.labelObject.position.copy(this.position).y+=i,t!=null&&t._cam&&this.labelObject.quaternion.copy(t._cam.quaternion),ra(this.labelObject,this.data.labelLod,t)}}getBoundingSphereRadius(){return Math.sqrt((this.data.size/2)**2+(this.data.size*1.2/2)**2)}viewDocument(){var t;this.data.documentUrl?((t=this.space)==null||t.emit("node:document:view",{node:this,url:this.data.documentUrl}),console.log(`DocumentNode: Request to view document at ${this.data.documentUrl}`)):console.warn(`DocumentNode: No documentUrl specified for node ${this.id}`)}setSelectedStyle(t){var i,n,s,a;(i=this.mesh)!=null&&i.material&&((n=this.mesh.material.emissive)==null||n.setHex(t?3355392:0)),(a=(s=this.labelObject)==null?void 0:s.element)==null||a.classList.toggle("selected",t)}dispose(){var t,i,n,s;(i=(t=this.labelObject)==null?void 0:t.element)==null||i.remove(),(s=(n=this.labelObject)==null?void 0:n.parent)==null||s.remove(this.labelObject),this.labelObject=null,super.dispose()}};E(Dl,"typeName","document");let Yr=Dl;const Nl=class Nl extends gt{constructor(e,t,i={},n=1){const s={labels:["Jan","Feb","Mar","Apr","May"],datasets:[{label:"Sales",data:[65,59,80,81,56],backgroundColor:["rgba(255, 99, 132, 0.7)","rgba(54, 162, 235, 0.7)","rgba(255, 206, 86, 0.7)","rgba(75, 192, 192, 0.7)","rgba(153, 102, 255, 0.7)"],borderColor:["rgba(255, 99, 132, 1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)"],borderWidth:1}]},a={responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1,labels:{color:"white"}}},scales:{x:{ticks:{color:"white"},grid:{color:"rgba(255,255,255,0.1)"}},y:{ticks:{color:"white"},grid:{color:"rgba(255,255,255,0.1)"}}}},o={...i,label:i.label??"Chart Node",width:i.width??300,height:i.height??200,chartType:i.chartType??"bar",chartData:i.chartData?{...s,...i.chartData}:s,chartOptions:i.chartOptions?{...a,...i.chartOptions}:a,editable:!1,backgroundColor:i.backgroundColor??"#2a2a2b",type:Nl.typeName};super(e,t,o,n),this.htmlElement.classList.add("node-chart"),this._renderChart()}getDefaultData(){return{...super.getDefaultData(),label:"Chart Node",width:300,height:200,chartType:"bar",chartData:{},chartOptions:{},backgroundColor:"#2a2a2b"}}_renderChart(){const e=`chart-canvas-${this.id}`,t=this.htmlElement.querySelector(".node-content");if(!t)return;t.innerHTML=`<canvas id="${e}" style="width:100%; height:100%;"></canvas>`;const i=t.querySelector(`#${e}`);if(typeof Chart>"u"){const n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js",n.onload=()=>this._initializeChart(i),document.head.appendChild(n)}else this._initializeChart(i)}_initializeChart(e){if(!e||typeof Chart>"u")return;this.chartInstance&&this.chartInstance.destroy();const t=document.body.classList.contains("theme-light"),i=JSON.parse(JSON.stringify(this.data.chartOptions));t&&(i.plugins.legend.labels.color="black",i.scales.x.ticks.color="black",i.scales.x.grid.color="rgba(0,0,0,0.1)",i.scales.y.ticks.color="black",i.scales.y.grid.color="rgba(0,0,0,0.1)"),this.chartInstance=new Chart(e,{type:this.data.chartType,data:this.data.chartData,options:i})}setBackgroundColor(e){super.setBackgroundColor(e),this._renderChart()}updateChartData(e){var t;this.data.chartData={...this.data.chartData,...e},this.chartInstance?(this.chartInstance.data=this.data.chartData,this.chartInstance.update()):this._renderChart(),(t=this.space)==null||t.emit("graph:node:dataChanged",{node:this,property:"chartData",value:this.data.chartData})}dispose(){this.chartInstance&&(this.chartInstance.destroy(),this.chartInstance=null),super.dispose()}};E(Nl,"typeName","chart");let Kr=Nl;class Ka extends gt{constructor(t,i,n={},s=1){const a={width:n.width??280,height:n.height??200,title:n.title??"Control Panel",controls:n.controls??[],theme:n.theme??"dark",backgroundColor:n.backgroundColor??"rgba(20, 25, 40, 0.95)",...n};super(t,i,a,s);E(this,"controls",new Map);E(this,"values",new Map);this._initializeControls(),this._bindEvents()}getDefaultData(){return{...super.getDefaultData(),type:"control-panel",title:"Control Panel",controls:[],theme:"dark",backgroundColor:"rgba(20, 25, 40, 0.95)"}}_createElement(){const t=document.createElement("div");return t.className=`node-control-panel node-common theme-${this.data.theme}`,t.id=`node-control-panel-${this.id}`,t.dataset.nodeId=this.id,t.style.width=`${this.size.width}px`,t.style.height=`${this.size.height}px`,t.draggable=!1,t.innerHTML=`
            <div class="control-panel-header">
                <h3 class="panel-title">${this.data.title}</h3>
                <div class="panel-actions">
                    <button class="panel-minimize" title="Minimize">−</button>
                    <button class="panel-close" title="Close">×</button>
                </div>
            </div>
            <div class="control-panel-body">
                <div class="controls-container"></div>
            </div>
            <style>
                .node-control-panel {
                    background: ${this.data.backgroundColor};
                    border: 1px solid rgba(255,255,255,0.2);
                    border-radius: 8px;
                    backdrop-filter: blur(10px);
                    font-family: 'Segoe UI', sans-serif;
                    color: white;
                    overflow: hidden;
                    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
                }
                .control-panel-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 8px 12px;
                    background: rgba(0,0,0,0.2);
                    border-bottom: 1px solid rgba(255,255,255,0.1);
                }
                .panel-title {
                    margin: 0;
                    font-size: 14px;
                    font-weight: 600;
                    color: #fff;
                }
                .panel-actions {
                    display: flex;
                    gap: 4px;
                }
                .panel-actions button {
                    background: rgba(255,255,255,0.1);
                    border: none;
                    color: white;
                    width: 24px;
                    height: 24px;
                    border-radius: 4px;
                    cursor: pointer;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 16px;
                    transition: background 0.2s;
                }
                .panel-actions button:hover {
                    background: rgba(255,255,255,0.2);
                }
                .control-panel-body {
                    padding: 12px;
                    height: calc(100% - 50px);
                    overflow-y: auto;
                }
                .control-group {
                    margin-bottom: 16px;
                }
                .control-label {
                    display: block;
                    font-size: 12px;
                    margin-bottom: 6px;
                    color: rgba(255,255,255,0.8);
                    font-weight: 500;
                }
                .control-input {
                    width: 100%;
                    padding: 6px 8px;
                    background: rgba(255,255,255,0.1);
                    border: 1px solid rgba(255,255,255,0.2);
                    border-radius: 4px;
                    color: white;
                    font-size: 13px;
                }
                .control-input:focus {
                    outline: none;
                    border-color: #4a9eff;
                    box-shadow: 0 0 0 2px rgba(74,158,255,0.2);
                }
                .control-slider {
                    width: 100%;
                    height: 6px;
                    background: rgba(255,255,255,0.2);
                    border-radius: 3px;
                    outline: none;
                    appearance: none;
                    cursor: pointer;
                }
                .control-slider::-webkit-slider-thumb {
                    appearance: none;
                    width: 18px;
                    height: 18px;
                    background: #4a9eff;
                    border-radius: 50%;
                    cursor: pointer;
                    box-shadow: 0 2px 6px rgba(0,0,0,0.3);
                }
                .control-button {
                    width: 100%;
                    padding: 8px 12px;
                    background: linear-gradient(135deg, #4a9eff, #357abd);
                    border: none;
                    border-radius: 4px;
                    color: white;
                    font-size: 13px;
                    font-weight: 500;
                    cursor: pointer;
                    transition: all 0.2s;
                }
                .control-button:hover {
                    transform: translateY(-1px);
                    box-shadow: 0 4px 12px rgba(74,158,255,0.3);
                }
                .control-button:active {
                    transform: translateY(0);
                }
                .control-value {
                    float: right;
                    font-size: 11px;
                    color: #4a9eff;
                    font-weight: 600;
                }
                .control-switch {
                    position: relative;
                    width: 44px;
                    height: 24px;
                    margin: 0;
                }
                .control-switch input {
                    opacity: 0;
                    width: 0;
                    height: 0;
                }
                .control-switch .slider {
                    position: absolute;
                    cursor: pointer;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: rgba(255,255,255,0.2);
                    transition: 0.3s;
                    border-radius: 24px;
                }
                .control-switch .slider:before {
                    position: absolute;
                    content: "";
                    height: 18px;
                    width: 18px;
                    left: 3px;
                    bottom: 3px;
                    background-color: white;
                    transition: 0.3s;
                    border-radius: 50%;
                }
                .control-switch input:checked + .slider {
                    background-color: #4a9eff;
                }
                .control-switch input:checked + .slider:before {
                    transform: translateX(20px);
                }
            </style>
        `,this._setupPanelInteractions(t),t}_setupPanelInteractions(t){const i=ue(".panel-minimize",t),n=ue(".panel-close",t),s=ue(".control-panel-body",t);i==null||i.addEventListener("click",a=>{a.stopPropagation();const o=s.style.display==="none";s.style.display=o?"block":"none",i.textContent=o?"−":"+",this.setSize(this.size.width,o?this.size.height:50)}),n==null||n.addEventListener("click",a=>{var o;a.stopPropagation(),(o=this.space)==null||o.emit("graph:node:delete",{node:this})})}_initializeControls(){const t=ue(".controls-container",this.htmlElement);t&&this.data.controls.forEach(i=>{const n=this._createControl(i);n&&(t.appendChild(n),this.controls.set(i.id,n),this.values.set(i.id,i.value??i.defaultValue??0))})}_createControl(t){const i=document.createElement("div");i.className="control-group";const n=document.createElement("label");if(n.className="control-label",n.textContent=t.label,t.showValue!==!1&&(t.type==="slider"||t.type==="number")){const a=document.createElement("span");a.className="control-value",a.textContent=t.value??t.defaultValue??0,n.appendChild(a)}i.appendChild(n);let s;switch(t.type){case"slider":s=this._createSlider(t);break;case"button":s=this._createButton(t);break;case"switch":s=this._createSwitch(t);break;case"text":s=this._createTextInput(t);break;case"number":s=this._createNumberInput(t);break;case"select":s=this._createSelect(t);break;default:return null}return s?(i.appendChild(s),i):null}_createSlider(t){const i=document.createElement("input");return i.type="range",i.className="control-slider",i.min=t.min??0,i.max=t.max??100,i.step=t.step??1,i.value=t.value??t.defaultValue??0,i.addEventListener("input",n=>{const s=parseFloat(n.target.value);this.values.set(t.id,s);const a=n.target.parentNode.querySelector(".control-value");a&&(a.textContent=s),this._emitControlChange(t.id,s,t)}),i}_createButton(t){const i=document.createElement("button");return i.className="control-button",i.textContent=t.text??t.label,i.addEventListener("click",n=>{n.stopPropagation(),this._emitControlChange(t.id,!0,t)}),i}_createSwitch(t){const i=document.createElement("label");i.className="control-switch";const n=document.createElement("input");n.type="checkbox",n.checked=t.value??t.defaultValue??!1;const s=document.createElement("span");return s.className="slider",i.appendChild(n),i.appendChild(s),n.addEventListener("change",a=>{const o=a.target.checked;this.values.set(t.id,o),this._emitControlChange(t.id,o,t)}),i}_createTextInput(t){const i=document.createElement("input");return i.type="text",i.className="control-input",i.value=t.value??t.defaultValue??"",i.placeholder=t.placeholder??"",i.addEventListener("input",n=>{const s=n.target.value;this.values.set(t.id,s),this._emitControlChange(t.id,s,t)}),i.addEventListener("pointerdown",n=>n.stopPropagation()),i}_createNumberInput(t){const i=document.createElement("input");return i.type="number",i.className="control-input",i.value=t.value??t.defaultValue??0,i.min=t.min??"",i.max=t.max??"",i.step=t.step??"any",i.addEventListener("input",n=>{const s=parseFloat(n.target.value)||0;this.values.set(t.id,s);const a=n.target.parentNode.querySelector(".control-value");a&&(a.textContent=s),this._emitControlChange(t.id,s,t)}),i.addEventListener("pointerdown",n=>n.stopPropagation()),i}_createSelect(t){const i=document.createElement("select");return i.className="control-input",(t.options??[]).forEach(n=>{const s=document.createElement("option");s.value=n.value??n,s.textContent=n.label??n,i.appendChild(s)}),i.value=t.value??t.defaultValue??"",i.addEventListener("change",n=>{const s=n.target.value;this.values.set(t.id,s),this._emitControlChange(t.id,s,t)}),i.addEventListener("pointerdown",n=>n.stopPropagation()),i}_emitControlChange(t,i,n){var s;(s=this.space)==null||s.emit("graph:node:controlChanged",{node:this,controlId:t,value:i,control:n,allValues:Object.fromEntries(this.values)})}_bindEvents(){this.htmlElement.addEventListener("pointerdown",t=>{t.target.closest(".control-input, .control-slider, .control-button, .control-switch")||t.stopPropagation()})}setValue(t,i){if(!this.controls.has(t))return;this.values.set(t,i);const n=this.controls.get(t);if(!n)return;const s=n.querySelector("input, select, button");if(s)if(s.type==="checkbox")s.checked=i;else if(s.type==="range"||s.type==="number"){s.value=i;const a=n.querySelector(".control-value");a&&(a.textContent=i)}else s.value=i}getValue(t){return this.values.get(t)}getAllValues(){return Object.fromEntries(this.values)}addControl(t){this.data.controls.push(t);const i=ue(".controls-container",this.htmlElement);if(i){const n=this._createControl(t);n&&(i.appendChild(n),this.controls.set(t.id,n),this.values.set(t.id,t.value??t.defaultValue??0))}}removeControl(t){const i=this.controls.get(t);i&&(i.remove(),this.controls.delete(t),this.values.delete(t)),this.data.controls=this.data.controls.filter(n=>n.id!==t)}}E(Ka,"typeName","control-panel");class wr extends gt{constructor(e,t,i={},n=1){const s={width:i.width??200,height:i.height??80,type:i.progressType??"bar",value:i.value??0,max:i.max??100,min:i.min??0,label:i.label??"",showValue:i.showValue??!0,showPercent:i.showPercent??!0,animated:i.animated??!0,color:i.color??"#4a9eff",backgroundColor:i.backgroundColor??"rgba(30, 35, 50, 0.95)",...i};super(e,t,s,n),this._animationFrame=null}getDefaultData(){return{...super.getDefaultData(),type:"progress",progressType:"bar",value:0,max:100,min:0,label:"",showValue:!0,showPercent:!0,animated:!0,color:"#4a9eff",backgroundColor:"rgba(30, 35, 50, 0.95)"}}_createElement(){const e=document.createElement("div");return e.className="node-progress node-common",e.id=`node-progress-${this.id}`,e.dataset.nodeId=this.id,e.style.width=`${this.size.width}px`,e.style.height=`${this.size.height}px`,e.draggable=!1,e.innerHTML=`
            <div class="progress-container">
                <!-- Content will be populated by _updateProgress -->
            </div>
            <style>
                .node-progress {
                    background: ${this.data.backgroundColor};
                    border: 1px solid rgba(255,255,255,0.2);
                    border-radius: 8px;
                    padding: 12px;
                    font-family: 'Segoe UI', sans-serif;
                    color: white;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    backdrop-filter: blur(10px);
                    box-shadow: 0 2px 10px rgba(0,0,0,0.3);
                }
                .progress-container {
                    width: 100%;
                    height: 100%;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    gap: 8px;
                }
                .progress-label {
                    font-size: 14px;
                    font-weight: 600;
                    color: rgba(255,255,255,0.9);
                    margin-bottom: 4px;
                }
                .progress-bar-wrapper {
                    width: 100%;
                    height: 20px;
                    background: rgba(255,255,255,0.1);
                    border-radius: 10px;
                    overflow: hidden;
                    position: relative;
                }
                .progress-bar-fill {
                    height: 100%;
                    background: linear-gradient(90deg, ${this.data.color}, ${this._lightenColor(this.data.color,20)});
                    border-radius: 10px;
                    transition: width 0.3s ease;
                    position: relative;
                    overflow: hidden;
                }
                .progress-bar-fill.animated::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: -100%;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
                    animation: shimmer 1.5s infinite;
                }
                @keyframes shimmer {
                    0% { left: -100%; }
                    100% { left: 100%; }
                }
                .progress-value {
                    font-size: 12px;
                    color: rgba(255,255,255,0.8);
                    margin-top: 4px;
                }
                .progress-circular {
                    position: relative;
                    width: 80px;
                    height: 80px;
                }
                .progress-circular svg {
                    width: 100%;
                    height: 100%;
                    transform: rotate(-90deg);
                }
                .progress-circular-bg {
                    fill: none;
                    stroke: rgba(255,255,255,0.1);
                    stroke-width: 6;
                }
                .progress-circular-fill {
                    fill: none;
                    stroke: ${this.data.color};
                    stroke-width: 6;
                    stroke-linecap: round;
                    transition: stroke-dashoffset 0.3s ease;
                }
                .progress-circular-text {
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    font-size: 14px;
                    font-weight: 600;
                    color: white;
                }
                .progress-gauge {
                    position: relative;
                    width: 100px;
                    height: 60px;
                }
                .progress-gauge svg {
                    width: 100%;
                    height: 100%;
                }
                .progress-gauge-bg {
                    fill: none;
                    stroke: rgba(255,255,255,0.1);
                    stroke-width: 8;
                }
                .progress-gauge-fill {
                    fill: none;
                    stroke: ${this.data.color};
                    stroke-width: 8;
                    stroke-linecap: round;
                    transition: stroke-dashoffset 0.3s ease;
                }
                .progress-gauge-needle {
                    stroke: white;
                    stroke-width: 2;
                    transition: transform 0.3s ease;
                    transform-origin: 50px 50px;
                }
                .progress-gauge-text {
                    position: absolute;
                    bottom: 5px;
                    left: 50%;
                    transform: translateX(-50%);
                    font-size: 12px;
                    color: white;
                }
                .progress-steps {
                    display: flex;
                    align-items: center;
                    gap: 8px;
                    width: 100%;
                }
                .progress-step {
                    width: 20px;
                    height: 20px;
                    border-radius: 50%;
                    background: rgba(255,255,255,0.1);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 10px;
                    font-weight: 600;
                    transition: all 0.3s ease;
                }
                .progress-step.completed {
                    background: ${this.data.color};
                    color: white;
                }
                .progress-step.current {
                    background: ${this.data.color};
                    color: white;
                    transform: scale(1.2);
                    box-shadow: 0 0 10px ${this.data.color}50;
                }
                .progress-step-line {
                    height: 2px;
                    background: rgba(255,255,255,0.1);
                    flex: 1;
                    position: relative;
                    overflow: hidden;
                }
                .progress-step-line.completed {
                    background: ${this.data.color};
                }
            </style>
        `,this._updateProgress(e),e}_generateProgressContent(){const e=this._getPercent();switch(this.data.progressType){case"circular":return this._generateCircularProgress(e);case"gauge":return this._generateGaugeProgress(e);case"steps":return this._generateStepsProgress();case"bar":default:return this._generateBarProgress(e)}}_generateBarProgress(e){return`
            ${this.data.label?`<div class="progress-label">${this.data.label}</div>`:""}
            <div class="progress-bar-wrapper">
                <div class="progress-bar-fill ${this.data.animated?"animated":""}" style="width: ${e}%"></div>
            </div>
            ${this._generateValueText()}
        `}_generateCircularProgress(e){const i=2*Math.PI*32,n=i-e/100*i;return`
            ${this.data.label?`<div class="progress-label">${this.data.label}</div>`:""}
            <div class="progress-circular">
                <svg>
                    <circle class="progress-circular-bg" cx="40" cy="40" r="32"></circle>
                    <circle class="progress-circular-fill" cx="40" cy="40" r="32"
                            style="stroke-dasharray: ${i}; stroke-dashoffset: ${n};"></circle>
                </svg>
                <div class="progress-circular-text">${Math.round(e)}%</div>
            </div>
            ${this.data.showValue?`<div class="progress-value">${this.data.value} / ${this.data.max}</div>`:""}
        `}_generateGaugeProgress(e){const s=-135+e/100*270,a=35,o=50,l=45,c=o+a*Math.cos(-135*Math.PI/180),h=l+a*Math.sin(-135*Math.PI/180),d=o+a*Math.cos(135*Math.PI/180),u=l+a*Math.sin(135*Math.PI/180),f=o+30*Math.cos(s*Math.PI/180),m=l+30*Math.sin(s*Math.PI/180);return`
            ${this.data.label?`<div class="progress-label">${this.data.label}</div>`:""}
            <div class="progress-gauge">
                <svg viewBox="0 0 100 60">
                    <path class="progress-gauge-bg"
                          d="M ${c} ${h} A ${a} ${a} 0 1 1 ${d} ${u}"></path>
                    <path class="progress-gauge-fill"
                          d="M ${c} ${h} A ${a} ${a} 0 ${e>50?1:0} 1 ${f} ${m}"
                          style="stroke-dasharray: ${e/100*Math.PI*a*1.5}; stroke-dashoffset: 0;"></path>
                    <line class="progress-gauge-needle" x1="${o}" y1="${l}" x2="${f}" y2="${m}"></line>
                    <circle cx="${o}" cy="${l}" r="3" fill="white"></circle>
                </svg>
                <div class="progress-gauge-text">${Math.round(e)}%</div>
            </div>
        `}_generateStepsProgress(){const e=this.data.steps??5,t=Math.floor(this.data.value/this.data.max*e);let i="";for(let n=0;n<e;n++){const s=n<t?"completed":n===t?"current":"";if(i+=`<div class="progress-step ${s}">${n+1}</div>`,n<e-1){const a=n<t?"completed":"";i+=`<div class="progress-step-line ${a}"></div>`}}return`
            ${this.data.label?`<div class="progress-label">${this.data.label}</div>`:""}
            <div class="progress-steps">
                ${i}
            </div>
            ${this._generateValueText()}
        `}_generateValueText(){if(!this.data.showValue&&!this.data.showPercent)return"";let e="";return this.data.showValue&&(e+=`${this.data.value} / ${this.data.max}`),this.data.showValue&&this.data.showPercent&&(e+=" • "),this.data.showPercent&&(e+=`${Math.round(this._getPercent())}%`),`<div class="progress-value">${e}</div>`}_getPercent(){const e=this.data.max-this.data.min,t=Math.max(this.data.min,Math.min(this.data.max,this.data.value));return e>0?(t-this.data.min)/e*100:0}_lightenColor(e,t){const i=parseInt(e.replace("#",""),16),n=Math.round(2.55*t),s=(i>>16)+n,a=(i>>8&255)+n,o=(i&255)+n;return"#"+(16777216+(s<255?s<1?0:s:255)*65536+(a<255?a<1?0:a:255)*256+(o<255?o<1?0:o:255)).toString(16).slice(1)}_updateProgress(e){const t=e||this.htmlElement;if(!t)return;const i=ue(".progress-container",t);i&&(i.innerHTML=this._generateProgressContent())}setValue(e){var t;this.data.value=Math.max(this.data.min,Math.min(this.data.max,e)),this._updateProgress(),(t=this.space)==null||t.emit("graph:node:dataChanged",{node:this,property:"value",value:this.data.value})}setMax(e){this.data.max=e,this._updateProgress()}setMin(e){this.data.min=e,this._updateProgress()}increment(e=1){this.setValue(this.data.value+e)}decrement(e=1){this.setValue(this.data.value-e)}animateToValue(e,t=1e3){const i=this.data.value,n=performance.now(),s=a=>{const o=a-n,l=Math.min(o/t,1),c=1-Math.pow(1-l,3),h=i+(e-i)*c;this.setValue(h),l<1?this._animationFrame=requestAnimationFrame(s):this._animationFrame=null};this._animationFrame&&cancelAnimationFrame(this._animationFrame),this._animationFrame=requestAnimationFrame(s)}dispose(){this._animationFrame&&(cancelAnimationFrame(this._animationFrame),this._animationFrame=null),super.dispose()}}E(wr,"typeName","progress");class Cl extends gt{constructor(t,i,n={},s=1){const a={width:n.width??400,height:n.height??300,title:n.title??"Canvas",backgroundColor:n.backgroundColor??"rgba(20, 25, 40, 0.95)",canvasBackground:n.canvasBackground??"#1a1a2e",showToolbar:n.showToolbar??!0,enableDrawing:n.enableDrawing??!0,preserveContent:n.preserveContent??!0,...n};super(t,i,a,s);E(this,"canvas",null);E(this,"ctx",null);E(this,"isDrawing",!1);E(this,"lastDrawPoint",null);E(this,"drawingMode","pen");E(this,"tools",{pen:{color:"#ffffff",size:2},brush:{color:"#ffffff",size:8},eraser:{size:10},line:{color:"#ffffff",size:2},rectangle:{color:"#ffffff",size:2,fill:!1},circle:{color:"#ffffff",size:2,fill:!1}});this._setupCanvas(),this._setupTools(),this._bindCanvasEvents()}getDefaultData(){return{...super.getDefaultData(),type:"canvas",title:"Canvas",backgroundColor:"rgba(20, 25, 40, 0.95)",canvasBackground:"#1a1a2e",showToolbar:!0,enableDrawing:!0,preserveContent:!0}}_createElement(){const t=document.createElement("div");t.className="node-canvas node-common",t.id=`node-canvas-${this.id}`,t.dataset.nodeId=this.id,t.style.width=`${this.size.width}px`,t.style.height=`${this.size.height}px`,t.draggable=!1;const i=this.data.showToolbar?40:0,n=this.size.height-20-i;return t.innerHTML=`
            <div class="canvas-container">
                ${this.data.showToolbar?this._generateToolbar():""}
                <div class="canvas-wrapper" style="height: ${n}px;">
                    <canvas class="drawing-canvas" width="${this.size.width-20}" height="${n}"></canvas>
                </div>
            </div>
            <style>
                .node-canvas {
                    background: ${this.data.backgroundColor};
                    border: 1px solid rgba(255,255,255,0.2);
                    border-radius: 8px;
                    padding: 10px;
                    font-family: 'Segoe UI', sans-serif;
                    color: white;
                    backdrop-filter: blur(10px);
                    box-shadow: 0 2px 10px rgba(0,0,0,0.3);
                    overflow: hidden;
                }
                .canvas-container {
                    width: 100%;
                    height: 100%;
                    display: flex;
                    flex-direction: column;
                }
                .canvas-toolbar {
                    display: flex;
                    align-items: center;
                    gap: 8px;
                    padding: 8px;
                    background: rgba(0,0,0,0.2);
                    border-radius: 4px;
                    margin-bottom: 8px;
                    border: 1px solid rgba(255,255,255,0.1);
                }
                .tool-group {
                    display: flex;
                    align-items: center;
                    gap: 4px;
                    padding: 0 8px;
                    border-right: 1px solid rgba(255,255,255,0.1);
                }
                .tool-group:last-child {
                    border-right: none;
                }
                .tool-button {
                    background: rgba(255,255,255,0.1);
                    border: none;
                    color: white;
                    padding: 6px 8px;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 12px;
                    transition: all 0.2s;
                    min-width: 24px;
                    height: 24px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                .tool-button:hover {
                    background: rgba(255,255,255,0.2);
                }
                .tool-button.active {
                    background: #4a9eff;
                    color: white;
                }
                .tool-slider {
                    width: 60px;
                    height: 20px;
                    background: rgba(255,255,255,0.2);
                    border-radius: 10px;
                    outline: none;
                    appearance: none;
                    cursor: pointer;
                }
                .tool-slider::-webkit-slider-thumb {
                    appearance: none;
                    width: 16px;
                    height: 16px;
                    background: #4a9eff;
                    border-radius: 50%;
                    cursor: pointer;
                }
                .color-picker {
                    width: 24px;
                    height: 24px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    background: none;
                    padding: 0;
                }
                .canvas-wrapper {
                    flex: 1;
                    border: 1px solid rgba(255,255,255,0.2);
                    border-radius: 4px;
                    overflow: hidden;
                    position: relative;
                }
                .drawing-canvas {
                    background: ${this.data.canvasBackground};
                    display: block;
                    cursor: crosshair;
                    width: 100%;
                    height: 100%;
                }
                .drawing-canvas.eraser {
                    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><rect x="2" y="2" width="16" height="16" fill="white" stroke="black" stroke-width="1" rx="2"/></svg>') 10 10, auto;
                }
                .tool-label {
                    font-size: 10px;
                    color: rgba(255,255,255,0.7);
                    margin-right: 4px;
                }
            </style>
        `,t}_generateToolbar(){return`
            <div class="canvas-toolbar">
                <div class="tool-group">
                    <button class="tool-button active" data-tool="pen" title="Pen">✏️</button>
                    <button class="tool-button" data-tool="brush" title="Brush">🖌️</button>
                    <button class="tool-button" data-tool="eraser" title="Eraser">🧹</button>
                </div>
                <div class="tool-group">
                    <button class="tool-button" data-tool="line" title="Line">📏</button>
                    <button class="tool-button" data-tool="rectangle" title="Rectangle">⬜</button>
                    <button class="tool-button" data-tool="circle" title="Circle">⭕</button>
                </div>
                <div class="tool-group">
                    <span class="tool-label">Size:</span>
                    <input type="range" class="tool-slider" id="size-slider" min="1" max="20" value="2">
                </div>
                <div class="tool-group">
                    <span class="tool-label">Color:</span>
                    <input type="color" class="color-picker" id="color-picker" value="#ffffff">
                </div>
                <div class="tool-group">
                    <button class="tool-button" id="clear-canvas" title="Clear">🗑️</button>
                    <button class="tool-button" id="save-canvas" title="Save">💾</button>
                </div>
            </div>
        `}_setupCanvas(){this.canvas=ue(".drawing-canvas",this.htmlElement),this.canvas&&(this.ctx=this.canvas.getContext("2d"),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.data.preserveContent&&this.data.canvasData&&this._loadCanvasData(this.data.canvasData))}_setupTools(){if(!this.data.showToolbar)return;const t=this.htmlElement.querySelectorAll("[data-tool]");t.forEach(o=>{o.addEventListener("click",l=>{l.stopPropagation(),this._setTool(o.dataset.tool),t.forEach(c=>c.classList.remove("active")),o.classList.add("active")})});const i=ue("#size-slider",this.htmlElement);i&&i.addEventListener("input",o=>{o.stopPropagation();const l=parseInt(o.target.value);this.tools[this.drawingMode].size=l});const n=ue("#color-picker",this.htmlElement);n&&n.addEventListener("change",o=>{o.stopPropagation();const l=o.target.value;this.tools[this.drawingMode]&&this.drawingMode!=="eraser"&&(this.tools[this.drawingMode].color=l)});const s=ue("#clear-canvas",this.htmlElement);s&&s.addEventListener("click",o=>{o.stopPropagation(),this.clearCanvas()});const a=ue("#save-canvas",this.htmlElement);a&&a.addEventListener("click",o=>{o.stopPropagation(),this.saveCanvas()})}_bindCanvasEvents(){!this.canvas||!this.data.enableDrawing||(this.canvas.addEventListener("pointerdown",t=>{t.stopPropagation(),this.isDrawing=!0;const i=this.canvas.getBoundingClientRect(),n={x:t.clientX-i.left,y:t.clientY-i.top};this.drawingMode==="pen"||this.drawingMode==="brush"||this.drawingMode==="eraser"?(this.lastDrawPoint=n,this._drawDot(n)):this.startPoint=n}),this.canvas.addEventListener("pointermove",t=>{if(!this.isDrawing)return;t.preventDefault();const i=this.canvas.getBoundingClientRect(),n={x:t.clientX-i.left,y:t.clientY-i.top};(this.drawingMode==="pen"||this.drawingMode==="brush"||this.drawingMode==="eraser")&&(this._drawLine(this.lastDrawPoint,n),this.lastDrawPoint=n)}),this.canvas.addEventListener("pointerup",t=>{if(this.isDrawing){if(this.isDrawing=!1,this.drawingMode==="line"||this.drawingMode==="rectangle"||this.drawingMode==="circle"){const i=this.canvas.getBoundingClientRect(),n={x:t.clientX-i.left,y:t.clientY-i.top};this._drawShape(this.startPoint,n)}this._saveCanvasState()}}),this.canvas.addEventListener("pointerleave",()=>{this.isDrawing=!1}),this.canvas.addEventListener("touchstart",t=>t.preventDefault()),this.canvas.addEventListener("touchmove",t=>t.preventDefault()),this.canvas.addEventListener("touchend",t=>t.preventDefault()))}_setTool(t){this.drawingMode=t,this.canvas.className=`drawing-canvas ${t==="eraser"?"eraser":""}`;const i=ue("#size-slider",this.htmlElement),n=ue("#color-picker",this.htmlElement);i&&this.tools[t]&&(i.value=this.tools[t].size||2),n&&this.tools[t]&&t!=="eraser"&&(n.value=this.tools[t].color||"#ffffff")}_drawDot(t){this.ctx.beginPath(),this.drawingMode==="eraser"?(this.ctx.globalCompositeOperation="destination-out",this.ctx.arc(t.x,t.y,this.tools.eraser.size/2,0,Math.PI*2)):(this.ctx.globalCompositeOperation="source-over",this.ctx.fillStyle=this.tools[this.drawingMode].color,this.ctx.arc(t.x,t.y,this.tools[this.drawingMode].size/2,0,Math.PI*2)),this.ctx.fill()}_drawLine(t,i){this.ctx.beginPath(),this.drawingMode==="eraser"?(this.ctx.globalCompositeOperation="destination-out",this.ctx.lineWidth=this.tools.eraser.size):(this.ctx.globalCompositeOperation="source-over",this.ctx.strokeStyle=this.tools[this.drawingMode].color,this.ctx.lineWidth=this.tools[this.drawingMode].size),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}_drawShape(t,i){const n=this.tools[this.drawingMode];switch(this.ctx.globalCompositeOperation="source-over",this.ctx.strokeStyle=n.color,this.ctx.lineWidth=n.size,this.ctx.beginPath(),this.drawingMode){case"line":this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke();break;case"rectangle":const s=i.x-t.x,a=i.y-t.y;n.fill?(this.ctx.fillStyle=n.color,this.ctx.fillRect(t.x,t.y,s,a)):this.ctx.strokeRect(t.x,t.y,s,a);break;case"circle":const o=Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2));this.ctx.arc(t.x,t.y,o,0,Math.PI*2),n.fill?(this.ctx.fillStyle=n.color,this.ctx.fill()):this.ctx.stroke();break}}_saveCanvasState(){var t;this.data.preserveContent&&(this.data.canvasData=this.canvas.toDataURL(),(t=this.space)==null||t.emit("graph:node:dataChanged",{node:this,property:"canvasData",value:this.data.canvasData}))}_loadCanvasData(t){const i=new Image;i.onload=()=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(i,0,0)},i.src=t}clearCanvas(){var t;this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this._saveCanvasState(),(t=this.space)==null||t.emit("graph:node:canvasCleared",{node:this})}saveCanvas(){var n;const t=this.canvas.toDataURL("image/png"),i=document.createElement("a");i.download=`canvas-${this.id}.png`,i.href=t,i.click(),(n=this.space)==null||n.emit("graph:node:canvasSaved",{node:this,dataUrl:t,filename:`canvas-${this.id}.png`})}drawImage(t,i=0,n=0,s=null,a=null){s&&a?this.ctx.drawImage(t,i,n,s,a):this.ctx.drawImage(t,i,n),this._saveCanvasState()}drawText(t,i,n,s={}){const{color:a="#ffffff",font:o="16px Arial",align:l="left",baseline:c="top"}=s;this.ctx.fillStyle=a,this.ctx.font=o,this.ctx.textAlign=l,this.ctx.textBaseline=c,this.ctx.fillText(t,i,n),this._saveCanvasState()}getCanvasData(){return this.canvas.toDataURL()}setCanvasData(t){this._loadCanvasData(t)}}E(Cl,"typeName","canvas");class Er extends Ji{constructor(t,i,n={},s=1.5){const a={shapeType:n.shapeType??"fractal",complexity:n.complexity??3,animated:n.animated??!1,animationSpeed:n.animationSpeed??1,parameters:n.parameters??{},wireframe:n.wireframe??!1,materialType:n.materialType??"standard",...n};super(t,i,a,s);E(this,"generatorFunction",null);E(this,"animationFrame",null);E(this,"geometryCache",new Map);this._generateProcedural(),a.animated&&this._startAnimation()}getDefaultData(){return{...super.getDefaultData(),type:"procedural-shape",shapeType:"fractal",complexity:3,animated:!1,animationSpeed:1,parameters:{},wireframe:!1,materialType:"standard"}}_generateProcedural(){const t=this._getCacheKey();if(this.geometryCache.has(t)){this._useCachedGeometry(t);return}let i;switch(this.data.shapeType){case"fractal":i=this._generateFractal();break;case"crystal":i=this._generateCrystal();break;case"organic":i=this._generateOrganic();break;case"spiral":i=this._generateSpiral();break;case"flower":i=this._generateFlower();break;case"tree":i=this._generateTree();break;case"terrain":i=this._generateTerrain();break;case"voronoi":i=this._generateVoronoi();break;case"l-system":i=this._generateLSystem();break;default:i=new Sn(this.size/2,32,16)}this.geometryCache.set(t,i),this._applyGeometry(i)}_getCacheKey(){return`${this.data.shapeType}_${this.data.complexity}_${JSON.stringify(this.data.parameters)}`}_useCachedGeometry(t){const i=this.geometryCache.get(t);i&&this._applyGeometry(i.clone())}_applyGeometry(t){var s,a,o,l;if(!t)return;(o=(a=(s=this.mesh)==null?void 0:s.children)==null?void 0:a[0])!=null&&o.geometry&&this.mesh.children[0].geometry.dispose();const i=this._createMaterial(),n=new st(t,i);n.castShadow=!0,n.receiveShadow=!0,(l=this.mesh)!=null&&l.children&&this.mesh.children.forEach(c=>this.mesh.remove(c)),this.mesh&&this.mesh.add(n)}_createMaterial(){const t={color:this.color,wireframe:this.data.wireframe,transparent:this.data.wireframe,opacity:this.data.wireframe?.8:1};switch(this.data.materialType){case"basic":return new di(t);case"lambert":return new bm(t);case"phong":return new xm({...t,shininess:100});case"standard":default:return new Ci({...t,roughness:.7,metalness:.1})}}_generateFractal(){const{iterations:t=3,scale:i=.5,offset:n=1}=this.data.parameters,s=new Ud(this.size/2);if(t<=1)return s;const a=new qi,o=(l,c,h,d)=>{if(c<=0)return;const u=new st(l.clone());if(u.scale.setScalar(h),u.position.copy(d),a.add(u),c>1){const f=h*i;[new M(n*h,n*h,0),new M(-n*h,n*h,0),new M(0,-n*h,n*h),new M(0,-n*h,-n*h)].forEach(v=>{o(l,c-1,f,d.clone().add(v))})}};return o(s,t,1,new M),this._mergeGroupGeometries(a)}_generateCrystal(){const{faces:t=8,height:i=this.size,irregularity:n=.1}=this.data.parameters,s=[],a=[],o=this.size/3;for(let d=0;d<t;d++){const u=d/t*Math.PI*2,f=(Math.random()-.5)*n*o,m=Math.cos(u)*(o+f),v=Math.sin(u)*(o+f);s.push(m,-i/2,v),s.push(m*.3,i/2,v*.3)}s.push(0,-i/2-o*.5,0),s.push(0,i/2+o*.3,0);const l=t*2,c=t*2+1;for(let d=0;d<t;d++){const u=(d+1)%t,f=d*2,m=d*2+1,v=u*2,g=u*2+1;a.push(f,m,g),a.push(f,g,v),a.push(f,v,l),a.push(m,c,g)}const h=new At;return h.setAttribute("position",new _t(s,3)),h.setIndex(a),h.computeVertexNormals(),h}_generateOrganic(){const{segments:t=32,rings:i=16,noise:n=.3,bulges:s=3}=this.data.parameters,a=new Sn(this.size/2,t,i),o=a.attributes.position.array;for(let l=0;l<o.length;l+=3){const c=new M(o[l],o[l+1],o[l+2]);c.length();const h=this._noise3D(c.x*.1,c.y*.1,c.z*.1)*n,d=Math.sin(c.x*s)*Math.sin(c.y*s)*Math.sin(c.z*s),u=1+h+d*.2;c.multiplyScalar(u),o[l]=c.x,o[l+1]=c.y,o[l+2]=c.z}return a.computeVertexNormals(),a}_generateSpiral(){const{turns:t=5,height:i=this.size,radius:n=this.size/3,thickness:s=5}=this.data.parameters,a=[],o=t*50;for(let c=0;c<=o;c++){const h=c/o,d=h*t*Math.PI*2,u=(h-.5)*i,f=n*(1-h*.3);a.push(new M(Math.cos(d)*f,u,Math.sin(d)*f))}const l=new Od(a);return new Bl(l,o,s,8,!1)}_generateFlower(){const{petals:t=8,layers:i=3,petalSize:n=this.size/2}=this.data.parameters,s=new qi;for(let l=0;l<i;l++){const c=n*(1-l*.2),h=l*n*.1;for(let d=0;d<t;d++){const u=d/t*Math.PI*2+l*Math.PI/t,f=new lo(c*.3,c,8),m=new st(f);m.position.set(Math.cos(u)*c*.5,h,Math.sin(u)*c*.5),m.rotation.z=u+Math.PI/2,m.rotation.x=Math.PI/6,s.add(m)}}const a=new Sn(n*.2,16,8),o=new st(a);return s.add(o),this._mergeGroupGeometries(s)}_generateTree(){const{depth:t=4,branches:i=3,trunkHeight:n=this.size,branchAngle:s=Math.PI/4}=this.data.parameters,a=new qi,o=(l,c,h,d)=>{if(d<=0||h<this.size*.05)return;const u=l.clone().add(c.clone().multiplyScalar(h)),f=h*.1*(d/t),m=new kr(f*.5,f,h,8),v=new st(m);if(v.position.copy(l.clone().add(c.clone().multiplyScalar(h/2))),v.lookAt(u),v.rotateX(Math.PI/2),a.add(v),d>1)for(let g=0;g<i;g++){const p=g/i*Math.PI*2,x=c.clone(),_=new M().crossVectors(c,new M(0,1,0)).normalize(),y=new M().crossVectors(c,_);x.applyAxisAngle(y,s),x.applyAxisAngle(c,p),o(u,x,h*.7,d-1)}};return o(new M(0,-n/2,0),new M(0,1,0),n,t),this._mergeGroupGeometries(a)}_generateTerrain(){const{size:t=this.size,segments:i=32,height:n=this.size*.3,octaves:s=4,persistence:a=.5}=this.data.parameters,o=new ys(t,t,i,i),l=o.attributes.position.array;for(let c=0;c<l.length;c+=3){const h=l[c],d=l[c+2];let u=0,f=n,m=1/t;for(let v=0;v<s;v++)u+=this._noise2D(h*m,d*m)*f,f*=a,m*=2;l[c+1]=u}return o.computeVertexNormals(),o}_generateVoronoi(){const{points:t=8,size:i=this.size}=this.data.parameters,n=[];for(let o=0;o<t;o++)n.push(new M((Math.random()-.5)*i,(Math.random()-.5)*i,(Math.random()-.5)*i));const s=new Zn(i,i,i,20,20,20),a=s.attributes.position.array;for(let o=0;o<a.length;o+=3){const l=new M(a[o],a[o+1],a[o+2]);let c=1/0,h=null;if(n.forEach(d=>{const u=l.distanceTo(d);u<c&&(c=u,h=d)}),h){const d=h.clone().sub(l).normalize(),u=(1-c/i)*i*.2;l.add(d.multiplyScalar(u))}a[o]=l.x,a[o+1]=l.y,a[o+2]=l.z}return s.computeVertexNormals(),s}_generateLSystem(){const{axiom:t="F",rules:i={F:"F+F-F-F+F"},iterations:n=3,angle:s=Math.PI/2,length:a=this.size/10}=this.data.parameters;let o=t;for(let u=0;u<n;u++){let f="";for(const m of o)f+=i[m]||m;o=f}const l=new qi,c=[];let h=new M,d=new M(0,1,0);for(const u of o)switch(u){case"F":const f=h.clone().add(d.clone().multiplyScalar(a)),m=new kr(a*.05,a*.05,a,4),v=new st(m);v.position.copy(h.clone().add(d.clone().multiplyScalar(a/2))),v.lookAt(f),v.rotateX(Math.PI/2),l.add(v),h=f;break;case"+":d.applyAxisAngle(new M(0,0,1),s);break;case"-":d.applyAxisAngle(new M(0,0,1),-s);break;case"[":c.push({position:h.clone(),direction:d.clone()});break;case"]":if(c.length>0){const g=c.pop();h=g.position,d=g.direction}break}return this._mergeGroupGeometries(l)}_mergeGroupGeometries(t){const i=[];if(t.traverse(h=>{if(h.isMesh&&h.geometry){const d=h.geometry.clone();d.applyMatrix4(h.matrixWorld),i.push(d)}}),i.length===0)return new Sn(this.size/2,32,16);if(i.length===1)return i[0];const n=new At;let s=0,a=0;i.forEach(h=>{s+=h.attributes.position.count,h.index&&(a+=h.index.count)});const o=new Float32Array(s*3),l=new Float32Array(s*3);let c=0;return i.forEach(h=>{const d=h.attributes.position.array,u=h.attributes.normal?h.attributes.normal.array:null;o.set(d,c),u&&l.set(u,c),c+=d.length}),n.setAttribute("position",new Ct(o,3)),n.setAttribute("normal",new Ct(l,3)),n}_noise2D(t,i){return Math.sin(t*12.9898+i*78.233)*43758.5453%1}_noise3D(t,i,n){return Math.sin(t*12.9898+i*78.233+n*37.719)*43758.5453%1}_startAnimation(){if(this.animationFrame)return;const t=()=>{this._updateAnimation(),this.animationFrame=requestAnimationFrame(t)};this.animationFrame=requestAnimationFrame(t)}_stopAnimation(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null)}_updateAnimation(){var n,s;if(!((s=(n=this.mesh)==null?void 0:n.children)!=null&&s[0]))return;const t=performance.now()*.001*this.data.animationSpeed,i=this.mesh.children[0];switch(this.data.shapeType){case"fractal":case"crystal":i.rotation.y=t*.5,i.rotation.x=Math.sin(t)*.2;break;case"organic":i.rotation.y=t*.3;const a=1+Math.sin(t*2)*.1;i.scale.setScalar(a);break;case"spiral":i.rotation.y=t;break;case"flower":i.rotation.y=t*.2,i.rotation.z=Math.sin(t*.5)*.1;break;case"tree":i.rotation.z=Math.sin(t*.3)*.05,i.rotation.x=Math.cos(t*.2)*.03;break}}setShapeType(t){this.data.shapeType=t,this._generateProcedural()}setComplexity(t){this.data.complexity=Math.max(1,Math.min(10,t)),this._generateProcedural()}setParameters(t){this.data.parameters={...this.data.parameters,...t},this._generateProcedural()}setAnimated(t){this.data.animated=t,t?this._startAnimation():this._stopAnimation()}setWireframe(t){var i,n,s;this.data.wireframe=t,(s=(n=(i=this.mesh)==null?void 0:i.children)==null?void 0:n[0])!=null&&s.material&&(this.mesh.children[0].material.wireframe=t,this.mesh.children[0].material.transparent=t,this.mesh.children[0].material.opacity=t?.8:1)}dispose(){this._stopAnimation(),this.geometryCache.forEach(t=>t.dispose()),this.geometryCache.clear(),super.dispose()}}E(Er,"typeName","procedural-shape");class EC extends Xs{constructor(e){super(e)}load(e,t,i,n){const s=this,a=new Fd(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){const l=s.parse(JSON.parse(o));t&&t(l)},i,n)}parse(e){return new TC(e)}}class TC{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],n=CC(e,t,this.data);for(let s=0,a=n.length;s<a;s++)i.push(...n[s].toShapes());return i}}function CC(r,e,t){const i=Array.from(r),n=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*n,a=[];let o=0,l=0;for(let c=0;c<i.length;c++){const h=i[c];if(h===`
`)o=0,l-=s;else{const d=AC(h,n,o,l,t);o+=d.offsetX,a.push(d.path)}}return a}function AC(r,e,t,i,n){const s=n.glyphs[r]||n.glyphs["?"];if(!s){console.error('THREE.Font: character "'+r+'" does not exists in font family '+n.familyName+".");return}const a=new Xy;let o,l,c,h,d,u,f,m;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,p=v.length;g<p;)switch(v[g++]){case"m":o=v[g++]*e+t,l=v[g++]*e+i,a.moveTo(o,l);break;case"l":o=v[g++]*e+t,l=v[g++]*e+i,a.lineTo(o,l);break;case"q":c=v[g++]*e+t,h=v[g++]*e+i,d=v[g++]*e+t,u=v[g++]*e+i,a.quadraticCurveTo(d,u,c,h);break;case"b":c=v[g++]*e+t,h=v[g++]*e+i,d=v[g++]*e+t,u=v[g++]*e+i,f=v[g++]*e+t,m=v[g++]*e+i,a.bezierCurveTo(d,u,f,m,c,h);break}}return{offsetX:s.ha*e,path:a}}class PC extends zd{constructor(e,t={}){const i=t.font;if(i===void 0)super();else{const n=i.generateShapes(e,t.size);t.depth===void 0&&(t.depth=50),t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(n,t)}this.type="TextGeometry"}}const ji=class ji extends Ji{constructor(t,i,n={},s=1.5){const a={text:n.text??"Text",fontSize:n.fontSize??20,fontPath:n.fontPath??null,fontFamily:n.fontFamily??"helvetiker",fontWeight:n.fontWeight??"regular",height:n.height??5,curveSegments:n.curveSegments??12,bevelEnabled:n.bevelEnabled??!0,bevelThickness:n.bevelThickness??2,bevelSize:n.bevelSize??1,bevelOffset:n.bevelOffset??0,bevelSegments:n.bevelSegments??5,align:n.align??"center",materialType:n.materialType??"standard",strokeWidth:n.strokeWidth??0,strokeColor:n.strokeColor??0,gradientColors:n.gradientColors??null,animated:n.animated??!1,animationType:n.animationType??"rotate",...n};super(t,i,a,s);E(this,"textMesh",null);E(this,"font",null);E(this,"isLoadingFont",!1);this._loadFont()}getDefaultData(){return{...super.getDefaultData(),type:"text-mesh",text:"Text",fontSize:20,fontPath:null,fontFamily:"helvetiker",fontWeight:"regular",height:5,curveSegments:12,bevelEnabled:!0,bevelThickness:2,bevelSize:1,bevelOffset:0,bevelSegments:5,align:"center",materialType:"standard",strokeWidth:0,strokeColor:0,gradientColors:null,animated:!1,animationType:"rotate"}}async _loadFont(){if(!this.isLoadingFont){this.isLoadingFont=!0;try{let t=this.data.fontPath||`${this.data.fontFamily}_${this.data.fontWeight}`;if(ji.fontCache.has(t)){this.font=ji.fontCache.get(t),this._createTextMesh(),this.isLoadingFont=!1;return}const i=new EC;let n;this.data.fontPath?n=this.data.fontPath:n=`https://threejs.org/examples/fonts/${this.data.fontFamily}_${this.data.fontWeight}.typeface.json`;const s=await new Promise((a,o)=>{i.load(n,a,void 0,l=>{console.warn(`Failed to load font ${n}, using fallback`),ji.defaultFont?a(ji.defaultFont):o(l)})});this.font=s,ji.fontCache.set(t,s),ji.defaultFont||(ji.defaultFont=s),this._createTextMesh()}catch(t){console.error("Font loading failed:",t),this._createFallbackMesh()}finally{this.isLoadingFont=!1}}}_createTextMesh(){var t;if(this.font){this._disposeTextMesh();try{const i=new PC(this.data.text,{font:this.font,size:this.data.fontSize,height:this.data.height,curveSegments:this.data.curveSegments,bevelEnabled:this.data.bevelEnabled,bevelThickness:this.data.bevelThickness,bevelSize:this.data.bevelSize,bevelOffset:this.data.bevelOffset,bevelSegments:this.data.bevelSegments});i.computeBoundingBox(),this._alignText(i);const n=this._createTextMaterials();this.textMesh=new st(i,n),this.textMesh.castShadow=!0,this.textMesh.receiveShadow=!0,this.textMesh.userData={nodeId:this.id,type:"text-mesh"},this.data.strokeWidth>0&&this._addStroke(),(t=this.mesh)!=null&&t.children&&this.mesh.children.forEach(s=>{s.geometry&&s.geometry.dispose(),s.material&&s.material.dispose(),this.mesh.remove(s)}),this.mesh&&this.mesh.add(this.textMesh),this.data.animated&&this._startTextAnimation()}catch(i){console.error("Text geometry creation failed:",i),this._createFallbackMesh()}}}_alignText(t){const i=t.boundingBox;switch(this.data.align){case"center":t.translate(-(i.max.x-i.min.x)/2,-(i.max.y-i.min.y)/2,-(i.max.z-i.min.z)/2);break;case"left":t.translate(-i.min.x,-(i.max.y-i.min.y)/2,-(i.max.z-i.min.z)/2);break;case"right":t.translate(-i.max.x,-(i.max.y-i.min.y)/2,-(i.max.z-i.min.z)/2);break}}_createTextMaterials(){const t={color:this.color,transparent:!0,opacity:1};if(this.data.gradientColors&&this.data.gradientColors.length>=2)return new Ot({uniforms:{color1:{value:new fe(this.data.gradientColors[0])},color2:{value:new fe(this.data.gradientColors[1])},time:{value:0}},vertexShader:`
                    varying vec3 vPosition;
                    varying vec3 vNormal;
                    void main() {
                        vPosition = position;
                        vNormal = normal;
                        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
                    }
                `,fragmentShader:`
                    uniform vec3 color1;
                    uniform vec3 color2;
                    uniform float time;
                    varying vec3 vPosition;
                    varying vec3 vNormal;

                    void main() {
                        float mixFactor = (vPosition.y + 1.0) * 0.5;
                        vec3 color = mix(color1, color2, mixFactor);

                        // Add some lighting
                        float light = dot(vNormal, normalize(vec3(1.0, 1.0, 1.0))) * 0.5 + 0.5;
                        color *= light;

                        gl_FragColor = vec4(color, 1.0);
                    }
                `,transparent:t.transparent});switch(this.data.materialType){case"basic":return new di(t);case"lambert":return new bm(t);case"phong":return new xm({...t,shininess:100,specular:2236962});case"physical":return new fn({...t,roughness:.4,metalness:.1,clearcoat:.5,clearcoatRoughness:.1});case"standard":default:return new Ci({...t,roughness:.5,metalness:.1})}}_addStroke(){if(!this.textMesh||this.data.strokeWidth<=0)return;const t=this.textMesh.geometry.clone(),i=new di({color:this.data.strokeColor,transparent:!0,opacity:.8}),n=new st(t,i),s=1+this.data.strokeWidth/this.data.fontSize*2;n.scale.setScalar(s),n.position.z=-this.data.strokeWidth/2,n.renderOrder=-1,this.textMesh.add(n)}_createFallbackMesh(){const t=document.createElement("canvas"),i=t.getContext("2d");t.width=256,t.height=128,i.fillStyle="#"+this.color.toString(16).padStart(6,"0"),i.fillRect(0,0,t.width,t.height),i.fillStyle="white",i.font=`${Math.min(t.height*.6,48)}px Arial`,i.textAlign="center",i.textBaseline="middle",i.fillText(this.data.text,t.width/2,t.height/2);const n=new hm(t),s=new Zn(this.size,this.size*.5,this.size*.1),a=new di({map:n});this.textMesh=new st(s,a),this.textMesh.userData={nodeId:this.id,type:"text-mesh-fallback"},this.mesh&&this.mesh.add(this.textMesh)}_startTextAnimation(){if(this.animationFrame)return;const t=()=>{this._updateTextAnimation(),this.animationFrame=requestAnimationFrame(t)};this.animationFrame=requestAnimationFrame(t)}_stopTextAnimation(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null)}_updateTextAnimation(){var i;if(!this.textMesh)return;const t=performance.now()*.001;switch(this.data.animationType){case"rotate":this.textMesh.rotation.y=t*.5;break;case"float":this.textMesh.position.y=Math.sin(t*2)*10;break;case"pulse":const n=1+Math.sin(t*3)*.1;this.textMesh.scale.setScalar(n);break;case"wave":this.textMesh.rotation.z=Math.sin(t*2)*.1;break;case"glow":this.textMesh.material&&((i=this.textMesh.material.uniforms)!=null&&i.time)&&(this.textMesh.material.uniforms.time.value=t);break}}_disposeTextMesh(){var t;this.textMesh&&(this.textMesh.geometry&&this.textMesh.geometry.dispose(),this.textMesh.material&&(Array.isArray(this.textMesh.material)?this.textMesh.material.forEach(i=>i.dispose()):this.textMesh.material.dispose()),(t=this.textMesh.parent)==null||t.remove(this.textMesh),this.textMesh=null)}setText(t){var i;this.data.text=t,this.font&&!this.isLoadingFont&&this._createTextMesh(),(i=this.space)==null||i.emit("graph:node:dataChanged",{node:this,property:"text",value:t})}setFontSize(t){this.data.fontSize=t,this.font&&!this.isLoadingFont&&this._createTextMesh()}setColor(t){super.setColor(t),this.textMesh&&this.textMesh.material&&!this.data.gradientColors&&this.textMesh.material.color.set(t)}setHeight(t){this.data.height=t,this.font&&!this.isLoadingFont&&this._createTextMesh()}setBevel(t,i=2,n=1){this.data.bevelEnabled=t,this.data.bevelThickness=i,this.data.bevelSize=n,this.font&&!this.isLoadingFont&&this._createTextMesh()}setAlign(t){["left","center","right"].includes(t)&&(this.data.align=t,this.font&&!this.isLoadingFont&&this._createTextMesh())}setStroke(t,i=0){this.data.strokeWidth=t,this.data.strokeColor=i,this.font&&!this.isLoadingFont&&this._createTextMesh()}setGradient(t){this.data.gradientColors=t,this.font&&!this.isLoadingFont&&this._createTextMesh()}setAnimated(t,i="rotate"){this.data.animated=t,this.data.animationType=i,t?this._startTextAnimation():this._stopTextAnimation()}setFont(t,i="regular"){this.data.fontFamily=t,this.data.fontWeight=i,this.font=null,this._loadFont()}setCustomFont(t){this.data.fontPath=t,this.font=null,this._loadFont()}getTextBounds(){return this.textMesh&&this.textMesh.geometry.boundingBox?this.textMesh.geometry.boundingBox.clone():new qt}dispose(){this._stopTextAnimation(),this._disposeTextMesh(),super.dispose()}update(t){var i,n,s;super.update(t),(s=(n=(i=this.textMesh)==null?void 0:i.material)==null?void 0:n.uniforms)!=null&&s.time&&(this.textMesh.material.uniforms.time.value=performance.now()*.001)}};E(ji,"typeName","text-mesh"),E(ji,"fontCache",new Map),E(ji,"defaultFont",null);let un=ji;class Al extends gt{constructor(t,i,n={},s=1){const a={width:n.width??400,height:n.height??300,title:n.title??"Widget Container",layout:n.layout??"grid",columns:n.columns??2,gap:n.gap??10,resizable:n.resizable??!0,collapsible:n.collapsible??!0,backgroundColor:n.backgroundColor??"rgba(25, 30, 45, 0.95)",widgets:n.widgets??[],padding:n.padding??15,showHeader:n.showHeader??!0,...n};super(t,i,a,s);E(this,"childWidgets",new Map);E(this,"layout","grid");E(this,"columns",2);E(this,"gap",10);E(this,"resizable",!0);E(this,"collapsible",!0);E(this,"isCollapsed",!1);this.layout=a.layout,this.columns=a.columns,this.gap=a.gap,this.resizable=a.resizable,this.collapsible=a.collapsible,this._initializeWidgets(),this._setupMetaWidgetEvents()}getDefaultData(){return{...super.getDefaultData(),type:"meta-widget",title:"Widget Container",layout:"grid",columns:2,gap:10,resizable:!0,collapsible:!0,backgroundColor:"rgba(25, 30, 45, 0.95)",widgets:[],padding:15,showHeader:!0}}_createElement(){const t=document.createElement("div");t.className="node-meta-widget node-common",t.id=`node-meta-widget-${this.id}`,t.dataset.nodeId=this.id,t.style.width=`${this.size.width}px`,t.style.height=`${this.size.height}px`,t.draggable=!1;const i=this.data.showHeader?35:0,n=this.size.height-i-this.data.padding*2;return t.innerHTML=`
            <div class="meta-widget-container">
                ${this.data.showHeader?this._generateHeader():""}
                <div class="meta-widget-content" style="height: ${n}px;">
                    <div class="widget-grid"></div>
                </div>
            </div>
            <style>
                .node-meta-widget {
                    background: ${this.data.backgroundColor};
                    border: 1px solid rgba(255,255,255,0.2);
                    border-radius: 8px;
                    padding: ${this.data.padding}px;
                    font-family: 'Segoe UI', sans-serif;
                    color: white;
                    backdrop-filter: blur(10px);
                    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
                    overflow: hidden;
                }
                .meta-widget-container {
                    width: 100%;
                    height: 100%;
                    display: flex;
                    flex-direction: column;
                }
                .meta-widget-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 8px 12px;
                    background: rgba(0,0,0,0.3);
                    border-radius: 6px;
                    margin-bottom: 10px;
                    border: 1px solid rgba(255,255,255,0.1);
                }
                .meta-widget-title {
                    font-size: 14px;
                    font-weight: 600;
                    margin: 0;
                    color: #fff;
                }
                .meta-widget-controls {
                    display: flex;
                    gap: 6px;
                }
                .meta-control-btn {
                    background: rgba(255,255,255,0.1);
                    border: none;
                    color: white;
                    width: 24px;
                    height: 24px;
                    border-radius: 4px;
                    cursor: pointer;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 12px;
                    transition: background 0.2s;
                }
                .meta-control-btn:hover {
                    background: rgba(255,255,255,0.2);
                }
                .meta-widget-content {
                    flex: 1;
                    overflow-y: auto;
                    overflow-x: hidden;
                }
                .meta-widget-content.collapsed {
                    display: none;
                }
                .widget-grid {
                    display: grid;
                    gap: ${this.gap}px;
                    width: 100%;
                    height: 100%;
                }
                .widget-grid.layout-grid {
                    grid-template-columns: repeat(${this.columns}, 1fr);
                    grid-auto-rows: minmax(100px, auto);
                }
                .widget-grid.layout-flex-row {
                    display: flex;
                    flex-direction: row;
                    flex-wrap: wrap;
                }
                .widget-grid.layout-flex-column {
                    display: flex;
                    flex-direction: column;
                }
                .widget-grid.layout-masonry {
                    columns: ${this.columns};
                    column-gap: ${this.gap}px;
                }
                .widget-slot {
                    background: rgba(255,255,255,0.05);
                    border: 1px dashed rgba(255,255,255,0.2);
                    border-radius: 6px;
                    position: relative;
                    min-height: 100px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.3s ease;
                }
                .widget-slot:hover {
                    background: rgba(255,255,255,0.08);
                    border-color: rgba(255,255,255,0.4);
                }
                .widget-slot.occupied {
                    background: transparent;
                    border: none;
                    padding: 0;
                }
                .widget-slot-placeholder {
                    color: rgba(255,255,255,0.5);
                    font-size: 12px;
                    text-align: center;
                    pointer-events: none;
                }
                .widget-wrapper {
                    width: 100%;
                    height: 100%;
                    position: relative;
                    border-radius: 6px;
                    overflow: hidden;
                }
                .widget-controls {
                    position: absolute;
                    top: 4px;
                    right: 4px;
                    display: flex;
                    gap: 2px;
                    opacity: 0;
                    transition: opacity 0.2s;
                    z-index: 10;
                }
                .widget-wrapper:hover .widget-controls {
                    opacity: 1;
                }
                .widget-control-btn {
                    background: rgba(0,0,0,0.7);
                    border: none;
                    color: white;
                    width: 20px;
                    height: 20px;
                    border-radius: 3px;
                    cursor: pointer;
                    font-size: 10px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                .widget-control-btn:hover {
                    background: rgba(0,0,0,0.9);
                }
                .layout-selector {
                    background: rgba(255,255,255,0.1);
                    border: 1px solid rgba(255,255,255,0.2);
                    color: white;
                    padding: 4px 8px;
                    border-radius: 4px;
                    font-size: 11px;
                    cursor: pointer;
                }
                .layout-selector:focus {
                    outline: none;
                    border-color: #4a9eff;
                }
            </style>
        `,this._setupDragAndDrop(t),t}_generateHeader(){return`
            <div class="meta-widget-header">
                <h3 class="meta-widget-title">${this.data.title}</h3>
                <div class="meta-widget-controls">
                    <select class="layout-selector">
                        <option value="grid" ${this.layout==="grid"?"selected":""}>Grid</option>
                        <option value="flex-row" ${this.layout==="flex-row"?"selected":""}>Row</option>
                        <option value="flex-column" ${this.layout==="flex-column"?"selected":""}>Column</option>
                        <option value="masonry" ${this.layout==="masonry"?"selected":""}>Masonry</option>
                    </select>
                    <button class="meta-control-btn add-widget" title="Add Widget">+</button>
                    ${this.collapsible?'<button class="meta-control-btn collapse-btn" title="Collapse">−</button>':""}
                    <button class="meta-control-btn settings-btn" title="Settings">⚙</button>
                </div>
            </div>
        `}_initializeWidgets(){this.data.widgets&&this.data.widgets.length>0&&this.data.widgets.forEach((t,i)=>{this.addWidget(t,i)}),this._updateLayout()}_setupMetaWidgetEvents(){const t=ue(".meta-widget-header",this.htmlElement);if(!t)return;const i=ue(".layout-selector",t);i&&i.addEventListener("change",o=>{o.stopPropagation(),this.setLayout(o.target.value)});const n=ue(".add-widget",t);n&&n.addEventListener("click",o=>{o.stopPropagation(),this._showAddWidgetDialog()});const s=ue(".collapse-btn",t);s&&s.addEventListener("click",o=>{o.stopPropagation(),this.toggleCollapsed()});const a=ue(".settings-btn",t);a&&a.addEventListener("click",o=>{o.stopPropagation(),this._showSettingsDialog()})}_setupDragAndDrop(t){t.addEventListener("dragover",i=>{i.preventDefault(),i.dataTransfer.dropEffect="move"}),t.addEventListener("drop",i=>{i.preventDefault();const n=i.dataTransfer.getData("text/widget-id"),s=i.target.closest(".widget-slot");n&&s&&this._handleWidgetDrop(n,s)})}addWidget(t,i=null){var a;const n=t.id||this._generateWidgetId(),s={id:n,type:t.type||"control-panel",data:t.data||{},position:i!==null?i:this.childWidgets.size,...t};return this.childWidgets.set(n,s),this._renderWidget(s),this._updateLayout(),(a=this.space)==null||a.emit("meta-widget:widget-added",{metaWidget:this,widget:s,position:s.position}),n}removeWidget(t){var s;if(!this.childWidgets.has(t))return!1;const i=this.childWidgets.get(t);this.childWidgets.delete(t);const n=ue(`[data-widget-id="${t}"]`,this.htmlElement);return n&&n.remove(),this._updateLayout(),(s=this.space)==null||s.emit("meta-widget:widget-removed",{metaWidget:this,widget:i,widgetId:t}),!0}_renderWidget(t){const i=ue(".widget-grid",this.htmlElement);if(!i)return;const n=document.createElement("div");n.className="widget-slot occupied",n.dataset.widgetId=t.id,n.dataset.position=t.position;const s=document.createElement("div");s.className="widget-wrapper",s.draggable=!0;const a=document.createElement("div");a.className="widget-controls",a.innerHTML=`
            <button class="widget-control-btn move-btn" title="Move">↕</button>
            <button class="widget-control-btn edit-btn" title="Edit">✎</button>
            <button class="widget-control-btn remove-btn" title="Remove">×</button>
        `;const o=this._createWidgetContent(t);s.appendChild(o),s.appendChild(a),n.appendChild(s),this._setupWidgetEvents(s,t),i.appendChild(n)}_createWidgetContent(t){const i=document.createElement("div");switch(i.className="widget-content",i.style.width="100%",i.style.height="100%",t.type){case"control-panel":i.innerHTML=this._createControlPanelContent(t),this._setupControlPanelEvents(i,t);break;case"progress":i.innerHTML=this._createProgressContent(t);break;case"chart":i.innerHTML=this._createChartContent(t);break;case"info":i.innerHTML=this._createInfoContent(t);break;case"custom":i.innerHTML=t.data.html||"<div>Custom Widget</div>";break;default:i.innerHTML=`<div>Widget: ${t.type}</div>`}return i}_createControlPanelContent(t){const i=t.data.controls||[];let n='<div class="mini-control-panel">';return i.forEach(s=>{switch(n+='<div class="mini-control">',n+=`<label class="mini-control-label">${s.label}</label>`,s.type){case"slider":n+=`<input type="range" class="mini-slider"
                             data-control-id="${s.id}"
                             min="${s.min||0}" max="${s.max||100}"
                             value="${s.value||0}" step="${s.step||1}">`,n+=`<span class="mini-value">${s.value||0}</span>`;break;case"switch":n+=`<label class="mini-switch">
                        <input type="checkbox" data-control-id="${s.id}"
                               ${s.value?"checked":""}>
                        <span class="mini-switch-slider"></span>
                    </label>`;break;case"button":n+=`<button class="mini-button" data-control-id="${s.id}">
                        ${s.text||s.label}
                    </button>`;break}n+="</div>"}),n+="</div>",n+=`<style>
            .mini-control-panel { padding: 8px; font-size: 11px; }
            .mini-control { margin-bottom: 8px; }
            .mini-control-label { display: block; color: rgba(255,255,255,0.8); margin-bottom: 3px; }
            .mini-slider { width: 100%; height: 4px; background: rgba(255,255,255,0.2); border-radius: 2px; }
            .mini-value { float: right; color: #4a9eff; font-weight: 600; }
            .mini-switch { position: relative; display: inline-block; width: 30px; height: 16px; }
            .mini-switch input { opacity: 0; width: 0; height: 0; }
            .mini-switch-slider { position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0;
                                 background-color: rgba(255,255,255,0.2); transition: 0.3s; border-radius: 16px; }
            .mini-switch-slider:before { position: absolute; content: ""; height: 12px; width: 12px; left: 2px; bottom: 2px;
                                       background-color: white; transition: 0.3s; border-radius: 50%; }
            .mini-switch input:checked + .mini-switch-slider { background-color: #4a9eff; }
            .mini-switch input:checked + .mini-switch-slider:before { transform: translateX(14px); }
            .mini-button { width: 100%; padding: 4px 8px; background: #4a9eff; border: none; border-radius: 3px;
                          color: white; font-size: 10px; cursor: pointer; }
        </style>`,n}_createProgressContent(t){const i=t.data.value||0,n=t.data.max||100,s=i/n*100;return`
            <div class="mini-progress">
                <div class="mini-progress-label">${t.data.label||"Progress"}</div>
                <div class="mini-progress-bar">
                    <div class="mini-progress-fill" style="width: ${s}%"></div>
                </div>
                <div class="mini-progress-value">${i}%</div>
            </div>
            <style>
                .mini-progress { padding: 8px; text-align: center; }
                .mini-progress-label { font-size: 11px; color: rgba(255,255,255,0.8); margin-bottom: 4px; }
                .mini-progress-bar { width: 100%; height: 8px; background: rgba(255,255,255,0.2); border-radius: 4px; overflow: hidden; }
                .mini-progress-fill { height: 100%; background: linear-gradient(90deg, #4a9eff, #64b5f6); transition: width 0.3s; }
                .mini-progress-value { font-size: 10px; color: #4a9eff; margin-top: 4px; }
            </style>
        `}_createChartContent(t){return`
            <div class="mini-chart">
                <div class="chart-title">${t.data.title||"Chart"}</div>
                <div class="chart-placeholder">📊</div>
            </div>
            <style>
                .mini-chart { padding: 8px; text-align: center; display: flex; flex-direction: column; justify-content: center; height: 100%; }
                .chart-title { font-size: 11px; color: rgba(255,255,255,0.8); margin-bottom: 8px; }
                .chart-placeholder { font-size: 24px; opacity: 0.6; }
            </style>
        `}_createInfoContent(t){return`
            <div class="mini-info">
                <div class="info-icon">${t.data.icon||"ℹ"}</div>
                <div class="info-text">${t.data.text||"Information"}</div>
            </div>
            <style>
                .mini-info { padding: 8px; text-align: center; display: flex; flex-direction: column; justify-content: center; height: 100%; }
                .info-icon { font-size: 20px; margin-bottom: 4px; }
                .info-text { font-size: 10px; color: rgba(255,255,255,0.8); line-height: 1.3; }
            </style>
        `}_setupControlPanelEvents(t,i){t.querySelectorAll("[data-control-id]").forEach(n=>{const s=n.dataset.controlId;n.addEventListener("input",a=>{var l;a.stopPropagation();let o=a.target.value;if(a.target.type==="checkbox")o=a.target.checked;else if(a.target.type==="range"){o=parseFloat(o);const c=a.target.parentNode.querySelector(".mini-value");c&&(c.textContent=o)}(l=this.space)==null||l.emit("meta-widget:control-changed",{metaWidget:this,widget:i,controlId:s,value:o})}),(n.type==="button"||n.tagName==="BUTTON")&&n.addEventListener("click",a=>{var o;a.stopPropagation(),(o=this.space)==null||o.emit("meta-widget:control-clicked",{metaWidget:this,widget:i,controlId:s})})})}_setupWidgetEvents(t,i){t.addEventListener("dragstart",a=>{a.dataTransfer.setData("text/widget-id",i.id),a.dataTransfer.effectAllowed="move"});const n=ue(".remove-btn",t);n&&n.addEventListener("click",a=>{a.stopPropagation(),this.removeWidget(i.id)});const s=ue(".edit-btn",t);s&&s.addEventListener("click",a=>{a.stopPropagation(),this._editWidget(i)})}_updateLayout(){const t=ue(".widget-grid",this.htmlElement);t&&(t.className="widget-grid",t.classList.add(`layout-${this.layout}`),this.layout==="grid"?t.style.gridTemplateColumns=`repeat(${this.columns}, 1fr)`:this.layout==="masonry"&&(t.style.columns=this.columns,t.style.columnGap=`${this.gap}px`),t.style.gap=`${this.gap}px`)}_showAddWidgetDialog(){const t=document.createElement("div");t.className="add-widget-dialog",t.innerHTML=`
            <div class="dialog-backdrop">
                <div class="dialog-content">
                    <h3>Add Widget</h3>
                    <select class="widget-type-select">
                        <option value="control-panel">Control Panel</option>
                        <option value="progress">Progress Bar</option>
                        <option value="chart">Chart</option>
                        <option value="info">Info Panel</option>
                        <option value="custom">Custom</option>
                    </select>
                    <input type="text" class="widget-title-input" placeholder="Widget Title">
                    <div class="dialog-buttons">
                        <button class="dialog-btn cancel">Cancel</button>
                        <button class="dialog-btn confirm">Add</button>
                    </div>
                </div>
            </div>
            <style>
                .add-widget-dialog .dialog-backdrop {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100vw;
                    height: 100vh;
                    background: rgba(0,0,0,0.7);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: 10000;
                }
                .add-widget-dialog .dialog-content {
                    background: #2c3e50;
                    padding: 20px;
                    border-radius: 8px;
                    min-width: 300px;
                    color: white;
                }
                .add-widget-dialog h3 {
                    margin-top: 0;
                    color: #ecf0f1;
                }
                .add-widget-dialog select, .add-widget-dialog input {
                    width: 100%;
                    padding: 8px;
                    margin: 8px 0;
                    background: #34495e;
                    border: 1px solid #7f8c8d;
                    border-radius: 4px;
                    color: white;
                }
                .add-widget-dialog .dialog-buttons {
                    text-align: right;
                    margin-top: 16px;
                }
                .add-widget-dialog .dialog-btn {
                    padding: 6px 12px;
                    margin-left: 8px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                }
                .add-widget-dialog .dialog-btn.cancel {
                    background: #95a5a6;
                    color: white;
                }
                .add-widget-dialog .dialog-btn.confirm {
                    background: #3498db;
                    color: white;
                }
            </style>
        `,document.body.appendChild(t);const i=ue(".cancel",t),n=ue(".confirm",t),s=ue(".widget-type-select",t),a=ue(".widget-title-input",t),o=()=>{document.body.removeChild(t)};i.addEventListener("click",o),n.addEventListener("click",()=>{const l=s.value,c=a.value||`New ${l}`,h={type:l,data:{title:c,label:c}};l==="control-panel"?h.data.controls=[{id:"sample",type:"slider",label:"Sample",value:50,min:0,max:100}]:l==="progress"&&(h.data.value=25,h.data.max=100),this.addWidget(h),o()}),ue(".dialog-backdrop",t).addEventListener("click",l=>{l.target===l.currentTarget&&o()})}_editWidget(t){var i;(i=this.space)==null||i.emit("meta-widget:widget-edit-requested",{metaWidget:this,widget:t})}_generateWidgetId(){return`widget-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}_handleWidgetDrop(t,i){const n=this.childWidgets.get(t);if(!n)return;const s=parseInt(i.dataset.position);isNaN(s)||(n.position=s,this._updateLayout())}setLayout(t){var i;["grid","flex-row","flex-column","masonry"].includes(t)&&(this.layout=t,this.data.layout=t,this._updateLayout(),(i=this.space)==null||i.emit("meta-widget:layout-changed",{metaWidget:this,layout:t}))}setColumns(t){this.columns=Math.max(1,t),this.data.columns=this.columns,this._updateLayout()}setGap(t){this.gap=Math.max(0,t),this.data.gap=this.gap,this._updateLayout()}toggleCollapsed(){var s;this.isCollapsed=!this.isCollapsed;const t=ue(".meta-widget-content",this.htmlElement),i=ue(".collapse-btn",this.htmlElement);t&&t.classList.toggle("collapsed",this.isCollapsed),i&&(i.textContent=this.isCollapsed?"+":"−");const n=this.isCollapsed?60:this.data.height;this.setSize(this.size.width,n),(s=this.space)==null||s.emit("meta-widget:collapsed-changed",{metaWidget:this,isCollapsed:this.isCollapsed})}getWidget(t){return this.childWidgets.get(t)}getAllWidgets(){return Array.from(this.childWidgets.values())}updateWidget(t,i){var a;const n=this.childWidgets.get(t);if(!n)return!1;Object.assign(n.data,i);const s=ue(`[data-widget-id="${t}"]`,this.htmlElement);if(s){const o=ue(".widget-content",s);o&&(o.innerHTML="",o.appendChild(this._createWidgetContent(n)))}return(a=this.space)==null||a.emit("meta-widget:widget-updated",{metaWidget:this,widget:n,widgetId:t}),!0}getLayoutData(){return{layout:this.layout,columns:this.columns,gap:this.gap,widgets:Array.from(this.childWidgets.values())}}dispose(){this.childWidgets.clear(),super.dispose()}}E(Al,"typeName","meta-widget");class LC extends Fp{constructor(e){super(),this.space=e}registerCoreNodeTypes(){this.registerType(gt.typeName,gt),this.registerType(Ji.typeName,Ji),this.registerType(qa.typeName,qa),this.registerType(Xr.typeName,Xr),this.registerType(qr.typeName,qr),this.registerType(Za.typeName,Za),this.registerType(Ya.typeName,Ya),this.registerType(dn.typeName,dn),this.registerType(Zr.typeName,Zr),this.registerType(Yr.typeName,Yr),this.registerType(Kr.typeName,Kr),this.registerType(Ka.typeName,Ka),this.registerType(wr.typeName,wr),this.registerType(Cl.typeName,Cl),this.registerType(Er.typeName,Er),this.registerType(un.typeName,un),this.registerType(Al.typeName,Al),this.registerType("default",Ji)}createNode(e,t,i,n={},s=1){const a=(n==null?void 0:n.type)||t,o=this.create(a,[e,i,n,s],"default");return o&&(o.space=this.space),o}}class RC extends mn{constructor(t,i){super(t,i);E(this,"nodes",new Map);E(this,"nodeFactory",null);E(this,"instancedMeshManager",null);this.nodeFactory=new LC(t),this._registerNodeTypes()}_registerNodeTypes(){this.nodeFactory.registerType(gt.typeName,gt),this.nodeFactory.registerType(Ji.typeName,Ji),this.nodeFactory.registerType(qa.typeName,qa),this.nodeFactory.registerType(Xr.typeName,Xr),this.nodeFactory.registerType(qr.typeName,qr),this.nodeFactory.registerType(Za.typeName,Za),this.nodeFactory.registerType(Ya.typeName,Ya),this.nodeFactory.registerType(dn.typeName,dn),this.nodeFactory.registerType(Zr.typeName,Zr),this.nodeFactory.registerType(Yr.typeName,Yr),this.nodeFactory.registerType(Kr.typeName,Kr),this.nodeFactory.registerType("default",Ji)}getName(){return"NodePlugin"}init(){var t;super.init(),this.instancedMeshManager=(t=this.pluginManager.getPlugin("RenderingPlugin"))==null?void 0:t.getInstancedMeshManager()}addNode(t){if(t.id??(t.id=bt.generateId("node")),this.nodes.has(t.id))return console.warn(`NodePlugin: Node ${t.id} already exists.`),this.nodes.get(t.id);this.nodes.set(t.id,t),t.space=this.space;const i=this.pluginManager.getPlugin("RenderingPlugin"),n=i==null?void 0:i.getCSS3DScene(),s=i==null?void 0:i.getWebGLScene();let a=!1;return this.instancedMeshManager&&t instanceof Ji&&t.data.shape==="sphere"&&(a=this.instancedMeshManager.addNode(t)),t.cssObject&&n&&n.add(t.cssObject),t.labelObject&&n&&n.add(t.labelObject),!a&&t.mesh&&s&&s.add(t.mesh),this.space.emit("node:added",t),t}createAndAddNode({id:t,type:i,position:n,data:s={},mass:a=1}){const o=t||bt.generateId("node");if(!i||!n){console.error("NodePlugin: Type and position required.");return}const l=this.nodeFactory.createNode(o,i,n,s,a);return l?this.addNode(l):void 0}removeNode(t){var s,a;const i=this.nodes.get(t);if(!i)return console.warn(`NodePlugin: Node ${t} not found.`);const n=this.pluginManager.getPlugin("UIPlugin");(n==null?void 0:n.getSelectedNode())===i&&n.setSelectedNode(null),(n==null?void 0:n.getLinkSourceNode())===i&&n.cancelLinking(),(s=this.pluginManager.getPlugin("EdgePlugin"))==null||s.getEdgesForNode(i).forEach(o=>{var l;return(l=this.pluginManager.getPlugin("EdgePlugin"))==null?void 0:l.removeEdge(o.id)}),(a=this.pluginManager.getPlugin("LayoutPlugin"))==null||a.removeNodeFromLayout(i),i.isInstanced&&this.instancedMeshManager&&this.instancedMeshManager.removeNode(i),i.dispose(),this.nodes.delete(t),this.space.emit("node:removed",t,i)}getNodeById(t){return this.nodes.get(t)}getNodes(){return this.nodes}update(){this.nodes.forEach(t=>{var i;t.isInstanced&&this.instancedMeshManager&&this.instancedMeshManager.updateNode(t),(i=t.update)==null||i.call(t,this.space)})}dispose(){super.dispose(),this.nodes.forEach(t=>t.dispose()),this.nodes.clear()}}const zt=class zt{constructor(e,t,i,n={}){E(this,"line",null);E(this,"arrowheads",{source:null,target:null});E(this,"isInstanced",!1);E(this,"instanceId",null);E(this,"isHighlighted",!1);E(this,"isHovered",!1);E(this,"_colorStart",new fe);E(this,"_colorEnd",new fe);E(this,"data",{color:53503,gradientColors:null,thickness:3,thicknessInstanced:.5,constraintType:"elastic",constraintParams:{stiffness:.001,idealLength:200},arrowhead:!1,arrowheadSize:10,arrowheadColor:null});var a;if(!t||!i)throw new Error("Edge requires valid source and target nodes.");this.id=e,this.source=t,this.target=i;const s={color:53503,gradientColors:null,thickness:3,thicknessInstanced:.5,constraintType:"elastic",constraintParams:{stiffness:.001,idealLength:200},arrowhead:!1,arrowheadSize:10,arrowheadColor:null};this.data=bt.mergeDeep({},s,n),this.isInstanced=!1,this.instanceId=null,((a=this.data.gradientColors)==null?void 0:a.length)===2?this.data.color=null:this.data.color===null&&(this.data.color=s.color),this.line=this._createLine(),this._createArrowheads(),this.update()}_createArrowheads(){const e=this.data.arrowhead;(e===!0||e==="target"||e==="both")&&(this.arrowheads.target=this._createSingleArrowhead("target")),(e==="source"||e==="both")&&(this.arrowheads.source=this._createSingleArrowhead("source"))}_createLine(){var s;const e=new Gm;e.setPositions([0,0,0,0,0,.001]);const t={linewidth:this.data.thickness,transparent:!0,opacity:zt.DEFAULT_OPACITY,depthTest:!1,resolution:new Z(window.innerWidth,window.innerHeight),dashed:this.data.dashed||!1,dashScale:this.data.dashScale??1,dashSize:this.data.dashSize??3,gapSize:this.data.gapSize??1};((s=this.data.gradientColors)==null?void 0:s.length)===2?(t.vertexColors=!0,this._colorStart.set(this.data.gradientColors[0]),this._colorEnd.set(this.data.gradientColors[1]),e.setColors([this._colorStart.r,this._colorStart.g,this._colorStart.b,this._colorEnd.r,this._colorEnd.g,this._colorEnd.b])):(t.vertexColors=!1,t.color=this.data.color||53503);const i=new $d(t),n=new Vm(e,i);return i.dashed&&n.computeLineDistances(),n.renderOrder=-1,n.userData={edgeId:this.id},n}_setGradientColors(){var e,t;if(!(!this.line||!this.line.material))if(((e=this.data.gradientColors)==null?void 0:e.length)===2){this.line.material.vertexColors||(this.line.material.vertexColors=!0,this.line.material.needsUpdate=!0),this._colorStart.set(this.data.gradientColors[0]),this._colorEnd.set(this.data.gradientColors[1]);const i=((t=this.line.geometry.attributes.color)==null?void 0:t.array)||[];if(i.length>=6)i[0]=this._colorStart.r,i[1]=this._colorStart.g,i[2]=this._colorStart.b,i[3]=this._colorEnd.r,i[4]=this._colorEnd.g,i[5]=this._colorEnd.b,this.line.geometry.attributes.color.needsUpdate=!0;else{const n=this.line.geometry.attributes.position;if(n){const s=n.count,a=new Float32Array(s*3);for(let o=0;o<s;o++){const l=s>1?o/(s-1):0,c=this._colorStart.clone().lerp(this._colorEnd,l);a[o*3]=c.r,a[o*3+1]=c.g,a[o*3+2]=c.b}this.line.geometry.setColors(a)}}}else this.line.material.vertexColors&&(this.line.material.vertexColors=!1,this.line.material.needsUpdate=!0),this.line.material.color.set(this.data.color||53503)}update(){if(!this.line||!this.source||!this.target)return;const e=this.source.position,t=this.target.position;!isFinite(e.x)||!isFinite(e.y)||!isFinite(e.z)||!isFinite(t.x)||!isFinite(t.y)||!isFinite(t.z)||(this.line.geometry.setPositions([e.x,e.y,e.z,t.x,t.y,t.z]),this.line.geometry.attributes.position.count!==0&&(this._setGradientColors(),this.line.material.dashed&&this.line.computeLineDistances(),this.line.geometry.computeBoundingSphere(),this._updateArrowheads()))}_updateArrowheads(){const e=this.source.position,t=this.target.position;if(this.arrowheads.target){this.arrowheads.target.position.copy(t);const i=new M().subVectors(t,e).normalize();this._orientArrowhead(this.arrowheads.target,i)}if(this.arrowheads.source){this.arrowheads.source.position.copy(e);const i=new M().subVectors(e,t).normalize();this._orientArrowhead(this.arrowheads.source,i)}}_createSingleArrowhead(e){const t=this.data.arrowheadSize||10,i=new lo(t/2,t,8),n=new di({color:this.data.arrowheadColor||this.data.color,opacity:zt.DEFAULT_OPACITY,transparent:!0,depthTest:!1}),s=new st(i,n);return s.renderOrder=this.line.renderOrder+1,s.userData={edgeId:this.id,type:"edge-arrowhead"},s}_orientArrowhead(e,t){const i=new M(0,1,0);e.quaternion.setFromUnitVectors(i,t)}setHighlight(e){var s,a;if(this.isHighlighted=e,!((s=this.line)!=null&&s.material))return;const t=this.line.material;t.opacity=e?zt.HIGHLIGHT_OPACITY:zt.DEFAULT_OPACITY;const i=((a=this.data.gradientColors)==null?void 0:a.length)===2&&t.vertexColors?2:1.5;t.linewidth=e?this.data.thickness*i:this.data.thickness,t.vertexColors||t.color.set(e?zt.HIGHLIGHT_COLOR:this.data.color),t.needsUpdate=!0;const n=o=>{o!=null&&o.material&&(o.material.color.set(e?zt.HIGHLIGHT_COLOR:this.data.arrowheadColor||this.data.color),o.material.opacity=e?zt.HIGHLIGHT_OPACITY:zt.DEFAULT_OPACITY)};n(this.arrowheads.source),n(this.arrowheads.target),e&&this.isHovered&&this.setHoverStyle(!1,!0)}setHoverStyle(e,t=!1){var o;if(!t&&this.isHighlighted||!((o=this.line)!=null&&o.material))return;this.isHovered=e;const i=this.line.material,n=zt.DEFAULT_OPACITY,s=this.data.thickness;i.opacity=e?Math.min(1,n+zt.DEFAULT_HOVER_OPACITY_BOOST):n,i.linewidth=e?s*zt.DEFAULT_HOVER_THICKNESS_MULTIPLIER:s,i.needsUpdate=!0;const a=l=>{if(l!=null&&l.material){const c=zt.DEFAULT_OPACITY;l.material.opacity=e?Math.min(1,c+zt.DEFAULT_HOVER_OPACITY_BOOST):c}};this.isHighlighted||(a(this.arrowheads.source),a(this.arrowheads.target))}updateResolution(e,t){var i;(i=this.line)!=null&&i.material&&this.line.material.resolution.set(e,t)}dispose(){var t,i,n,s,a,o;(i=(t=this.line)==null?void 0:t.geometry)==null||i.dispose(),(s=(n=this.line)==null?void 0:n.material)==null||s.dispose(),(o=(a=this.line)==null?void 0:a.parent)==null||o.remove(this.line),this.line=null;const e=l=>{var c,h,d;(c=l==null?void 0:l.geometry)==null||c.dispose(),(h=l==null?void 0:l.material)==null||h.dispose(),(d=l==null?void 0:l.parent)==null||d.remove(l)};e(this.arrowheads.source),this.arrowheads.source=null,e(this.arrowheads.target),this.arrowheads.target=null}};E(zt,"typeName","straight"),E(zt,"HIGHLIGHT_COLOR",65535),E(zt,"DEFAULT_OPACITY",.8),E(zt,"HIGHLIGHT_OPACITY",1),E(zt,"DEFAULT_HOVER_OPACITY_BOOST",.1),E(zt,"DEFAULT_HOVER_THICKNESS_MULTIPLIER",1.1);let _i=zt;class Ja extends _i{constructor(t,i,n,s={}){super(t,i,n,s);E(this,"labelObject",null);E(this,"numPoints",20);E(this,"curvature",.3);this.numPoints=Math.max(1,Math.floor(this.data.numCurvePoints||20)),this.curvature=typeof this.data.curvature=="number"&&isFinite(this.data.curvature)?this.data.curvature:.3,this.data.label&&(this.labelObject=this._createLabel()),this.update()}_createLabel(){const t={color:this.data.labelColor||"var(--sg-edge-label-text, white)",backgroundColor:this.data.labelBackgroundColor||"var(--sg-edge-label-bg, rgba(0,0,0,0.6))",padding:"2px 5px",borderRadius:"3px",fontSize:this.data.labelFontSize||"12px"};return uo(this.data.label,this.id,"edge-label",t,"edge-label-curved")}update(){var g,p,x;if(!this.line||!this.source||!this.target)return;this.numPoints=Math.max(1,Math.floor(this.numPoints));const t=this.source.position,i=this.target.position;if(!isFinite(t.x)||!isFinite(t.y)||!isFinite(t.z)||!isFinite(i.x)||!isFinite(i.y)||!isFinite(i.z))return;const n=new M().addVectors(t,i).multiplyScalar(.5),s=i.x-t.x,a=i.y-t.y;let o=new M(-a,s,0);if(o.lengthSq()<1e-8){const _=new M;(p=(g=this.space)==null?void 0:g._cam)==null||p.getWorldDirection(_),o.set(-_.y,_.x,0),o.lengthSq()<1e-8&&o.set(1,0,0)}o.normalize();const l=t.distanceTo(i),c=o.multiplyScalar(l*this.curvature),h=new M().addVectors(n,c);(isNaN(h.x)||isNaN(h.y)||isNaN(h.z))&&h.copy(n);const d=new Fl(t,h,i),u=this.numPoints,f=d.getPoints(u),m=[];f.forEach(_=>{m.push(_.x,_.y,_.z)}),(m.length===0||m.length/3!==u+1)&&(m.length=0,m.push(t.x,t.y,t.z),m.push(i.x,i.y,i.z)),this.line.geometry.setPositions(m);const v=this.line.geometry.attributes.position;if(!(!v||v.count===0)){if(((x=this.data.gradientColors)==null?void 0:x.length)===2){this.line.material.vertexColors=!0,this.line.material.needsUpdate=!0;const _=new fe(this.data.gradientColors[0]),y=new fe(this.data.gradientColors[1]),w=[],C=Math.max(1,v.count-1);for(let A=0;A<v.count;A++){const L=C===0?0:A/C,b=new fe().lerpColors(_,y,L);w.push(b.r,b.g,b.b)}v.array.length===w.length&&this.line.geometry.setColors(w)}else this.line.material.vertexColors=!1,this.line.material.needsUpdate=!0,this.line.material.color.set(this.data.color||53503);this.line.material.dashed&&this.line.computeLineDistances(),this.line.geometry.computeBoundingSphere(),this._updateArrowheadsAlongCurve(f),this._updateLabelAlongCurve(f)}}_updateArrowheadsAlongCurve(t){if(!t||t.length<2)return;const i=t.length-1;if(this.arrowheads.target){const n=t[i],s=t[i-1];this.arrowheads.target.position.copy(n);const a=new M().subVectors(n,s).normalize();this._orientArrowhead(this.arrowheads.target,a)}if(this.arrowheads.source){const n=t[0],s=t[1];this.arrowheads.source.position.copy(n);const a=new M().subVectors(n,s).normalize();this._orientArrowhead(this.arrowheads.source,a)}}_updateLabelAlongCurve(t){var i;if(this.labelObject&&(t==null?void 0:t.length)>0){const n=Math.floor(t.length/2);this.labelObject.position.copy(t[n]),(i=this.space)!=null&&i._cam&&this.labelObject.quaternion.copy(this.space._cam.quaternion),ra(this.labelObject,this.data.labelLod,this.space)}}setHighlight(t){var i,n;super.setHighlight(t),(n=(i=this.labelObject)==null?void 0:i.element)==null||n.classList.toggle("selected",t)}dispose(){var t,i,n,s;(i=(t=this.labelObject)==null?void 0:t.element)==null||i.remove(),(s=(n=this.labelObject)==null?void 0:n.parent)==null||s.remove(this.labelObject),this.labelObject=null,super.dispose()}}E(Ja,"typeName","curved");class Qa extends _i{constructor(t,i,n,s={}){super(t,i,n,s);E(this,"labelObject",null);E(this,"labelText","");this.labelText=this.data.label||"",this.labelText&&(this.labelObject=this._createLabel()),this.update()}_createLabel(){const t={color:this.data.labelColor||"var(--sg-edge-label-text, white)",backgroundColor:this.data.labelBackgroundColor||"var(--sg-edge-label-bg, rgba(0,0,0,0.6))",padding:"2px 5px",borderRadius:"3px",fontSize:this.data.labelFontSize||"12px"};return uo(this.labelText,this.id,"edge-label",t,"edge-label")}update(){var t;if(super.update(),this.labelObject){const i=this.source.position,n=this.target.position;this.labelObject.position.addVectors(i,n).multiplyScalar(.5),(t=this.space)!=null&&t._cam&&this.labelObject.quaternion.copy(this.space._cam.quaternion),ra(this.labelObject,this.data.labelLod,this.space)}}setHighlight(t){var i,n;super.setHighlight(t),(n=(i=this.labelObject)==null?void 0:i.element)==null||n.classList.toggle("selected",t)}dispose(){var t,i,n,s;(i=(t=this.labelObject)==null?void 0:t.element)==null||i.remove(),(s=(n=this.labelObject)==null?void 0:n.parent)==null||s.remove(this.labelObject),this.labelObject=null,super.dispose()}}E(Qa,"typeName","labeled");class eo extends _i{constructor(e,t,i,n={}){const s=bt.mergeDeep({dashed:!0,dashScale:n.dashScale??1,dashSize:n.dashSize??1,gapSize:n.gapSize??2,thickness:n.thickness??2},n);super(e,t,i,s)}}E(eo,"typeName","dotted");const Os=class Os extends _i{constructor(e,t,i,n={}){const s=bt.mergeDeep({thickness:n.thickness??3,thicknessDataKey:n.thicknessDataKey??"value",thicknessRange:n.thicknessRange??{min:0,max:100},visualThicknessRange:n.visualThicknessRange??{min:Os.MIN_THICKNESS,max:Os.MAX_THICKNESS}},n);super(e,t,i,s),this.updateThicknessFromData()}update(){this.updateThicknessFromData(),super.update()}updateThicknessFromData(){if(!this.line||!this.line.material)return;const e=this.data[this.data.thicknessDataKey]??null;if(typeof e=="number"&&isFinite(e)){const{thicknessRange:t,visualThicknessRange:i}=this.data;let n=0;t.max>t.min?n=(e-t.min)/(t.max-t.min):t.max===t.min&&e>=t.min&&(n=1),n=bt.clamp(n,0,1);const s=Qr.lerp(i.min,i.max,n);this.line.material.linewidth=Math.max(.1,s)}else this.line.material.linewidth=this.data.thickness;this.line.material.needsUpdate=!0}setValue(e){var t;this.data[this.data.thicknessDataKey]=e,this.updateThicknessFromData(),(t=this.space)==null||t.emit("edge:updated",{edge:this,property:"data",value:this.data})}};E(Os,"typeName","dynamicThickness"),E(Os,"MIN_THICKNESS",1),E(Os,"MAX_THICKNESS",10);let Jr=Os;class dd extends _i{constructor(t,i,n,s={}){const a={particleCount:s.particleCount??10,particleSpeed:s.particleSpeed??.5,particleSize:s.particleSize??3,particleColor:s.particleColor??65535,flowDirection:s.flowDirection??1,animated:s.animated??!0,glowEffect:s.glowEffect??!0,...s};super(t,i,n,a);E(this,"particles",[]);E(this,"particleCount",10);E(this,"particleSpeed",.5);E(this,"particleSystem",null);E(this,"animationFrame",null);E(this,"flowDirection",1);this.particleCount=a.particleCount,this.particleSpeed=a.particleSpeed,this.flowDirection=a.flowDirection,this._createParticleSystem(),a.animated&&this._startAnimation()}_createParticleSystem(){const t=new Float32Array(this.particleCount*3),i=new Float32Array(this.particleCount*3),n=new Float32Array(this.particleCount),s=new Float32Array(this.particleCount);for(let l=0;l<this.particleCount;l++){const c=l/this.particleCount,h=this._getPositionOnCurve(c);t[l*3]=h.x,t[l*3+1]=h.y,t[l*3+2]=h.z;const d=new fe(this.data.particleColor);i[l*3]=d.r,i[l*3+1]=d.g,i[l*3+2]=d.b,n[l]=this.data.particleSize,s[l]=Math.random()*.5+.5,this.particles.push({progress:c,velocity:s[l],originalSize:this.data.particleSize,life:1})}const a=new At;a.setAttribute("position",new Ct(t,3)),a.setAttribute("color",new Ct(i,3)),a.setAttribute("size",new Ct(n,1));const o=new Ot({uniforms:{time:{value:0},glowIntensity:{value:this.data.glowEffect?1:0}},vertexShader:`
                attribute float size;
                attribute vec3 color;
                varying vec3 vColor;
                varying float vSize;
                uniform float time;

                void main() {
                    vColor = color;
                    vSize = size;

                    vec4 worldPosition = modelMatrix * vec4(position, 1.0);
                    vec4 mvPosition = viewMatrix * worldPosition;

                    gl_Position = projectionMatrix * mvPosition;
                    gl_PointSize = size * (300.0 / -mvPosition.z);
                }
            `,fragmentShader:`
                varying vec3 vColor;
                varying float vSize;
                uniform float time;
                uniform float glowIntensity;

                void main() {
                    vec2 center = gl_PointCoord - 0.5;
                    float dist = length(center);

                    if (dist > 0.5) discard;

                    float alpha = 1.0 - (dist * 2.0);
                    alpha = pow(alpha, 2.0);

                    vec3 color = vColor;
                    if (glowIntensity > 0.0) {
                        float glow = sin(time * 3.0 + dist * 10.0) * 0.3 + 0.7;
                        color *= glow * glowIntensity + (1.0 - glowIntensity);
                    }

                    gl_FragColor = vec4(color, alpha);
                }
            `,transparent:!0,depthTest:!1,blending:Qc,vertexColors:!0});this.particleSystem=new cm(a,o),this.particleSystem.userData={edgeId:this.id,type:"flow-particles"},this.particleSystem.renderOrder=1}_getPositionOnCurve(t){if(!this.source||!this.target)return new M;const i=this.source.position,n=this.target.position;return new M().lerpVectors(i,n,t)}_startAnimation(){if(this.animationFrame)return;const t=()=>{this._updateParticles(),this.animationFrame=requestAnimationFrame(t)};this.animationFrame=requestAnimationFrame(t)}_stopAnimation(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null)}_updateParticles(){if(!this.particleSystem||!this.source||!this.target)return;const t=this.particleSystem.geometry.attributes.position.array,i=this.particleSystem.geometry.attributes.size.array,n=performance.now()*.001;this.particleSystem.material.uniforms&&(this.particleSystem.material.uniforms.time.value=n);for(let s=0;s<this.particles.length;s++){const a=this.particles[s];this.flowDirection!==0?(a.progress+=this.particleSpeed*a.velocity*this.flowDirection*.01,this.flowDirection>0&&a.progress>1?(a.progress=0,a.life=1):this.flowDirection<0&&a.progress<0&&(a.progress=1,a.life=1)):(a.progress+=this.particleSpeed*a.velocity*.01*Math.sin(n+s),a.progress=Math.max(0,Math.min(1,a.progress)));const o=this._getPositionOnCurve(a.progress);t[s*3]=o.x,t[s*3+1]=o.y,t[s*3+2]=o.z;const l=Math.sin(n*4+s*.1)*.3+.7;i[s]=a.originalSize*a.life*l,a.life=Math.max(.1,Math.sin(a.progress*Math.PI))}this.particleSystem.geometry.attributes.position.needsUpdate=!0,this.particleSystem.geometry.attributes.size.needsUpdate=!0}update(){super.update(),this.particleSystem&&this.source&&this.target&&this._updateParticles()}setFlowDirection(t){this.flowDirection=t,this.data.flowDirection=t}setParticleSpeed(t){this.particleSpeed=t,this.data.particleSpeed=t}setParticleCount(t){this.particleCount=t,this.data.particleCount=t,this.disposeParticleSystem(),this._createParticleSystem(),this.data.animated&&this._startAnimation()}setParticleColor(t){if(this.data.particleColor=t,this.particleSystem){const i=this.particleSystem.geometry.attributes.color.array,n=new fe(t);for(let s=0;s<this.particleCount;s++)i[s*3]=n.r,i[s*3+1]=n.g,i[s*3+2]=n.b;this.particleSystem.geometry.attributes.color.needsUpdate=!0}}setAnimated(t){this.data.animated=t,t?this._startAnimation():this._stopAnimation()}setGlowEffect(t){this.data.glowEffect=t,this.particleSystem&&this.particleSystem.material.uniforms&&(this.particleSystem.material.uniforms.glowIntensity.value=t?1:0)}disposeParticleSystem(){var t,i,n;this.particleSystem&&((t=this.particleSystem.geometry)==null||t.dispose(),(i=this.particleSystem.material)==null||i.dispose(),(n=this.particleSystem.parent)==null||n.remove(this.particleSystem),this.particleSystem=null),this.particles=[]}dispose(){this._stopAnimation(),this.disposeParticleSystem(),super.dispose()}addToScene(t){this.particleSystem&&t.add(this.particleSystem)}removeFromScene(t){this.particleSystem&&t.remove(this.particleSystem)}}E(dd,"typeName","flow");class ud extends _i{constructor(t,i,n,s={}){const a={restLength:s.restLength??200,stiffness:s.stiffness??.01,damping:s.damping??.95,maxCompression:s.maxCompression??.3,springCoils:s.springCoils??8,springRadius:s.springRadius??5,springColor:s.springColor??8947848,showTension:s.showTension??!0,tensionColorMin:s.tensionColorMin??65280,tensionColorMax:s.tensionColorMax??16711680,enablePhysics:s.enablePhysics??!0,...s};super(t,i,n,a);E(this,"springForce",null);E(this,"restLength",200);E(this,"stiffness",.01);E(this,"damping",.95);E(this,"tension",0);E(this,"isCompressed",!1);E(this,"maxCompression",.3);E(this,"springCoils",8);E(this,"springMesh",null);this.restLength=a.restLength,this.stiffness=a.stiffness,this.damping=a.damping,this.maxCompression=a.maxCompression,this.springCoils=a.springCoils,this._createSpringMesh(),this.update()}_createSpringMesh(){this._disposeSpringMesh();const t=this._createSpringGeometry(),i=new di({color:this.data.springColor,transparent:!0,opacity:.8,side:$t});this.springMesh=new st(t,i),this.springMesh.userData={edgeId:this.id,type:"spring-mesh"}}_createSpringGeometry(){const t=[],i=this.springCoils,s=i*20;for(let l=0;l<=s;l++){const c=l/s,h=c*i*Math.PI*2,d=this.data.springRadius*(1-Math.abs(c-.5)*.3),u=Math.cos(h)*d,f=Math.sin(h)*d,m=c;t.push(new M(u,f,m))}const a=new Od(t);return new Bl(a,s,this.data.springRadius*.2,8,!1)}_updateSpringGeometry(){if(!this.springMesh||!this.source||!this.target)return;const t=this.source.position,i=this.target.position,s=t.distanceTo(i)/this.restLength;this.isCompressed=s<1;const a=new M().subVectors(i,t).normalize(),o=new M;Math.abs(a.y)<.9?o.crossVectors(a,new M(0,1,0)):o.crossVectors(a,new M(1,0,0)),o.normalize();const l=new M().crossVectors(a,o),c=new M().addVectors(t,i).multiplyScalar(.5);this.springMesh.position.copy(c);const h=new Ne;h.makeBasis(o,l,a),this.springMesh.setRotationFromMatrix(h);const d=this.isCompressed?Math.max(this.maxCompression,s):s;this.springMesh.scale.set(this.isCompressed?2-d:1,this.isCompressed?2-d:1,d),this.data.showTension&&this._updateTensionColor(s),this._calculateSpringForce()}_updateTensionColor(t){if(!this.springMesh||!this.springMesh.material)return;const i=Math.abs(t-1),n=Math.min(i*2,1),s=new fe(this.data.tensionColorMin),a=new fe(this.data.tensionColorMax),o=s.clone().lerp(a,n);this.springMesh.material.color.copy(o),this.springMesh.material.opacity=.6+n*.4}_calculateSpringForce(){var l;if(!this.source||!this.target||!this.data.enablePhysics)return;const t=this.source.position,i=this.target.position,s=t.distanceTo(i)-this.restLength,a=-this.stiffness*s,o=new M().subVectors(i,t).normalize();this.springForce=o.multiplyScalar(a),this.tension=Math.abs(s/this.restLength),(l=this.space)==null||l.emit("physics:spring:force",{edge:this,force:this.springForce.clone(),tension:this.tension,displacement:s,isCompressed:this.isCompressed})}update(){super.update(),this._updateSpringGeometry()}getSpringForce(){return this.springForce?this.springForce.clone():new M}getTension(){return this.tension}setRestLength(t){this.restLength=t,this.data.restLength=t,this.update()}setStiffness(t){this.stiffness=t,this.data.stiffness=t}setDamping(t){this.damping=t,this.data.damping=t}setSpringCoils(t){this.springCoils=t,this.data.springCoils=t,this._createSpringMesh(),this.update()}setSpringRadius(t){this.data.springRadius=t,this._createSpringMesh(),this.update()}setTensionColors(t,i){this.data.tensionColorMin=t,this.data.tensionColorMax=i,this.update()}setPhysicsEnabled(t){this.data.enablePhysics=t,t||(this.springForce=null,this.tension=0)}applyForceToNodes(){if(!this.springForce||!this.data.enablePhysics)return;const t=this.springForce.clone(),i=t.clone().multiplyScalar(this.damping-1);this.source.velocity&&(this.source.velocity.add(t.clone().divideScalar(this.source.mass||1)),this.source.velocity.add(i.clone().divideScalar(this.source.mass||1))),this.target.velocity&&(this.target.velocity.sub(t.clone().divideScalar(this.target.mass||1)),this.target.velocity.sub(i.clone().divideScalar(this.target.mass||1)))}animateOscillation(t=20,i=2){if(!this.source||!this.target)return;const n=performance.now()*.001,s=Math.sin(n*i)*t,a=new M().subVectors(this.target.position,this.source.position).normalize(),o=new M;Math.abs(a.y)<.9?o.crossVectors(a,new M(0,1,0)):o.crossVectors(a,new M(1,0,0));const l=o.multiplyScalar(s);if(this.springMesh){const c=new M().addVectors(this.source.position,this.target.position).multiplyScalar(.5);this.springMesh.position.copy(c.add(l))}}_disposeSpringMesh(){var t,i,n;this.springMesh&&((t=this.springMesh.geometry)==null||t.dispose(),(i=this.springMesh.material)==null||i.dispose(),(n=this.springMesh.parent)==null||n.remove(this.springMesh),this.springMesh=null)}dispose(){this._disposeSpringMesh(),super.dispose()}addToScene(t){this.springMesh&&t.add(this.springMesh)}removeFromScene(t){this.springMesh&&t.remove(this.springMesh)}}E(ud,"typeName","spring");class fd extends _i{constructor(t,i,n,s={}){const a={segments:s.segments??50,autoControlPoints:s.autoControlPoints??!0,controlPointsVisible:s.controlPointsVisible??!1,controlPointSize:s.controlPointSize??3,controlPointColor:s.controlPointColor??16776960,curveTension:s.curveTension??.3,curveType:s.curveType??"cubic",manualControlPoints:s.manualControlPoints??null,...s};super(t,i,n,a);E(this,"controlPoints",[]);E(this,"curve",null);E(this,"controlPointMeshes",[]);E(this,"controlPointVisible",!1);E(this,"autoControlPoints",!0);E(this,"segments",50);this.segments=a.segments,this.autoControlPoints=a.autoControlPoints,this.controlPointVisible=a.controlPointsVisible,this._initializeControlPoints(),this._createControlPointMeshes(),this.update()}_initializeControlPoints(){!this.source||!this.target||(this.data.manualControlPoints&&this.data.manualControlPoints.length>0?(this.controlPoints=this.data.manualControlPoints.map(t=>new M(t.x,t.y,t.z||0)),this.autoControlPoints=!1):this.autoControlPoints?this._generateAutoControlPoints():this.controlPoints=[this.source.position.clone(),new M,new M,this.target.position.clone()],this._updateCurve())}_generateAutoControlPoints(){const t=this.source.position,i=this.target.position,n=t.distanceTo(i),s=this.data.curveTension,a=new M().subVectors(i,t),o=new M(-a.z,0,a.x).normalize();if(this.data.curveType==="quadratic"){const l=new M().addVectors(t,i).multiplyScalar(.5),c=o.multiplyScalar(n*s);this.controlPoints=[t.clone(),l.clone().add(c),i.clone()]}else{const l=n*s,c=a.clone().normalize(),h=o.clone().multiplyScalar(l*.5),d=t.clone().add(c.multiplyScalar(l)).add(h),u=a.clone().normalize().negate(),f=o.clone().multiplyScalar(-l*.5),m=i.clone().add(u.multiplyScalar(l)).add(f);this.controlPoints=[t.clone(),d,m,i.clone()]}}_updateCurve(){this.controlPoints.length<3||(this.data.curveType==="quadratic"&&this.controlPoints.length===3?this.curve=new Fl(this.controlPoints[0],this.controlPoints[1],this.controlPoints[2]):this.controlPoints.length>=4&&(this.curve=new um(this.controlPoints[0],this.controlPoints[1],this.controlPoints[2],this.controlPoints[3])),this._updateLineGeometry())}_updateLineGeometry(){var n;if(!this.curve||!this.line)return;const t=this.curve.getPoints(this.segments),i=[];if(t.forEach(s=>{i.push(s.x,s.y,s.z)}),this.line.geometry.setPositions(i),((n=this.data.gradientColors)==null?void 0:n.length)===2){const s=[],a=new fe(this.data.gradientColors[0]),o=new fe(this.data.gradientColors[1]);for(let l=0;l<t.length;l++){const c=l/(t.length-1),h=a.clone().lerp(o,c);s.push(h.r,h.g,h.b)}this.line.geometry.setColors(s)}this.line.material.dashed&&this.line.computeLineDistances(),this.line.geometry.computeBoundingSphere()}_createControlPointMeshes(){if(this._disposeControlPointMeshes(),!this.controlPointVisible)return;const t=new Sn(this.data.controlPointSize,16,8);this.controlPoints.forEach((i,n)=>{if(n===0||n===this.controlPoints.length-1)return;const s=new di({color:this.data.controlPointColor,transparent:!0,opacity:.8}),a=new st(t.clone(),s);a.position.copy(i),a.userData={edgeId:this.id,type:"control-point",index:n},this.controlPointMeshes.push(a)})}_disposeControlPointMeshes(){this.controlPointMeshes.forEach(t=>{var i,n,s;(i=t.geometry)==null||i.dispose(),(n=t.material)==null||n.dispose(),(s=t.parent)==null||s.remove(t)}),this.controlPointMeshes=[]}update(){!this.source||!this.target||(this.controlPoints.length>0&&(this.controlPoints[0].copy(this.source.position),this.controlPoints[this.controlPoints.length-1].copy(this.target.position),this.autoControlPoints&&this._generateAutoControlPoints(),this._updateCurve()),this.controlPointMeshes.forEach((t,i)=>{const n=i+1;this.controlPoints[n]&&t.position.copy(this.controlPoints[n])}),super.update())}setControlPoint(t,i){var n;if(t>=0&&t<this.controlPoints.length){this.controlPoints[t].copy(i),this._updateCurve();const s=t-1;s>=0&&s<this.controlPointMeshes.length&&this.controlPointMeshes[s].position.copy(i),(n=this.space)==null||n.emit("graph:edge:controlPointChanged",{edge:this,index:t,position:i.clone()})}}addControlPoint(t,i=null){var a;const n=i!==null?i:Math.floor(this.controlPoints.length/2),s=new M().copy(t);this.controlPoints.splice(n,0,s),this.autoControlPoints=!1,this._updateCurve(),this._createControlPointMeshes(),(a=this.space)==null||a.emit("graph:edge:controlPointAdded",{edge:this,index:n,position:s.clone()})}removeControlPoint(t){var i;t>0&&t<this.controlPoints.length-1&&(this.controlPoints.splice(t,1),this._updateCurve(),this._createControlPointMeshes(),(i=this.space)==null||i.emit("graph:edge:controlPointRemoved",{edge:this,index:t}))}setControlPointsVisible(t){this.controlPointVisible=t,this.data.controlPointsVisible=t,t?this._createControlPointMeshes():this._disposeControlPointMeshes()}setCurveTension(t){this.data.curveTension=t,this.autoControlPoints&&(this._generateAutoControlPoints(),this._updateCurve())}setCurveType(t){(t==="quadratic"||t==="cubic")&&(this.data.curveType=t,this._generateAutoControlPoints(),this._updateCurve(),this._createControlPointMeshes())}setSegments(t){this.segments=Math.max(3,t),this.data.segments=this.segments,this._updateLineGeometry()}setAutoControlPoints(t){this.autoControlPoints=t,this.data.autoControlPoints=t,t&&(this._generateAutoControlPoints(),this._updateCurve(),this._createControlPointMeshes())}getPointOnCurve(t){return this.curve?this.curve.getPoint(t):new M}getTangentOnCurve(t){return this.curve?this.curve.getTangent(t):new M}getCurveLength(){return this.curve?this.curve.getLength():0}getControlPoints(){return this.controlPoints.map(t=>t.clone())}animateControlPoints(t=20,i=1){if(!this.autoControlPoints||this.controlPoints.length<3)return;const n=performance.now()*.001;for(let s=1;s<this.controlPoints.length-1;s++){const a=this.controlPoints[s].y,o=Math.sin(n*i+s)*t;this.controlPoints[s].y=a+o}this._updateCurve()}dispose(){this._disposeControlPointMeshes(),super.dispose()}addToScene(t){this.controlPointMeshes.forEach(i=>t.add(i))}removeFromScene(t){this.controlPointMeshes.forEach(i=>t.remove(i))}}E(fd,"typeName","bezier");class DC extends Fp{constructor(e){super(),this.space=e}registerCoreEdgeTypes(){this.registerType(_i.typeName,_i),this.registerType(Ja.typeName,Ja),this.registerType(Qa.typeName,Qa),this.registerType(eo.typeName,eo),this.registerType(Jr.typeName,Jr),this.registerType(dd.typeName,dd),this.registerType(ud.typeName,ud),this.registerType(fd.typeName,fd),this.registerType("default",_i)}createEdge(e,t,i,n,s={}){const a=(s==null?void 0:s.type)||t,o=this.create(a,[e,i,n,s],"default");return o&&(o.space=this.space),o}}const Pl=5e3,NC=.5,IC=1.5;class kC{constructor(e){var t;this.geometry=new lo(.5,1,8),this.material=new Ci({roughness:.8,metalness:.2,vertexColors:!0}),this.instancedMesh=new ao(this.geometry,this.material,Pl*2),this.instancedMesh.instanceMatrix.setUsage(Dr),(t=this.instancedMesh.instanceColor)==null||t.setUsage(Dr),this.instancedMesh.castShadow=!1,this.instancedMesh.receiveShadow=!0,e.add(this.instancedMesh),this.arrowheadIdToInstanceId=new Map,this.instanceIdToArrowheadId=new Map,this.activeInstances=0}addArrowhead(e,t){if(this.activeInstances>=Pl*2)return console.warn("InstancedEdgeManager: Max arrowhead instances reached."),null;const i=this.activeInstances++,n=`${e.id}_${t}`;return this.arrowheadIdToInstanceId.set(n,i),this.instanceIdToArrowheadId.set(i,n),this.updateArrowheadTransform(e,t,i),this.updateArrowheadColor(e,i),i}updateArrowheadTransform(e,t,i=this.arrowheadIdToInstanceId.get(`${e.id}_${t}`)){var f;if(i===void 0)return;const n=e.source.position,s=e.target.position,a=new Ne,o=new M,l=new M().subVectors(s,n).normalize(),c=((f=e.data)==null?void 0:f.arrowheadSize)??IC;t==="target"?o.copy(s).sub(l.clone().multiplyScalar(c*.5)):o.copy(n).add(l.clone().multiplyScalar(c*.5));const h=new en,d=new M(0,1,0);l.equals(new M(0,0,0))||(d.dot(l)>.9999||d.dot(l)<-.9999?d.dot(l)<-.9999&&h.setFromAxisAngle(new M(1,0,0),Math.PI):h.setFromUnitVectors(d,l));const u=new M(c,c,c);a.compose(o,h,u),this.instancedMesh.setMatrixAt(i,a),this.instancedMesh.instanceMatrix.needsUpdate=!0}updateArrowheadColor(e,t){var n;if(t===void 0||!this.instancedMesh.instanceColor)return;const i=new fe(((n=e.data)==null?void 0:n.color)??8947848);this.instancedMesh.setColorAt(t,i),this.instancedMesh.instanceColor.needsUpdate=!0}removeArrowhead(e,t){const i=`${e.id}_${t}`,n=this.arrowheadIdToInstanceId.get(i);n!==void 0&&(this.instancedMesh.setMatrixAt(n,new Ne().makeScale(0,0,0)),this.instancedMesh.instanceMatrix.needsUpdate=!0,this.arrowheadIdToInstanceId.delete(i),this.instanceIdToArrowheadId.delete(n))}dispose(){var e;(e=this.instancedMesh.parent)==null||e.remove(this.instancedMesh),this.instancedMesh.geometry.dispose(),this.instancedMesh.material.dispose(),this.arrowheadIdToInstanceId.clear(),this.instanceIdToArrowheadId.clear()}}class OC{constructor(e){var t;this.geometry=new kr(.5,.5,1,8,1),this.material=new Ci({roughness:.8,metalness:.2,vertexColors:!0}),this.instancedMesh=new ao(this.geometry,this.material,Pl),this.instancedMesh.instanceMatrix.setUsage(Dr),(t=this.instancedMesh.instanceColor)==null||t.setUsage(Dr),this.instancedMesh.castShadow=!1,this.instancedMesh.receiveShadow=!0,e.add(this.instancedMesh),this.edgeIdToInstanceId=new Map,this.instanceIdToEdgeId=new Map,this.activeInstances=0}addEdge(e){if(this.activeInstances>=Pl)return console.warn("InstancedEdgeManager: Max instances reached."),null;const t=this.activeInstances++;return this.edgeIdToInstanceId.set(e.id,t),this.instanceIdToEdgeId.set(t,e.id),this.updateEdgeTransform(e,t),this.updateEdgeColor(e,t),t}updateEdgeTransform(e,t=this.edgeIdToInstanceId.get(e.id)){var f;if(t===void 0)return;const i=e.source.position,n=e.target.position,s=new Ne,a=new M().addVectors(i,n).multiplyScalar(.5),o=new M().subVectors(n,i),l=o.length();o.normalize();const c=new en,h=new M(0,1,0);o.equals(new M(0,0,0))||(h.dot(o)>.9999||h.dot(o)<-.9999?h.dot(o)<-.9999&&c.setFromAxisAngle(new M(1,0,0),Math.PI):c.setFromUnitVectors(h,o));const d=((f=e.data)==null?void 0:f.thicknessInstanced)??NC,u=new M(d*2,l,d*2);s.compose(a,c,u),this.instancedMesh.setMatrixAt(t,s),this.instancedMesh.instanceMatrix.needsUpdate=!0}updateEdgeColor(e,t=this.edgeIdToInstanceId.get(e.id)){var n;if(t===void 0||!this.instancedMesh.instanceColor)return;const i=new fe(((n=e.data)==null?void 0:n.color)??8947848);this.instancedMesh.setColorAt(t,i),this.instancedMesh.instanceColor.needsUpdate=!0}removeEdge(e){const t=this.edgeIdToInstanceId.get(e.id);t!==void 0&&(this.instancedMesh.setMatrixAt(t,new Ne().makeScale(0,0,0)),this.instancedMesh.instanceMatrix.needsUpdate=!0,this.edgeIdToInstanceId.delete(e.id),this.instanceIdToEdgeId.delete(t))}getRaycastIntersection(e){if(!this.instancedMesh||this.activeInstances===0)return null;const t=e.intersectObject(this.instancedMesh);if(t.length===0)return null;const i=t[0].instanceId,n=this.instanceIdToEdgeId.get(i);return n?{...t[0],edgeId:n}:null}dispose(){var e;(e=this.instancedMesh.parent)==null||e.remove(this.instancedMesh),this.instancedMesh.geometry.dispose(),this.instancedMesh.material.dispose(),this.edgeIdToInstanceId.clear(),this.instanceIdToEdgeId.clear()}}class zC{constructor(e){this.scene=e,this.edgeGroup=new OC(this.scene),this.arrowheadGroup=new kC(this.scene)}addEdge(e){var i,n,s,a,o;const t=(i=this.edgeGroup)==null?void 0:i.addEdge(e);return t===null?(e.isInstanced=!1,!1):(e.isInstanced=!0,e.instanceId=t,e.line&&(e.line.visible=!1),(n=e.data.arrowheads)!=null&&n.source&&((s=this.arrowheadGroup)==null||s.addArrowhead(e,"source")),(a=e.data.arrowheads)!=null&&a.target&&((o=this.arrowheadGroup)==null||o.addArrowhead(e,"target")),!0)}updateEdge(e){var t,i,n,s,a,o,l;e.isInstanced&&((t=this.edgeGroup)==null||t.updateEdgeTransform(e),(i=this.edgeGroup)==null||i.updateEdgeColor(e),(n=e.data.arrowheads)!=null&&n.source&&((s=this.arrowheadGroup)==null||s.updateArrowheadTransform(e,"source")),(a=e.data.arrowheads)!=null&&a.target&&((o=this.arrowheadGroup)==null||o.updateArrowheadTransform(e,"target")),(l=this.arrowheadGroup)==null||l.updateArrowheadColor(e))}removeEdge(e){var t,i,n,s,a;e.isInstanced&&((t=this.edgeGroup)==null||t.removeEdge(e),(i=e.data.arrowheads)!=null&&i.source&&((n=this.arrowheadGroup)==null||n.removeArrowhead(e,"source")),(s=e.data.arrowheads)!=null&&s.target&&((a=this.arrowheadGroup)==null||a.removeArrowhead(e,"target")),e.isInstanced=!1)}raycast(e){var t;return(t=this.edgeGroup)==null?void 0:t.getRaycastIntersection(e)}dispose(){var e;(e=this.edgeGroup)==null||e.dispose(),this.edgeGroup=null}}const Np=50;class UC extends mn{constructor(t,i){super(t,i);E(this,"edges",new Map);E(this,"edgeFactory",null);E(this,"instancedEdgeManager",null);E(this,"useInstancedEdges",!1);this.edgeFactory=new DC(t),this._registerEdgeTypes()}_registerEdgeTypes(){this.edgeFactory.registerType(_i.typeName,_i),this.edgeFactory.registerType(Ja.typeName,Ja),this.edgeFactory.registerType(Qa.typeName,Qa),this.edgeFactory.registerType(eo.typeName,eo),this.edgeFactory.registerType(Jr.typeName,Jr),this.edgeFactory.registerType("default",_i)}getName(){return"EdgePlugin"}init(){super.init(),this.space.on("renderer:resize",this.handleRendererResize.bind(this));const t=this.pluginManager.getPlugin("RenderingPlugin");if(!(t!=null&&t.getWebGLScene())){console.error("EdgePlugin: RenderingPlugin or scene not available.");return}this.instancedEdgeManager=new zC(t.getWebGLScene())}handleRendererResize({width:t,height:i}){this.edges.forEach(n=>{!n.isInstanced&&n.updateResolution&&n.updateResolution(t,i)})}_checkAndSwitchInstancingMode(){const t=this.edges.size>=Np;if(this.useInstancedEdges===t)return;this.useInstancedEdges=t;const i=this.pluginManager.getPlugin("RenderingPlugin");if(!i||!this.instancedEdgeManager)return;const n=i.getWebGLScene(),s=i.getCSS3DScene();this.edges.forEach(a=>{var o,l,c,h;this.useInstancedEdges?a.isInstanced||(n==null||n.remove(a.line),(o=a.arrowheads)!=null&&o.source&&(n==null||n.remove(a.arrowheads.source)),(l=a.arrowheads)!=null&&l.target&&(n==null||n.remove(a.arrowheads.target)),this.instancedEdgeManager.addEdge(a)):(a.isInstanced&&this.instancedEdgeManager.removeEdge(a),a.line&&(n==null||n.add(a.line)),(c=a.arrowheads)!=null&&c.source&&(n==null||n.add(a.arrowheads.source)),(h=a.arrowheads)!=null&&h.target&&(n==null||n.add(a.arrowheads.target))),a.labelObject&&(this.useInstancedEdges,s==null||s.add(a.labelObject))})}addEdge(t,i,n={}){var c,h;if(!t||!i||t===i)return console.warn("EdgePlugin: Invalid source or target."),null;for(const d of this.edges.values())if(d.source===t&&d.target===i||d.source===i&&d.target===t)return console.warn(`EdgePlugin: Duplicate edge ignored between ${t.id} and ${i.id}.`),d;const s=this.edgeFactory.createEdge(bt.generateId("edge"),n.type||"default",t,i,n);if(!s)return console.error(`EdgePlugin: Failed to create edge type "${n.type||"default"}".`),null;this.edges.set(s.id,s);const a=this.pluginManager.getPlugin("RenderingPlugin"),o=a==null?void 0:a.getWebGLScene(),l=a==null?void 0:a.getCSS3DScene();return this.edges.size>=Np?this.instancedEdgeManager.addEdge(s):(s.line&&(o==null||o.add(s.line)),(c=s.arrowheads)!=null&&c.source&&(o==null||o.add(s.arrowheads.source)),(h=s.arrowheads)!=null&&h.target&&(o==null||o.add(s.arrowheads.target))),s.labelObject&&(l==null||l.add(s.labelObject)),this._checkAndSwitchInstancingMode(),this.space.emit("edge:added",s),s}removeEdge(t){var n,s,a,o,l,c,h,d;const i=this.edges.get(t);if(!i)return console.warn(`EdgePlugin: Edge ${t} not found.`);if(((n=this.pluginManager.getPlugin("UIPlugin"))==null?void 0:n.getSelectedEdge())===i&&this.pluginManager.getPlugin("UIPlugin").setSelectedEdge(null),(s=this.pluginManager.getPlugin("LayoutPlugin"))==null||s.removeEdgeFromLayout(i),i.isInstanced&&this.instancedEdgeManager)this.instancedEdgeManager.removeEdge(i);else{const u=this.pluginManager.getPlugin("RenderingPlugin");(a=u==null?void 0:u.getWebGLScene())==null||a.remove(i.line),(o=i.arrowheads)!=null&&o.source&&((l=u==null?void 0:u.getWebGLScene())==null||l.remove(i.arrowheads.source)),(c=i.arrowheads)!=null&&c.target&&((h=u==null?void 0:u.getWebGLScene())==null||h.remove(i.arrowheads.target)),i.labelObject&&((d=u==null?void 0:u.getCSS3DScene())==null||d.remove(i.labelObject))}i.dispose(),this.edges.delete(t),this._checkAndSwitchInstancingMode(),this.space.emit("edge:removed",t,i)}getEdgeById(t){return this.edges.get(t)}getEdges(){return this.edges}getEdgesForNode(t){const i=[];for(const n of this.edges.values())(n.source===t||n.target===t)&&i.push(n);return i}update(){this.edges.forEach(t=>{var i,n;t.isInstanced&&this.instancedEdgeManager?this.instancedEdgeManager.updateEdge(t):(i=t.update)==null||i.call(t),(n=t.updateLabelPosition)==null||n.call(t)})}dispose(){var t;super.dispose(),(t=this.instancedEdgeManager)==null||t.dispose(),this.instancedEdgeManager=null,this.edges.forEach(i=>i.dispose()),this.edges.clear()}}class FC{constructor(e={}){E(this,"space",null);E(this,"nodesMap",new Map);E(this,"edgesMap",new Map);E(this,"worker",null);E(this,"isRunning",!1);E(this,"totalEnergy",1/0);E(this,"settings",{repulsion:3e3,centerStrength:5e-4,damping:.92,minEnergyThreshold:.1,gravityCenter:new M(0,0,0),zSpreadFactor:.15,autoStopDelay:4e3,nodePadding:1.2,defaultElasticStiffness:.001,defaultElasticIdealLength:200,defaultRigidStiffness:.1,defaultWeldStiffness:.5,enableClustering:!1,clusterAttribute:"clusterId",clusterStrength:.005});this.settings={...this.settings,...e},this.worker=new Worker(new URL("/spacegraphjs/assets/forceLayout.worker-BugFg3fl.js",import.meta.url),{type:"module"}),this.worker.onmessage=this._handleWorkerMessage.bind(this),this.worker.onerror=t=>{console.error("ForceLayout Worker Error:",t),this.isRunning=!1,this.space.emit("layout:error",{error:t})}}setContext(e,t){this.space=e,this.pluginManager=t}_handleWorkerMessage(e){const{type:t,positions:i,energy:n,error:s}=e.data;switch(t){case"positionsUpdate":this.totalEnergy=n,i.forEach(a=>{const o=this.nodesMap.get(a.id);o==null||o.position.set(a.x,a.y,a.z)});break;case"stopped":this.isRunning=!1,this.totalEnergy=n,this.space.emit("layout:stopped",{name:"force (worker)"});break;case"error":console.error("ForceLayout Worker error:",s),this.space.emit("layout:error",{error:s});break}}init(e,t,i={}){this.nodesMap.clear(),e.forEach(o=>this.nodesMap.set(o.id,o)),this.edgesMap.clear(),t.forEach(o=>this.edgesMap.set(o.id,o)),this.settings={...this.settings,...i};const n=e.map(o=>{var l;return{id:o.id,x:o.position.x,y:o.position.y,z:o.position.z,vx:0,vy:0,vz:0,mass:o.mass||1,isFixed:o.isPinned,isPinned:o.isPinned,radius:o.getBoundingSphereRadius(),clusterId:(l=o.data)==null?void 0:l.clusterId}}),s=t.map(o=>({sourceId:o.source.id,targetId:o.target.id,constraintType:o.data.constraintType,constraintParams:o.data.constraintParams})),a=this.settings.gravityCenter&&typeof this.settings.gravityCenter.x=="number"?{x:this.settings.gravityCenter.x,y:this.settings.gravityCenter.y,z:this.settings.gravityCenter.z}:{x:0,y:0,z:0};this.worker.postMessage({type:"init",payload:{nodes:n,edges:s,settings:{...this.settings,gravityCenter:a}}})}isRunningCheck(){return this.isRunning}getConfig(){return{...this.settings}}setPinState(e,t){this.nodesMap.has(e.id)&&(e.isPinned=t,this.worker.postMessage({type:"updateNodeState",payload:{nodeId:e.id,isFixed:e.isPinned,isPinned:e.isPinned}}),this.isRunning&&this.kick())}fixNode(e){this.nodesMap.has(e.id)&&this.worker.postMessage({type:"updateNodeState",payload:{nodeId:e.id,isFixed:!0,isPinned:e.isPinned,position:{x:e.position.x,y:e.position.y,z:e.position.z}}})}releaseNode(e){this.nodesMap.has(e.id)&&(e.isPinned||this.worker.postMessage({type:"updateNodeState",payload:{nodeId:e.id,isFixed:!1,isPinned:e.isPinned}}),this.kick())}addNode(e){var t;this.nodesMap.has(e.id)||(this.nodesMap.set(e.id,e),this.worker.postMessage({type:"addNode",payload:{node:{id:e.id,x:e.position.x,y:e.position.y,z:e.position.z,vx:0,vy:0,vz:0,mass:e.mass||1,isFixed:e.isPinned,isPinned:e.isPinned,radius:e.getBoundingSphereRadius(),clusterId:(t=e.data)==null?void 0:t.clusterId}}}),(this.isRunning||this.nodesMap.size>1)&&this.kick())}removeNode(e){this.nodesMap.has(e.id)&&(this.nodesMap.delete(e.id),this.worker.postMessage({type:"removeNode",payload:{nodeId:e.id}}),this.isRunning&&this.nodesMap.size<2?this.stop():this.isRunning&&this.kick())}addEdge(e){this.edgesMap.has(e.id)||(this.edgesMap.set(e.id,e),this.worker.postMessage({type:"addEdge",payload:{edge:{id:e.id,sourceId:e.source.id,targetId:e.target.id,constraintType:e.data.constraintType,constraintParams:e.data.constraintParams}}}),this.isRunning&&this.kick())}removeEdge(e){this.edgesMap.has(e.id)&&(this.edgesMap.delete(e.id),this.worker.postMessage({type:"removeEdge",payload:{sourceId:e.source.id,targetId:e.target.id}}),this.isRunning&&this.kick())}runOnce(){this.isRunning||this.run()}run(){if(this.isRunning||this.nodesMap.size<1){this.isRunning&&this.kick();return}this.isRunning=!0,this.worker.postMessage({type:"start"}),this.space.emit("layout:started",{name:"force (worker)"})}stop(){this.worker&&this.worker.postMessage({type:"stop"})}kick(e=1){this.nodesMap.size<1||!this.worker||(this.worker.postMessage({type:"kick",payload:{intensity:e}}),this.isRunning||this.run())}setSettings(e){this.settings={...this.settings,...e};const t=this.settings.gravityCenter&&typeof this.settings.gravityCenter.x=="number"?{x:this.settings.gravityCenter.x,y:this.settings.gravityCenter.y,z:this.settings.gravityCenter.z}:{x:0,y:0,z:0};this.worker.postMessage({type:"updateSettings",payload:{settings:{...this.settings,gravityCenter:t}}})}dispose(){this.worker&&(this.worker.terminate(),this.worker=null),this.nodesMap.clear(),this.edgesMap.clear(),this.isRunning=!1,this.space=null}}class BC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"nodes",[]);E(this,"settings",{columns:0,padding:{x:150,y:150,z:150},plane:"xy",depthCount:0,centerOrigin:!0,animate:!0});this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}updateConfig(e){this.settings={...this.settings,...e}}init(e,t,i={}){if(i&&this.updateConfig(i),this.nodes=[...e],this.nodes.length===0)return;const n=this.nodes.length;let{columns:s,padding:a,plane:o,depthCount:l,centerOrigin:c}=this.settings;a=typeof a=="number"?{x:a,y:a,z:a}:a;let h=s;if(o==="xyz"&&l>0){h<=0&&(h=Math.ceil(Math.sqrt(n/l)));const d=Math.ceil(n/(h*l));let u=0;for(let f=0;f<l&&u<n;f++)for(let m=0;m<d&&u<n;m++)for(let v=0;v<h&&u<n;v++)this.nodes[u++].position.set(v*a.x,m*a.y,f*a.z);if(c){const f=(h-1)*a.x,m=(d-1)*a.y,v=(l-1)*a.z;this.nodes.forEach(g=>{g.position.x-=f/2,g.position.y-=m/2,g.position.z-=v/2})}}else{h<=0&&(h=Math.ceil(Math.sqrt(n)));const d=Math.ceil(n/h);let u=0;for(let f=0;f<d&&u<n;f++)for(let m=0;m<h&&u<n;m++){const v=this.nodes[u++];o==="xy"?v.position.set(m*a.x,f*a.y,0):o==="xz"?v.position.set(m*a.x,0,f*a.z):v.position.set(0,f*a.y,m*a.z)}if(c){const f=(h-1)*(o==="yz"?a.z:a.x),m=(d-1)*(o==="xz"?a.z:a.y);this.nodes.forEach(v=>{o==="xy"?(v.position.x-=f/2,v.position.y-=m/2):o==="xz"?(v.position.x-=f/2,v.position.z-=m/2):(v.position.y-=m/2,v.position.z-=f/2)})}}}run(){}stop(){}addNode(e){}removeNode(e){}addEdge(e){}removeEdge(e){}dispose(){this.nodes=[],this.space=null,this.pluginManager=null}}class HC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"nodes",[]);E(this,"settings",{radius:200,plane:"xy",startAngle:0,angularSpacing:0,center:{x:0,y:0,z:0},animate:!0});this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}updateConfig(e){this.settings={...this.settings,...e}}init(e,t,i={}){if(i&&this.updateConfig(i),this.nodes=[...e],this.nodes.length===0)return;const n=this.nodes.length,{radius:s,plane:a,startAngle:o,center:l}=this.settings,c=this.settings.angularSpacing<=0?2*Math.PI/n:this.settings.angularSpacing;let h=s;if(s<=0){let d=0;this.nodes.forEach(u=>{var m;const f=((m=u.getBoundingSphereRadius)==null?void 0:m.call(u))||25;d+=f*2*1.5}),h=Math.max(100,d/(2*Math.PI))}this.nodes.forEach((d,u)=>{const f=o+u*c,m=l.x+h*Math.cos(f),v=l.y+h*Math.sin(f);a==="xy"?d.position.set(m,v,l.z):a==="xz"?d.position.set(m,l.y,v):d.position.set(l.x,m,v)})}run(){}stop(){}addNode(e){}removeNode(e){}addEdge(e){}removeEdge(e){}dispose(){this.nodes=[],this.space=null,this.pluginManager=null}}class GC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{radius:500,animate:!0,animationDuration:.7});this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){if(i&&this.updateConfig(i),!e||e.length===0)return;const n=e.length,s=this.settings.radius,a=Math.PI*(Math.sqrt(5)-1);e.forEach((o,l)=>{if(o.isPinned)return;const c=1-l/(n-1)*2,h=Math.sqrt(1-c*c),d=a*l,u=Math.cos(d)*h,f=Math.sin(d)*h;o.position.set(u*s,c*s,f*s)})}updateConfig(e){this.settings={...this.settings,...e}}run(){}stop(){}kick(){}addNode(e){}removeNode(e){}addEdge(e){}removeEdge(e){}dispose(){this.space=null,this.pluginManager=null}}class VC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{levelSeparation:150,nodeSeparation:100,orientation:"top-down",animate:!0,animationDuration:.7});E(this,"nodeMap",new Map);this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){if(i&&this.updateConfig(i),!e||e.length===0)return;this.nodeMap.clear(),e.forEach(a=>{var o;this.nodeMap.set(a.id,{node:a,id:a.id,children:[],parent:null,level:-1,x:0,y:0,width:((o=a.getBoundingSphereRadius)==null?void 0:o.call(a))*2||100,prelim:0,modifier:0})}),t.forEach(a=>{const o=this.nodeMap.get(a.source.id),l=this.nodeMap.get(a.target.id);o&&l&&(o.children.push(l),l.parent=o)});const n=e.filter(a=>!this.nodeMap.get(a.id).parent&&!a.isPinned);if(n.length===0&&e.length>0){const a=e.find(o=>!o.isPinned);a&&n.push(a)}let s=0;n.forEach(a=>{this._firstPass(this.nodeMap.get(a.id),0),this._secondPass(this.nodeMap.get(a.id),s,0);const o=this._calculateTreeWidth(this.nodeMap.get(a.id));s+=o+this.settings.nodeSeparation*2}),this.nodeMap.forEach(a=>{a.node.isPinned||a.node.position.set(a.x,a.y,0)})}_firstPass(e,t){if(e.level=t,e.y=-t*this.settings.levelSeparation,e.children.length===0){e.prelim=0;return}let i=e.children[0];e.children.forEach(a=>{this._firstPass(a,t+1),i=this._apportion(a,i)});const n=e.children[0],s=e.children[e.children.length-1];e.prelim=(n.prelim+s.prelim)/2}_apportion(e,t){return t}_secondPass(e,t,i){e.x=t+e.prelim*this.settings.nodeSeparation;let n=t-(e.children.length-1)*this.settings.nodeSeparation/2;e.children.length===1&&e.children[0].children.length===0&&(n=e.x),e.children.forEach((s,a)=>{this._secondPass(s,n+a*this.settings.nodeSeparation,0)})}_calculateTreeWidth(e){if(!e||e.children.length===0)return(e==null?void 0:e.width)||this.settings.nodeSeparation;let t=0;return e.children.forEach(i=>{t+=this._calculateTreeWidth(i)+this.settings.nodeSeparation}),Math.max(t,e.width)}updateConfig(e){this.settings={...this.settings,...e}}run(){}stop(){}kick(){}addNode(e){}removeNode(e){}addEdge(e){}removeEdge(e){}dispose(){this.space=null,this.pluginManager=null,this.nodeMap.clear()}}class pd{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{padding:10,areaProperty:"size",plane:"xy",depth:0,centerOrigin:!0,width:1e3,height:800});this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}updateConfig(e){this.settings={...this.settings,...e}}init(e,t,i={}){if(i&&this.updateConfig(i),!e||e.length===0)return;const n=e.filter(_=>!_.isPinned);if(n.length===0)return;const{padding:s,plane:a,depth:o,centerOrigin:l,width:c,height:h}=this.settings;let d=0;n.forEach(_=>{const y=_.data[this.settings.areaProperty]||1;_._treemapArea=y,d+=y}),n.sort((_,y)=>y._treemapArea-_._treemapArea);const u={x:0,y:0,width:c,height:h};this._squarify(n,u,d,s);let f=1/0,m=1/0,v=1/0,g=-1/0,p=-1/0,x=-1/0;if(n.forEach(_=>{var N,O,k;const{x:y,y:w,width:C,height:A}=_._treemapRect;let L,b,S;a==="xy"?(L=y+C/2,b=w+A/2,S=o):a==="xz"?(L=y+C/2,b=o,S=w+A/2):(L=o,b=y+C/2,S=w+A/2),_.position.set(L,b,S),_.setSize?_.setSize(C-s,A-s,!1):(N=_.mesh)!=null&&N.scale&&_.mesh.scale.set(C-s,A-s,_.mesh.scale.z||1),f=Math.min(f,L-C/2),m=Math.min(m,b-A/2),v=Math.min(v,S-(((O=_.mesh)==null?void 0:O.scale.z)||1)/2),g=Math.max(g,L+C/2),p=Math.max(p,b+A/2),x=Math.max(x,S+(((k=_.mesh)==null?void 0:k.scale.z)||1)/2)}),l&&n.length>0){const _=(f+g)/2,y=(m+p)/2,w=(v+x)/2;n.forEach(C=>{C.position.x-=_,C.position.y-=y,C.position.z-=w})}}_squarify(e,t,i,n){if(e.length===0)return;if(e.length===1){e[0]._treemapRect={x:t.x+n/2,y:t.y+n/2,width:t.width-n,height:t.height-n};return}let s=[],a=0,o=1/0,l=0;for(let u=0;u<e.length;u++){s.push(e[u]),a+=e[u]._treemapArea;const f=this._calculateRowRatio(s,a,t.width,t.height);if(f<o)o=f,l=u+1;else{s.pop(),a-=e[u]._treemapArea;break}}const c=e.slice(0,l),h=e.slice(l);this._layoutRow(c,t,a,i,n);const d={...t};t.width>t.height?(d.x+=c[0]._treemapRect.width+n,d.width-=c[0]._treemapRect.width+n):(d.y+=c[0]._treemapRect.height+n,d.height-=c[0]._treemapRect.height+n),this._squarify(h,d,i-a,n)}_calculateRowRatio(e,t,i,n){if(e.length===0||t===0)return 1/0;const s=Math.min(...e.map(h=>h._treemapArea)),a=Math.max(...e.map(h=>h._treemapArea)),o=Math.min(i,n),l=o*t/(s*totalArea),c=a*totalArea/(o*t);return Math.max(l,c)}_layoutRow(e,t,i,n,s){const a=t.width>t.height,o=a?t.width:t.height,l=a?t.height:t.width;let c=0;e.forEach(h=>{const d=h._treemapArea/i*o,u=l;a?h._treemapRect={x:t.x+c,y:t.y,width:d,height:u}:h._treemapRect={x:t.x,y:t.y+c,width:u,height:d},c+=d})}run(){}stop(){}update(){}addNode(e){}removeNode(e){}addEdge(e){}removeEdge(e){}kick(){}dispose(){this.space=null,this.pluginManager=null}}E(pd,"layoutName","treemap");class md{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{centerNodeId:null,radiusIncrement:150,angularSeparationMin:Math.PI/12,plane:"xy",startRadius:100,levelSpacingFactor:1,animate:!0,animationDuration:.7});this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}updateConfig(e){this.settings={...this.settings,...e}}init(e,t,i={}){var x;if(i&&this.updateConfig(i),!e||e.length===0)return;const{centerNodeId:n,radiusIncrement:s,plane:a,startRadius:o,levelSpacingFactor:l}=this.settings,c=new M(0,0,0);let h=null,d=e.filter(_=>!_.isPinned);if(n&&(h=e.find(_=>_.id===n),h?(h.position.copy(c),d=d.filter(_=>_.id!==h.id)):console.warn(`RadialLayout: Center node with ID "${n}" not found. Using geometric center.`)),d.length===0)return;const u=new Map,f=new Map;e.forEach(_=>{f.set(_.id,new Set),u.set(_.id,-1)}),t.forEach(_=>{var y,w;(y=f.get(_.source.id))==null||y.add(_.target.id),(w=f.get(_.target.id))==null||w.add(_.source.id)});const m=[];if(h)m.push(h.id),u.set(h.id,0);else{const _=d[0];_&&(m.push(_.id),u.set(_.id,0))}let v=0;for(;v<m.length;){const _=m[v++],y=u.get(_);(x=f.get(_))==null||x.forEach(w=>{u.get(w)===-1&&(u.set(w,y+1),m.push(w))})}const g=new Map;d.forEach(_=>{const y=u.get(_.id)||0;g.has(y)||g.set(y,[]),g.get(y).push(_)}),Array.from(g.keys()).sort((_,y)=>_-y).forEach(_=>{const y=g.get(_);if(y.length===0)return;const w=o+_*s*l,C=2*Math.PI/y.length;y.forEach((A,L)=>{const b=L*C;let S,N,O;a==="xy"?(S=c.x+w*Math.cos(b),N=c.y+w*Math.sin(b),O=c.z):a==="xz"?(S=c.x+w*Math.cos(b),N=c.y,O=c.z+w*Math.sin(b)):(S=c.x,N=c.y+w*Math.cos(b),O=c.z+w*Math.sin(b)),A.position.set(S,N,O)})})}run(){}stop(){}update(){}addNode(e){}removeNode(e){}addEdge(e){}removeEdge(e){}kick(){}dispose(){this.space=null,this.pluginManager=null}}E(md,"layoutName","radial");class WC{constructor(e,t){this.space=e,this.pluginManager=t,this.layouts=new Map,this.activeLayout=null,this.activeLayoutName=null}registerLayout(e,t){var i;this.layouts.has(e)&&console.warn(`LayoutManager: Layout "${e}" already registered. Overwriting.`),(i=t.setContext)==null||i.call(t,this.space,this.pluginManager),this.layouts.set(e,t)}async applyLayout(e,t={}){var l,c,h,d;const i=this.layouts.get(e);if(!i)return console.error(`LayoutManager: Layout "${e}" not found.`),!1;(c=(l=this.activeLayout)==null?void 0:l.stop)==null||c.call(l),this.activeLayout&&this.space.emit("layout:stopped",{name:this.activeLayoutName,layout:this.activeLayout}),this.activeLayout=i,this.activeLayoutName=e,(d=(h=this.activeLayout).updateConfig)==null||d.call(h,t);const n=this.pluginManager.getPlugin("NodePlugin"),s=this.pluginManager.getPlugin("EdgePlugin"),a=n?[...n.getNodes().values()]:[],o=s?[...s.getEdges().values()]:[];if(this.activeLayout.init){const u=new Map(a.map(f=>[f.id,f.position.clone()]));await this.activeLayout.init(a,o,t),await Promise.all(a.map(f=>{const m=u.get(f.id),v=f.position;return f.position.copy(m),new Promise(g=>{Ut.to(f.position,{x:v.x,y:v.y,z:v.z,duration:.7,ease:"power2.inOut",overwrite:!0,onComplete:g})})}))}return this.activeLayout.run&&(this.space.emit("layout:started",{name:this.activeLayoutName,layout:this.activeLayout}),await this.activeLayout.run()),!0}stopLayout(){var e,t;(t=(e=this.activeLayout)==null?void 0:e.stop)==null||t.call(e),this.activeLayout&&this.space.emit("layout:stopped",{name:this.activeLayoutName,layout:this.activeLayout})}update(){var e,t;(t=(e=this.activeLayout)==null?void 0:e.update)==null||t.call(e)}addNodeToLayout(e){var t,i;(i=(t=this.activeLayout)==null?void 0:t.addNode)==null||i.call(t,e)}removeNodeFromLayout(e){var t,i;(i=(t=this.activeLayout)==null?void 0:t.removeNode)==null||i.call(t,e)}addEdgeToLayout(e){var t,i;(i=(t=this.activeLayout)==null?void 0:t.addEdge)==null||i.call(t,e)}removeEdgeFromLayout(e){var t,i;(i=(t=this.activeLayout)==null?void 0:t.removeEdge)==null||i.call(t,e)}kick(){var e,t;(t=(e=this.activeLayout)==null?void 0:e.kick)==null||t.call(e)}getActiveLayout(){return this.activeLayout}getActiveLayoutName(){return this.activeLayoutName}dispose(){this.stopLayout(),this.layouts.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.layouts.clear(),this.activeLayout=null,this.activeLayoutName=null,this.space=null,this.pluginManager=null}}class jC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{iterations:100,convergenceThreshold:.1,dampingFactor:.8,maxForce:1e3,enableCollisionAvoidance:!0,collisionPadding:50,animate:!0,animationDuration:.8});E(this,"nodeMap",new Map);E(this,"constraints",[]);E(this,"isRunning",!1);this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){i&&this.updateConfig(i),!(!e||e.length===0)&&(this.nodeMap.clear(),this.constraints=[],e.forEach(n=>{var s;this.nodeMap.set(n.id,{node:n,currentPos:n.position.clone(),targetPos:n.position.clone(),force:new M,mass:n.mass||1,radius:((s=n.getBoundingSphereRadius)==null?void 0:s.call(n))*2||50,isFixed:n.isPinned||!1})}),this._createDefaultConstraints(e,t),await this._solveConstraints())}_createDefaultConstraints(e,t){t.forEach(n=>{var s,a,o,l;this.addDistanceConstraint(n.source.id,n.target.id,{distance:((a=(s=n.data)==null?void 0:s.constraintParams)==null?void 0:a.idealLength)||200,strength:((l=(o=n.data)==null?void 0:o.constraintParams)==null?void 0:l.stiffness)||.5})}),this._detectGroups(e).forEach(n=>{n.length>1&&this.addClusterConstraint(n.map(s=>s.id),{centerStrength:.3,internalSeparation:100})})}_detectGroups(e){const t=[],i=new Set;return e.forEach(n=>{var s;if(!i.has(n.id)&&((s=n.data)!=null&&s.group)){const a=e.filter(o=>{var l;return((l=o.data)==null?void 0:l.group)===n.data.group});a.forEach(o=>i.add(o.id)),t.push(a)}}),t}addDistanceConstraint(e,t,i={}){const{distance:n=200,strength:s=.5,minDistance:a=50,maxDistance:o=500}=i;this.constraints.push({type:"distance",nodeIds:[e,t],distance:n,strength:s,minDistance:a,maxDistance:o,solve:this._solveDistanceConstraint.bind(this)})}addPositionConstraint(e,t,i={}){const{strength:n=1,tolerance:s=10}=i;this.constraints.push({type:"position",nodeIds:[e],targetPosition:t.clone(),strength:n,tolerance:s,solve:this._solvePositionConstraint.bind(this)})}addAngleConstraint(e,t,i,n={}){const{angle:s=Math.PI/2,strength:a=.3}=n;this.constraints.push({type:"angle",nodeIds:[e,t,i],angle:s,strength:a,solve:this._solveAngleConstraint.bind(this)})}addClusterConstraint(e,t={}){const{centerStrength:i=.5,internalSeparation:n=100}=t;this.constraints.push({type:"cluster",nodeIds:e,centerStrength:i,internalSeparation:n,solve:this._solveClusterConstraint.bind(this)})}addBoundaryConstraint(e,t,i={}){const{strength:n=.8,padding:s=20}=i;this.constraints.push({type:"boundary",nodeIds:e,boundary:t,strength:n,padding:s,solve:this._solveBoundaryConstraint.bind(this)})}_solveDistanceConstraint(e){const[t,i]=e.nodeIds,n=this.nodeMap.get(t),s=this.nodeMap.get(i);if(!n||!s)return;const a=s.currentPos.clone().sub(n.currentPos),o=a.length();if(o===0)return;const l=Math.max(e.minDistance,Math.min(e.maxDistance,e.distance)),c=o-l,h=a.normalize().multiplyScalar(c*e.strength*.5);n.isFixed||n.force.add(h.clone().multiplyScalar(s.mass/(n.mass+s.mass))),s.isFixed||s.force.sub(h.clone().multiplyScalar(n.mass/(n.mass+s.mass)))}_solvePositionConstraint(e){const t=this.nodeMap.get(e.nodeIds[0]);if(!t||t.isFixed)return;const i=e.targetPosition.clone().sub(t.currentPos);i.length()>e.tolerance&&t.force.add(i.multiplyScalar(e.strength))}_solveAngleConstraint(e){const[t,i,n]=e.nodeIds,s=this.nodeMap.get(t),a=this.nodeMap.get(i),o=this.nodeMap.get(n);if(!s||!a||!o)return;const l=s.currentPos.clone().sub(a.currentPos),c=o.currentPos.clone().sub(a.currentPos);if(l.length()===0||c.length()===0)return;const h=l.angleTo(c),u=(e.angle-h)*e.strength*.1,f=l.cross(c).normalize();if(!s.isFixed){const m=l.clone().applyAxisAngle(f,u);s.force.add(m.sub(l).multiplyScalar(.5))}if(!o.isFixed){const m=c.clone().applyAxisAngle(f,-u);o.force.add(m.sub(c).multiplyScalar(.5))}}_solveClusterConstraint(e){const t=e.nodeIds.map(n=>this.nodeMap.get(n)).filter(Boolean);if(t.length<2)return;const i=new M;t.forEach(n=>i.add(n.currentPos)),i.divideScalar(t.length),t.forEach(n=>{if(n.isFixed)return;const s=i.clone().sub(n.currentPos);n.force.add(s.multiplyScalar(e.centerStrength)),t.forEach(a=>{if(a===n)return;const o=n.currentPos.clone().sub(a.currentPos),l=o.length();if(l<e.internalSeparation&&l>0){const c=o.normalize().multiplyScalar((e.internalSeparation-l)*.1);n.force.add(c)}})})}_solveBoundaryConstraint(e){e.nodeIds.forEach(t=>{const i=this.nodeMap.get(t);if(!i||i.isFixed)return;const{boundary:n,strength:s,padding:a}=e,o=i.currentPos;let l=new M;if(n.type==="box"){const{min:c,max:h}=n;o.x<c.x+a&&(l.x=(c.x+a-o.x)*s),o.x>h.x-a&&(l.x=(h.x-a-o.x)*s),o.y<c.y+a&&(l.y=(c.y+a-o.y)*s),o.y>h.y-a&&(l.y=(h.y-a-o.y)*s),o.z<c.z+a&&(l.z=(c.z+a-o.z)*s),o.z>h.z-a&&(l.z=(h.z-a-o.z)*s)}else if(n.type==="sphere"){const{center:c,radius:h}=n,d=o.clone().sub(c),u=d.length();u>h-a&&(l=d.normalize().multiplyScalar((h-a-u)*s))}i.force.add(l)})}async _solveConstraints(){for(let e=0;e<this.settings.iterations;e++){this.nodeMap.forEach(i=>i.force.set(0,0,0)),this.constraints.forEach(i=>i.solve(i)),this.settings.enableCollisionAvoidance&&this._resolveCollisions();let t=0;if(this.nodeMap.forEach(i=>{if(i.isFixed)return;const n=i.force.clone().multiplyScalar(this.settings.dampingFactor);n.length()>this.settings.maxForce&&n.normalize().multiplyScalar(this.settings.maxForce),i.currentPos.add(n.divideScalar(i.mass)),t=Math.max(t,n.length())}),t<this.settings.convergenceThreshold)break}this.nodeMap.forEach(e=>{e.isFixed||e.node.position.copy(e.currentPos)})}_resolveCollisions(){const e=Array.from(this.nodeMap.values());for(let t=0;t<e.length;t++)for(let i=t+1;i<e.length;i++){const n=e[t],s=e[i],a=n.currentPos.clone().sub(s.currentPos),o=a.length(),l=n.radius+s.radius+this.settings.collisionPadding;if(o<l&&o>0){const c=l-o,h=a.normalize().multiplyScalar(c*.5);n.isFixed||n.force.add(h),s.isFixed||s.force.sub(h)}}}addNode(e){var t;this.nodeMap.has(e.id)||this.nodeMap.set(e.id,{node:e,currentPos:e.position.clone(),targetPos:e.position.clone(),force:new M,mass:e.mass||1,radius:((t=e.getBoundingSphereRadius)==null?void 0:t.call(e))*2||50,isFixed:e.isPinned||!1})}removeNode(e){this.nodeMap.delete(e.id),this.constraints=this.constraints.filter(t=>!t.nodeIds.includes(e.id))}addEdge(e){var t,i,n,s;this.addDistanceConstraint(e.source.id,e.target.id,{distance:((i=(t=e.data)==null?void 0:t.constraintParams)==null?void 0:i.idealLength)||200,strength:((s=(n=e.data)==null?void 0:n.constraintParams)==null?void 0:s.stiffness)||.5})}removeEdge(e){this.constraints=this.constraints.filter(t=>!(t.type==="distance"&&t.nodeIds.includes(e.source.id)&&t.nodeIds.includes(e.target.id)))}updateConfig(e){this.settings={...this.settings,...e}}run(){this.isRunning||(this.isRunning=!0)}stop(){this.isRunning=!1}kick(){this.nodeMap.size>0&&this._solveConstraints()}dispose(){this.space=null,this.pluginManager=null,this.nodeMap.clear(),this.constraints=[],this.isRunning=!1}}class $C{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{containerPadding:50,childSpacing:25,autoResize:!0,animate:!0,animationDuration:.8,recursionDepth:10,defaultChildLayout:"grid"});E(this,"rootContainers",new Map);E(this,"layoutInstances",new Map);E(this,"containerHierarchy",new Map);E(this,"isRunning",!1);this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){i&&this.updateConfig(i),!(!e||e.length===0)&&(this.rootContainers.clear(),this.layoutInstances.clear(),this.containerHierarchy.clear(),this._buildHierarchy(e,t),await this._applyNestedLayouts())}_buildHierarchy(e,t){const i=e.filter(s=>{var a,o;return((a=s.data)==null?void 0:a.isContainer)||((o=s.data)==null?void 0:o.childLayout)}),n=new Map;i.forEach(s=>{var a,o;n.set(s.id,[]),this.containerHierarchy.set(s.id,{container:s,children:[],childNodes:[],layout:((a=s.data)==null?void 0:a.childLayout)||this.settings.defaultChildLayout,layoutConfig:((o=s.data)==null?void 0:o.layoutConfig)||{},bounds:this._calculateContainerBounds(s)})}),t.forEach(s=>{var o;const a=this.containerHierarchy.get(s.source.id);if(this.containerHierarchy.get(s.target.id),a&&((o=s.data)==null?void 0:o.relationship)==="contains"){a.childNodes.push(s.target);const l=this.containerHierarchy.get(s.target.id);l&&a.children.push(l)}}),e.forEach(s=>{var o;const a=(o=s.data)==null?void 0:o.parentContainer;a&&this.containerHierarchy.has(a)&&this.containerHierarchy.get(a).childNodes.push(s)}),this.containerHierarchy.forEach((s,a)=>{this._hasParentContainer(a)||this.rootContainers.set(a,s)})}_hasParentContainer(e){for(const[,t]of this.containerHierarchy)if(t.children.some(i=>i.container.id===e))return!0;return!1}_calculateContainerBounds(e){var n;const t=((n=e.getBoundingSphereRadius)==null?void 0:n.call(e))||100,i=e.position.clone();return{min:i.clone().sub(new M(t,t,t)),max:i.clone().add(new M(t,t,t)),center:i,size:new M(t*2,t*2,t*2)}}async _applyNestedLayouts(e=0){if(e>this.settings.recursionDepth)return;const t=[];for(const[i,n]of this.containerHierarchy)if(n.childNodes.length>0){const s=this._applyContainerLayout(n,e);t.push(s)}await Promise.all(t),this.settings.autoResize&&this._resizeContainers()}async _applyContainerLayout(e,t){var f;const{container:i,childNodes:n,layout:s,layoutConfig:a}=e,o=`${i.id}_${s}`;let l=this.layoutInstances.get(o);l||(l=this._createLayoutInstance(s,a),(f=l.setContext)==null||f.call(l,this.space,this.pluginManager),this.layoutInstances.set(o,l));const c=this._calculateContainerBounds(i),h=this._calculateAvailableSpace(c),d=n.map(m=>({...m,position:this._normalizePositionToContainer(m.position,c)})),u={...a,bounds:h,containerCenter:c.center,maxWidth:h.size.x,maxHeight:h.size.y,maxDepth:h.size.z,spacing:this.settings.childSpacing};l.init&&await l.init(d,[],u),d.forEach(m=>{const v=this._denormalizePositionFromContainer(m.position,c),g=n.find(p=>p.id===m.id);g&&!g.isPinned&&g.position.copy(v)}),e.appliedLayout=l,e.bounds=this._recalculateContainerBounds(e)}_createLayoutInstance(e,t){switch(e){case"grid":return new Ip(t);case"circular":return new XC(t);case"force":return new qC(t);case"hierarchical":return new ZC(t);case"flow":return new YC(t);default:return new Ip(t)}}_calculateAvailableSpace(e){const t=this.settings.containerPadding;return{min:e.min.clone().add(new M(t,t,t)),max:e.max.clone().sub(new M(t,t,t)),center:e.center.clone(),size:e.size.clone().sub(new M(t*2,t*2,t*2))}}_normalizePositionToContainer(e,t){const i=e.clone().sub(t.center);return i.divide(t.size).multiplyScalar(2),i}_denormalizePositionFromContainer(e,t){const i=e.clone().multiplyScalar(.5);return i.multiply(t.size).add(t.center),i}_recalculateContainerBounds(e){const{childNodes:t}=e;if(t.length===0)return e.bounds;const i=t.map(o=>o.position),n=new M(Math.min(...i.map(o=>o.x)),Math.min(...i.map(o=>o.y)),Math.min(...i.map(o=>o.z))),s=new M(Math.max(...i.map(o=>o.x)),Math.max(...i.map(o=>o.y)),Math.max(...i.map(o=>o.z))),a=this.settings.containerPadding;return n.sub(new M(a,a,a)),s.add(new M(a,a,a)),{min:n,max:s,center:n.clone().add(s).multiplyScalar(.5),size:s.clone().sub(n)}}_resizeContainers(){this.containerHierarchy.forEach((e,t)=>{var s;const{container:i,bounds:n}=e;if(((s=i.data)==null?void 0:s.autoResize)!==!1){const a=n.size.clone().multiplyScalar(.5);i.scale&&i.scale.copy(a),i.position.copy(n.center)}})}addContainer(e,t=null){var n,s;const i={container:e,children:[],childNodes:[],layout:((n=e.data)==null?void 0:n.childLayout)||this.settings.defaultChildLayout,layoutConfig:((s=e.data)==null?void 0:s.layoutConfig)||{},bounds:this._calculateContainerBounds(e)};this.containerHierarchy.set(e.id,i),t&&this.containerHierarchy.has(t)?this.containerHierarchy.get(t).children.push(i):this.rootContainers.set(e.id,i)}removeContainer(e){this.containerHierarchy.get(e)&&(this.containerHierarchy.delete(e),this.rootContainers.delete(e),this.containerHierarchy.forEach(i=>{i.children=i.children.filter(n=>n.container.id!==e)}),this.layoutInstances.forEach((i,n)=>{var s;n.startsWith(`${e}_`)&&((s=i.dispose)==null||s.call(i),this.layoutInstances.delete(n))}))}addNodeToContainer(e,t){const i=this.containerHierarchy.get(t);i&&(i.childNodes.some(n=>n.id===e.id)||(i.childNodes.push(e),e.data=e.data||{},e.data.parentContainer=t))}removeNodeFromContainer(e,t){const i=this.containerHierarchy.get(t);i&&(i.childNodes=i.childNodes.filter(n=>n.id!==e.id),e.data&&delete e.data.parentContainer)}setContainerLayout(e,t,i={}){var o;const n=this.containerHierarchy.get(e);if(!n)return;n.layout=t,n.layoutConfig=i;const s=`${e}_${n.layout}`,a=this.layoutInstances.get(s);a&&((o=a.dispose)==null||o.call(a),this.layoutInstances.delete(s))}updateConfig(e){this.settings={...this.settings,...e}}run(){this.isRunning||(this.isRunning=!0,this._applyNestedLayouts())}stop(){this.isRunning=!1}kick(){this.containerHierarchy.size>0&&this._applyNestedLayouts()}addNode(e){var i;const t=(i=e.data)==null?void 0:i.parentContainer;t&&this.addNodeToContainer(e,t)}removeNode(e){var i;const t=(i=e.data)==null?void 0:i.parentContainer;t&&this.removeNodeFromContainer(e,t)}addEdge(e){var t;((t=e.data)==null?void 0:t.relationship)==="contains"&&this.addNodeToContainer(e.target,e.source.id)}removeEdge(e){var t;((t=e.data)==null?void 0:t.relationship)==="contains"&&this.removeNodeFromContainer(e.target,e.source.id)}dispose(){this.layoutInstances.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.layoutInstances.clear(),this.containerHierarchy.clear(),this.rootContainers.clear(),this.space=null,this.pluginManager=null,this.isRunning=!1}}class Ip{constructor(e={}){this.settings={columns:e.columns||"auto",rows:e.rows||"auto",spacing:e.spacing||50,alignment:e.alignment||"center",...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){const n={...this.settings,...i},s=e.length;if(s===0)return;let a=n.columns,o=n.rows;a==="auto"&&o==="auto"?(a=Math.ceil(Math.sqrt(s)),o=Math.ceil(s/a)):a==="auto"?a=Math.ceil(s/o):o==="auto"&&(o=Math.ceil(s/a));const l=i.bounds||{size:new M(500,500,0)},c=l.size.x/a,h=l.size.y/o,d=-(l.size.x/2)+c/2,u=l.size.y/2-h/2;e.forEach((f,m)=>{const v=m%a,g=Math.floor(m/a),p=d+v*c,x=u-g*h;f.isPinned||f.position.set(p,x,0)})}dispose(){this.space=null,this.pluginManager=null}}class XC{constructor(e={}){this.settings={radius:e.radius||200,startAngle:e.startAngle||0,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){const n={...this.settings,...i},s=e.length;if(s===0)return;const a=i.bounds||{size:new M(400,400,0)},o=Math.min(a.size.x,a.size.y)*.4,l=2*Math.PI/s;e.forEach((c,h)=>{const d=n.startAngle+h*l,u=Math.cos(d)*o,f=Math.sin(d)*o;c.isPinned||c.position.set(u,f,0)})}dispose(){this.space=null,this.pluginManager=null}}class qC{constructor(e={}){this.settings={iterations:e.iterations||50,repulsion:e.repulsion||1e3,attraction:e.attraction||.01,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){const n=i.bounds||{size:new M(400,400,0)};for(let s=0;s<this.settings.iterations;s++)e.forEach((a,o)=>{if(a.isPinned)return;let l=new M;e.forEach((d,u)=>{if(o===u)return;const f=a.position.clone().sub(d.position),m=f.length();m>0&&l.add(f.normalize().multiplyScalar(this.settings.repulsion/(m*m)))});const c=Math.min(n.size.x,n.size.y)*.4,h=a.position.length();if(h>c){const d=a.position.clone().normalize().multiplyScalar(-this.settings.attraction*h);l.add(d)}a.position.add(l.multiplyScalar(.01))})}dispose(){this.space=null,this.pluginManager=null}}class ZC{constructor(e={}){this.settings={levelSeparation:e.levelSeparation||100,nodeSeparation:e.nodeSeparation||80,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){i.bounds||new M(400,400,0);const n=Math.ceil(Math.sqrt(e.length)),s=Math.ceil(e.length/n);e.forEach((a,o)=>{if(a.isPinned)return;const l=Math.floor(o/s),h=(o%s-(s-1)/2)*this.settings.nodeSeparation,d=(l-(n-1)/2)*this.settings.levelSeparation;a.position.set(h,d,0)})}dispose(){this.space=null,this.pluginManager=null}}class YC{constructor(e={}){this.settings={direction:e.direction||"horizontal",spacing:e.spacing||50,wrap:e.wrap||!0,...e}}setContext(e,t){this.space=e,this.pluginManager=t}async init(e,t,i={}){const n={...this.settings,...i},s=i.bounds||{size:new M(400,400,0)};let a=-s.size.x/2,o=s.size.y/2,l=0;e.forEach((c,h)=>{var u;if(c.isPinned)return;const d=((u=c.getBoundingSphereRadius)==null?void 0:u.call(c))*2||50;n.direction==="horizontal"?(n.wrap&&a+d>s.size.x/2&&(a=-s.size.x/2,o-=l+n.spacing,l=0),c.position.set(a+d/2,o-d/2,0),a+=d+n.spacing,l=Math.max(l,d)):(c.position.set(0,o-d/2,0),o-=d+n.spacing)})}dispose(){this.space=null,this.pluginManager=null}}class KC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{connectionTypes:["direct","orthogonal","curved","bundled"],defaultConnectionType:"curved",routingPadding:30,bundlingThreshold:3,bundlingRadius:50,animate:!0,animationDuration:.6,avoidOverlaps:!0,maxDetourFactor:2,connectionStrength:.5});E(this,"connections",new Map);E(this,"layoutRegions",new Map);E(this,"routingGraph",new Map);E(this,"connectionPaths",new Map);E(this,"isActive",!1);this.settings={...this.settings,...e}}setContext(e,t){this.space=e,this.pluginManager=t}registerLayoutRegion(e,t,i,n=[]){this.layoutRegions.set(e,{id:e,bounds:t,layoutType:i,nodes:new Set(n.map(s=>s.id)),connectionPoints:this._calculateConnectionPoints(t),obstacles:this._createObstaclesFromNodes(n,t)}),this._updateRoutingGraph()}unregisterLayoutRegion(e){this.layoutRegions.delete(e),this._updateRoutingGraph(),this.connections.forEach((t,i)=>{(t.sourceRegion===e||t.targetRegion===e)&&this.removeConnection(i)})}addConnection(e,t,i={}){const n=`${e}-${t}`,s=this._findNodeRegion(e),a=this._findNodeRegion(t);if(!s||!a)return console.warn(`LayoutConnector: Could not find regions for nodes ${e} -> ${t}`),null;const o={id:n,sourceNodeId:e,targetNodeId:t,sourceRegion:s.id,targetRegion:a.id,type:i.type||this.settings.defaultConnectionType,strength:i.strength||this.settings.connectionStrength,metadata:i.metadata||{},path:null,visualElement:null};return this.connections.set(n,o),this._routeConnection(o),n}removeConnection(e){const t=this.connections.get(e);t&&(t.visualElement&&this._removeVisualElement(t.visualElement),this.connections.delete(e),this.connectionPaths.delete(e))}_findNodeRegion(e){for(const[t,i]of this.layoutRegions)if(i.nodes.has(e))return i;return null}_calculateConnectionPoints(e){const{min:t,max:i,center:n}=e,s=[];return s.push(new M(n.x,i.y,n.z),new M(i.x,n.y,n.z),new M(n.x,t.y,n.z),new M(t.x,n.y,n.z),new M(n.x,n.y,i.z),new M(n.x,n.y,t.z)),s.push(new M(i.x,i.y,n.z),new M(t.x,i.y,n.z),new M(i.x,t.y,n.z),new M(t.x,t.y,n.z)),s}_createObstaclesFromNodes(e,t){return e.map(i=>{var n;return{center:i.position.clone(),radius:(((n=i.getBoundingSphereRadius)==null?void 0:n.call(i))||25)+this.settings.routingPadding,type:"circle"}})}_updateRoutingGraph(){this.routingGraph.clear(),this.layoutRegions.forEach((e,t)=>{e.connectionPoints.forEach((i,n)=>{const s=`${t}_cp_${n}`;this.routingGraph.set(s,{position:i.clone(),regionId:t,type:"connection_point",connections:new Set})})}),this._addIntermediateRoutingNodes(),this._connectRoutingNodes()}_addIntermediateRoutingNodes(){const e=Array.from(this.layoutRegions.values());for(let t=0;t<e.length;t++)for(let i=t+1;i<e.length;i++){const n=e[t],s=e[i],a=n.bounds.center.clone().add(s.bounds.center).multiplyScalar(.5),o=`intermediate_${n.id}_${s.id}`;this.routingGraph.set(o,{position:a,regionId:null,type:"intermediate",connections:new Set})}}_connectRoutingNodes(){const e=Array.from(this.routingGraph.values());e.forEach((t,i)=>{e.forEach((n,s)=>{if(i>=s)return;const a=t.position.distanceTo(n.position);!this._pathHasObstacle(t.position,n.position)&&a<500&&(t.connections.add(e[s]),n.connections.add(e[i]))})})}_pathHasObstacle(e,t){const i=t.clone().sub(e);i.length(),i.normalize();for(const n of this.layoutRegions.values())for(const s of n.obstacles)if(this._lineIntersectsCircle(e,t,s.center,s.radius))return!0;return!1}_lineIntersectsCircle(e,t,i,n){const s=t.clone().sub(e),o=i.clone().sub(e).dot(s)/s.lengthSq(),l=Math.max(0,Math.min(1,o));return e.clone().add(s.multiplyScalar(l)).distanceTo(i)<n}_routeConnection(e){const t=this._getNodeById(e.sourceNodeId),i=this._getNodeById(e.targetNodeId);if(!t||!i)return;let n;switch(e.type){case"direct":n=this._routeDirect(t.position,i.position);break;case"orthogonal":n=this._routeOrthogonal(t.position,i.position,e);break;case"curved":n=this._routeCurved(t.position,i.position,e);break;case"bundled":n=this._routeBundled(t.position,i.position,e);break;default:n=this._routeCurved(t.position,i.position,e)}e.path=n,this.connectionPaths.set(e.id,n),this.settings.animate?this._animateConnection(e):this._createVisualConnection(e)}_routeDirect(e,t){return[e.clone(),t.clone()]}_routeOrthogonal(e,t,i){const n=this.layoutRegions.get(i.sourceRegion),s=this.layoutRegions.get(i.targetRegion);if(!n||!s)return this._routeDirect(e,t);const a=n.bounds,o=s.bounds;let l,c;o.center.x>a.center.x?(l=new M(a.max.x,e.y,e.z),c=new M(o.min.x,t.y,t.z)):(l=new M(a.min.x,e.y,e.z),c=new M(o.max.x,t.y,t.z));const h=(l.x+c.x)/2;return[e.clone(),l.clone(),new M(h,l.y,l.z),new M(h,c.y,c.z),c.clone(),t.clone()]}_routeCurved(e,t,i){const n=this.layoutRegions.get(i.sourceRegion),s=this.layoutRegions.get(i.targetRegion);if(!n||!s)return this._routeDirect(e,t);if(this._pathHasObstacle(e,t))return this._findPath(e,t,i);const a=e.clone().add(t.clone().sub(e).multiplyScalar(.33)),o=e.clone().add(t.clone().sub(e).multiplyScalar(.66)),l=new M(-(t.y-e.y),t.x-e.x,0).normalize(),c=Math.min(100,e.distanceTo(t)*.2);return a.add(l.clone().multiplyScalar(c)),o.add(l.clone().multiplyScalar(-c)),this._generateBezierPath(e,a,o,t,20)}_routeBundled(e,t,i){const n=[];return this.connections.forEach((s,a)=>{if(a===i.id)return;const o=i.sourceRegion,l=i.targetRegion,c=s.sourceRegion,h=s.targetRegion;(o===c&&l===h||o===h&&l===c)&&n.push(s)}),n.length>=this.settings.bundlingThreshold?this._createBundledPath(e,t,n):this._routeCurved(e,t,i)}_createBundledPath(e,t,i){const s=e.clone().add(t).multiplyScalar(.5).clone(),a=new M(-(t.y-e.y),t.x-e.x,0).normalize();return s.add(a.multiplyScalar(this.settings.bundlingRadius)),[e.clone(),e.clone().lerp(s,.5),s.clone(),t.clone().lerp(s,.5),t.clone()]}_findPath(e,t,i){const n=this._findClosestRoutingNode(e,i.sourceRegion),s=this._findClosestRoutingNode(t,i.targetRegion);if(!n||!s)return this._routeDirect(e,t);const a=this._aStar(n,s);if(a.length===0)return this._routeDirect(e,t);const o=[e.clone()];return a.forEach(l=>{const c=this.routingGraph.get(l);c&&o.push(c.position.clone())}),o.push(t.clone()),o}_findClosestRoutingNode(e,t){let i=null,n=1/0;return this.routingGraph.forEach((s,a)=>{if(s.regionId===t||s.type==="intermediate"){const o=s.position.distanceTo(e);o<n&&(n=o,i=a)}}),i}_aStar(e,t){const i=new Set([e]),n=new Map,s=new Map,a=new Map;this.routingGraph.forEach((c,h)=>{s.set(h,1/0),a.set(h,1/0)}),s.set(e,0);const o=this.routingGraph.get(e),l=this.routingGraph.get(t);for(a.set(e,o.position.distanceTo(l.position));i.size>0;){let c=null,h=1/0;if(i.forEach(u=>{const f=a.get(u);f<h&&(h=f,c=u)}),c===t){const u=[];let f=c;for(;n.has(f);)u.unshift(f),f=n.get(f);return u}i.delete(c);const d=this.routingGraph.get(c);d.connections.forEach(u=>{const f=this._getRoutingNodeId(u),m=s.get(c)+d.position.distanceTo(u.position);m<s.get(f)&&(n.set(f,c),s.set(f,m),a.set(f,m+u.position.distanceTo(l.position)),i.add(f))})}return[]}_getRoutingNodeId(e){for(const[t,i]of this.routingGraph)if(i===e)return t;return null}_generateBezierPath(e,t,i,n,s){const a=[];for(let o=0;o<=s;o++){const l=o/s,c=this._bezierPoint(e,t,i,n,l);a.push(c)}return a}_bezierPoint(e,t,i,n,s){const a=1-s,o=a*a,l=o*a,c=s*s,h=c*s;return new M(l*e.x+3*o*s*t.x+3*a*c*i.x+h*n.x,l*e.y+3*o*s*t.y+3*a*c*i.y+h*n.y,l*e.z+3*o*s*t.z+3*a*c*i.z+h*n.z)}_animateConnection(e){if(this._createVisualConnection(e),e.visualElement&&e.path){const t=e.visualElement.geometry;if(t&&t.attributes.position){const i=t.attributes.position.array,n=[...i],s=e.path[0];for(let a=0;a<i.length;a+=3)i[a]=s.x,i[a+1]=s.y,i[a+2]=s.z;t.attributes.position.needsUpdate=!0,Ut.to(i,{duration:this.settings.animationDuration,ease:"power2.inOut",onUpdate:()=>{const a=Ut.getProperty(i,"progress")||0;for(let o=0;o<n.length;o++)i[o]=Qr.lerp(s.x,n[o],a);t.attributes.position.needsUpdate=!0}})}}}_createVisualConnection(e){if(!e.path||e.path.length<2)return;const t=e.path,i=new At().setFromPoints(t),n=new oo({color:e.metadata.color||65280,linewidth:e.metadata.width||2,transparent:!0,opacity:e.metadata.opacity||.8}),s=new ea(i,n);e.visualElement=s,this.space&&this.space.scene&&this.space.scene.add(s)}_removeVisualElement(e){this.space&&this.space.scene&&e&&(this.space.scene.remove(e),e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose())}_getNodeById(e){var i;const t=(i=this.pluginManager)==null?void 0:i.getPlugin("NodePlugin");return t==null?void 0:t.getNodes().get(e)}updateConnection(e,t={}){const i=this.connections.get(e);if(i&&(Object.assign(i,t),t.type&&t.type!==i.type&&this._routeConnection(i),i.visualElement&&t.metadata)){const n=i.visualElement.material;t.metadata.color&&n.color.setHex(t.metadata.color),t.metadata.opacity!==void 0&&(n.opacity=t.metadata.opacity)}}getAllConnections(){return Array.from(this.connections.values())}getConnectionsForRegion(e){return Array.from(this.connections.values()).filter(t=>t.sourceRegion===e||t.targetRegion===e)}activate(){this.isActive=!0,this._updateAllConnections()}deactivate(){this.isActive=!1,this.connections.forEach(e=>{e.visualElement&&this._removeVisualElement(e.visualElement)})}_updateAllConnections(){this.connections.forEach(e=>{this._routeConnection(e)})}updateConfig(e){this.settings={...this.settings,...e}}dispose(){this.connections.forEach(e=>{e.visualElement&&this._removeVisualElement(e.visualElement)}),this.connections.clear(),this.layoutRegions.clear(),this.routingGraph.clear(),this.connectionPaths.clear(),this.space=null,this.pluginManager=null,this.isActive=!1}}class JC{constructor(e={}){E(this,"space",null);E(this,"pluginManager",null);E(this,"settings",{adaptationTriggers:["nodeCount","density","connections","size","time"],morphDuration:1.2,morphEasing:"power2.inOut",enableAutoAdaptation:!0,adaptationDelay:2e3,densityThresholds:{sparse:.1,normal:.4,dense:.8},sizeThresholds:{small:50,medium:200,large:500},timeBasedAdaptation:{enabled:!1,interval:3e4,patterns:["circular","grid","force","hierarchical"]}});E(this,"currentLayout",null);E(this,"currentLayoutName","");E(this,"availableLayouts",new Map);E(this,"adaptationRules",[]);E(this,"layoutHistory",[]);E(this,"nodeMetrics",new Map);E(this,"isAdapting",!1);E(this,"adaptationTimer",null);this.settings={...this.settings,...e},this._initializeAdaptationRules()}setContext(e,t){this.space=e,this.pluginManager=t}registerLayout(e,t){var i;this.availableLayouts.set(e,t),(i=t.setContext)==null||i.call(t,this.space,this.pluginManager)}_initializeAdaptationRules(){this.adaptationRules=[{name:"SmallNodeCount",condition:e=>e.nodeCount<=this.settings.sizeThresholds.small,targetLayout:"circular",priority:3,description:"Use circular layout for small node counts"},{name:"HighDensity",condition:e=>e.density>this.settings.densityThresholds.dense,targetLayout:"force",priority:2,description:"Use force layout for high density graphs"},{name:"HierarchicalStructure",condition:e=>e.hierarchyScore>.7,targetLayout:"hierarchical",priority:1,description:"Use hierarchical layout for tree-like structures"},{name:"GridSuitable",condition:e=>e.connectionDensity<.3&&e.nodeCount>16,targetLayout:"grid",priority:4,description:"Use grid layout for sparse, medium-sized graphs"},{name:"LargeGraph",condition:e=>e.nodeCount>this.settings.sizeThresholds.large,targetLayout:"force",priority:2,description:"Use force layout for large graphs"},{name:"HighlyConnected",condition:e=>e.avgDegree>5,targetLayout:"force",priority:3,description:"Use force layout for highly connected graphs"}]}async init(e,t,i={}){i&&this.updateConfig(i);const n=this._calculateGraphMetrics(e,t),s=this._selectBestLayout(n);await this._applyLayout(s,e,t,i),this.settings.enableAutoAdaptation&&this._startAdaptationMonitoring()}_calculateGraphMetrics(e,t){const i=e.length,n=t.length;if(i===0)return{nodeCount:0,edgeCount:0,density:0,avgDegree:0,connectionDensity:0,hierarchyScore:0,clustering:0,boundingVolume:0};const s=i*(i-1)/2,a=s>0?n/s:0,o=i>0?2*n/i:0,l=e.map(m=>m.position),c=this._calculateBoundingBox(l),h=c.size.x*c.size.y*c.size.z,d=h>0?n/h:0,u=this._calculateHierarchyScore(e,t),f=this._calculateClustering(e,t);return{nodeCount:i,edgeCount:n,density:a,avgDegree:o,connectionDensity:d,hierarchyScore:u,clustering:f,boundingVolume:h,boundingBox:c}}_calculateBoundingBox(e){if(e.length===0)return{min:new M,max:new M,size:new M};const t=e[0].clone(),i=e[0].clone();return e.forEach(n=>{t.min(n),i.max(n)}),{min:t,max:i,size:i.clone().sub(t),center:t.clone().add(i).multiplyScalar(.5)}}_calculateHierarchyScore(e,t){if(e.length<=1)return 0;const i=new Map;e.forEach(o=>i.set(o.id,[])),t.forEach(o=>{var l,c;(l=i.get(o.source.id))==null||l.push(o.target.id),(c=i.get(o.target.id))==null||c.push(o.source.id)});let n=0;i.forEach((o,l)=>{o.length===1&&n++,o.length});const s=n/e.length,a=1-t.length/(e.length*e.length);return Math.min(1,s+a)}_calculateClustering(e,t){if(e.length<3)return 0;const i=new Map;e.forEach(a=>i.set(a.id,new Set)),t.forEach(a=>{var o,l;(o=i.get(a.source.id))==null||o.add(a.target.id),(l=i.get(a.target.id))==null||l.add(a.source.id)});let n=0,s=0;return i.forEach((a,o)=>{var d;if(a.size<2)return;const l=Array.from(a);let c=0,h=0;for(let u=0;u<l.length;u++)for(let f=u+1;f<l.length;f++){h++;const m=l[u],v=l[f];(d=i.get(m))!=null&&d.has(v)&&c++}h>0&&(n+=c/h,s++)}),s>0?n/s:0}_selectBestLayout(e){const t=this.adaptationRules.filter(i=>i.condition(e)).sort((i,n)=>i.priority-n.priority);if(t.length>0){const i=t[0];return console.log(`AdaptiveLayout: Selected ${i.targetLayout} - ${i.description}`),i.targetLayout}return e.nodeCount<20?"circular":e.hierarchyScore>.5?"hierarchical":e.density>.5?"force":"grid"}async _applyLayout(e,t,i,n={}){var l;const s=this.availableLayouts.get(e);if(!s){console.warn(`AdaptiveLayout: Layout ${e} not found`);return}const a=this.currentLayoutName;this.currentLayout=s,this.currentLayoutName=e;const o=new Map;t.forEach(c=>{o.set(c.id,c.position.clone())}),s.init&&await s.init(t,i,n),a&&a!==e&&this.settings.morphDuration>0&&await this._morphBetweenLayouts(t,o),this.layoutHistory.push({layout:e,timestamp:Date.now(),nodeCount:t.length,edgeCount:i.length}),(l=this.space)==null||l.emit("layout:adapted",{from:a,to:e,reason:"adaptive_selection"})}async _morphBetweenLayouts(e,t){return new Promise(i=>{const n=e.map(s=>{const a=t.get(s.id),o=s.position.clone();return a?(s.position.copy(a),new Promise(l=>{Ut.to(s.position,{x:o.x,y:o.y,z:o.z,duration:this.settings.morphDuration,ease:this.settings.morphEasing,onComplete:l})})):Promise.resolve()});Promise.all(n).then(i)})}_startAdaptationMonitoring(){this.adaptationTimer&&clearInterval(this.adaptationTimer),this.adaptationTimer=setInterval(()=>{this._checkForAdaptation()},this.settings.adaptationDelay),this.settings.timeBasedAdaptation.enabled&&setInterval(()=>{this._performTimeBasedAdaptation()},this.settings.timeBasedAdaptation.interval)}async _checkForAdaptation(){var o,l;if(this.isAdapting)return;const e=(o=this.pluginManager)==null?void 0:o.getPlugin("NodePlugin"),t=(l=this.pluginManager)==null?void 0:l.getPlugin("EdgePlugin");if(!e||!t)return;const i=Array.from(e.getNodes().values()),n=Array.from(t.getEdges().values()),s=this._calculateGraphMetrics(i,n),a=this._selectBestLayout(s);a!==this.currentLayoutName&&(console.log(`AdaptiveLayout: Adapting from ${this.currentLayoutName} to ${a}`),this.isAdapting=!0,await this._applyLayout(a,i,n),this.isAdapting=!1)}async _performTimeBasedAdaptation(){var s,a,o;if(this.isAdapting||!this.settings.timeBasedAdaptation.enabled)return;const e=this.settings.timeBasedAdaptation.patterns,i=(e.indexOf(this.currentLayoutName)+1)%e.length,n=e[i];if(this.availableLayouts.has(n)){const l=(s=this.pluginManager)==null?void 0:s.getPlugin("NodePlugin"),c=(a=this.pluginManager)==null?void 0:a.getPlugin("EdgePlugin");if(l&&c){const h=Array.from(l.getNodes().values()),d=Array.from(c.getEdges().values());this.isAdapting=!0,await this._applyLayout(n,h,d),this.isAdapting=!1,(o=this.space)==null||o.emit("layout:adapted",{from:this.currentLayoutName,to:n,reason:"time_based"})}}}addAdaptationRule(e){this.adaptationRules.push({name:e.name||"CustomRule",condition:e.condition,targetLayout:e.targetLayout,priority:e.priority||5,description:e.description||"Custom adaptation rule"}),this.adaptationRules.sort((t,i)=>t.priority-i.priority)}removeAdaptationRule(e){this.adaptationRules=this.adaptationRules.filter(t=>t.name!==e)}forceAdaptation(e,t="manual"){var s,a;if(!this.availableLayouts.has(e)){console.warn(`AdaptiveLayout: Target layout ${e} not available`);return}const i=(s=this.pluginManager)==null?void 0:s.getPlugin("NodePlugin"),n=(a=this.pluginManager)==null?void 0:a.getPlugin("EdgePlugin");if(i&&n){const o=Array.from(i.getNodes().values()),l=Array.from(n.getEdges().values());this._applyLayout(e,o,l).then(()=>{var c;(c=this.space)==null||c.emit("layout:adapted",{from:this.currentLayoutName,to:e,reason:t})})}}setAdaptationEnabled(e){this.settings.enableAutoAdaptation=e,e?this._startAdaptationMonitoring():this.adaptationTimer&&(clearInterval(this.adaptationTimer),this.adaptationTimer=null)}getLayoutHistory(){return[...this.layoutHistory]}getCurrentLayout(){return{name:this.currentLayoutName,instance:this.currentLayout}}getAdaptationRules(){return[...this.adaptationRules]}addNode(e){var t,i;(i=(t=this.currentLayout)==null?void 0:t.addNode)==null||i.call(t,e),this.settings.enableAutoAdaptation&&!this.isAdapting&&setTimeout(()=>this._checkForAdaptation(),100)}removeNode(e){var t,i;(i=(t=this.currentLayout)==null?void 0:t.removeNode)==null||i.call(t,e),this.settings.enableAutoAdaptation&&!this.isAdapting&&setTimeout(()=>this._checkForAdaptation(),100)}addEdge(e){var t,i;(i=(t=this.currentLayout)==null?void 0:t.addEdge)==null||i.call(t,e),this.settings.enableAutoAdaptation&&!this.isAdapting&&setTimeout(()=>this._checkForAdaptation(),100)}removeEdge(e){var t,i;(i=(t=this.currentLayout)==null?void 0:t.removeEdge)==null||i.call(t,e),this.settings.enableAutoAdaptation&&!this.isAdapting&&setTimeout(()=>this._checkForAdaptation(),100)}run(){var e,t;(t=(e=this.currentLayout)==null?void 0:e.run)==null||t.call(e)}stop(){var e,t;(t=(e=this.currentLayout)==null?void 0:e.stop)==null||t.call(e)}kick(){var e,t;(t=(e=this.currentLayout)==null?void 0:e.kick)==null||t.call(e)}updateConfig(e){this.settings={...this.settings,...e},e.adaptationRules&&this._initializeAdaptationRules()}dispose(){this.adaptationTimer&&(clearInterval(this.adaptationTimer),this.adaptationTimer=null),this.availableLayouts.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.availableLayouts.clear(),this.adaptationRules=[],this.layoutHistory=[],this.nodeMetrics.clear(),this.currentLayout=null,this.currentLayoutName="",this.space=null,this.pluginManager=null,this.isAdapting=!1}}class QC extends WC{constructor(e,t){super(e,t),this.constraintSystem=new jC,this.nestedSystem=new $C,this.connector=new KC,this.adaptiveSystem=new JC,this.layoutModes={STANDARD:"standard",CONSTRAINT:"constraint",NESTED:"nested",ADAPTIVE:"adaptive",HYBRID:"hybrid"},this.currentMode=this.layoutModes.STANDARD,this.settings={enableConnections:!0,enableConstraints:!1,enableNesting:!1,enableAdaptive:!1,hybridPriority:["adaptive","nested","constraint","standard"],transitionDuration:.8,autoModeSelection:!1},this._initializeAdvancedSystems(),this._registerAdvancedLayouts()}_initializeAdvancedSystems(){this.constraintSystem.setContext(this.space,this.pluginManager),this.nestedSystem.setContext(this.space,this.pluginManager),this.connector.setContext(this.space,this.pluginManager),this.adaptiveSystem.setContext(this.space,this.pluginManager)}_registerAdvancedLayouts(){this.registerLayout("constraint",this.constraintSystem),this.registerLayout("nested",this.nestedSystem),this.registerLayout("adaptive",this.adaptiveSystem),this.layouts.forEach((e,t)=>{t!=="constraint"&&t!=="nested"&&t!=="adaptive"&&this.adaptiveSystem.registerLayout(t,e)})}async applyLayout(e,t={}){switch(this._determineLayoutMode(e,t)){case this.layoutModes.CONSTRAINT:return this._applyConstraintLayout(e,t);case this.layoutModes.NESTED:return this._applyNestedLayout(e,t);case this.layoutModes.ADAPTIVE:return this._applyAdaptiveLayout(e,t);case this.layoutModes.HYBRID:return this._applyHybridLayout(e,t);default:return this._applyStandardLayout(e,t)}}_determineLayoutMode(e,t){return t.mode?t.mode:this.settings.autoModeSelection?this._autoSelectMode(e,t):e==="adaptive"||this.settings.enableAdaptive?this.layoutModes.ADAPTIVE:e==="constraint"||this.settings.enableConstraints?this.layoutModes.CONSTRAINT:e==="nested"||this.settings.enableNesting?this.layoutModes.NESTED:this.layoutModes.STANDARD}_autoSelectMode(e,t){const i=this.pluginManager.getPlugin("NodePlugin"),n=this.pluginManager.getPlugin("EdgePlugin");if(!i||!n)return this.layoutModes.STANDARD;const s=Array.from(i.getNodes().values()),a=Array.from(n.getEdges().values()),o=s.some(h=>{var d,u;return((d=h.data)==null?void 0:d.isContainer)||((u=h.data)==null?void 0:u.childLayout)}),l=a.some(h=>{var d,u;return((d=h.data)==null?void 0:d.constraintType)||((u=h.data)==null?void 0:u.constraintParams)}),c=s.length>50||a.length>100||this._calculateGraphComplexity(s,a)>.7;return o&&l&&c?this.layoutModes.HYBRID:c?this.layoutModes.ADAPTIVE:o?this.layoutModes.NESTED:l?this.layoutModes.CONSTRAINT:this.layoutModes.STANDARD}_calculateGraphComplexity(e,t){if(e.length===0)return 0;const i=t.length/(e.length*(e.length-1)/2),n=2*t.length/e.length,s=Math.min(1,e.length/100);return(i+n/10+s)/3}async _applyStandardLayout(e,t){return super.applyLayout(e,t)}async _applyConstraintLayout(e,t){const i=this.pluginManager.getPlugin("NodePlugin"),n=this.pluginManager.getPlugin("EdgePlugin");if(!i||!n)return!1;const s=Array.from(i.getNodes().values()),a=Array.from(n.getEdges().values());return t.baseLayout&&t.baseLayout!=="constraint"&&await super.applyLayout(t.baseLayout,t),await this.constraintSystem.init(s,a,t),this.activeLayout=this.constraintSystem,this.activeLayoutName="constraint",this.currentMode=this.layoutModes.CONSTRAINT,this.space.emit("layout:started",{name:"constraint",layout:this.constraintSystem,mode:this.currentMode}),!0}async _applyNestedLayout(e,t){const i=this.pluginManager.getPlugin("NodePlugin"),n=this.pluginManager.getPlugin("EdgePlugin");if(!i||!n)return!1;const s=Array.from(i.getNodes().values()),a=Array.from(n.getEdges().values());return await this.nestedSystem.init(s,a,t),this.activeLayout=this.nestedSystem,this.activeLayoutName="nested",this.currentMode=this.layoutModes.NESTED,this.space.emit("layout:started",{name:"nested",layout:this.nestedSystem,mode:this.currentMode}),!0}async _applyAdaptiveLayout(e,t){const i=this.pluginManager.getPlugin("NodePlugin"),n=this.pluginManager.getPlugin("EdgePlugin");if(!i||!n)return!1;const s=Array.from(i.getNodes().values()),a=Array.from(n.getEdges().values());return await this.adaptiveSystem.init(s,a,t),this.activeLayout=this.adaptiveSystem,this.activeLayoutName="adaptive",this.currentMode=this.layoutModes.ADAPTIVE,this.space.emit("layout:started",{name:"adaptive",layout:this.adaptiveSystem,mode:this.currentMode}),!0}async _applyHybridLayout(e,t){const i=this.pluginManager.getPlugin("NodePlugin"),n=this.pluginManager.getPlugin("EdgePlugin");if(!i||!n)return!1;const s=Array.from(i.getNodes().values()),a=Array.from(n.getEdges().values());for(const o of this.settings.hybridPriority)switch(o){case"adaptive":this.settings.enableAdaptive&&await this.adaptiveSystem.init(s,a,t);break;case"nested":this.settings.enableNesting&&await this.nestedSystem.init(s,a,t);break;case"constraint":this.settings.enableConstraints&&await this.constraintSystem.init(s,a,t);break;case"standard":t.baseLayout&&await super.applyLayout(t.baseLayout,t);break}return this.activeLayout=this._createHybridLayoutProxy(),this.activeLayoutName="hybrid",this.currentMode=this.layoutModes.HYBRID,this.space.emit("layout:started",{name:"hybrid",layout:this.activeLayout,mode:this.currentMode}),!0}_createHybridLayoutProxy(){return{run:()=>{this.settings.enableAdaptive&&this.adaptiveSystem.run(),this.settings.enableNesting&&this.nestedSystem.run(),this.settings.enableConstraints&&this.constraintSystem.run()},stop:()=>{this.settings.enableAdaptive&&this.adaptiveSystem.stop(),this.settings.enableNesting&&this.nestedSystem.stop(),this.settings.enableConstraints&&this.constraintSystem.stop()},kick:()=>{this.settings.enableAdaptive&&this.adaptiveSystem.kick(),this.settings.enableNesting&&this.nestedSystem.kick(),this.settings.enableConstraints&&this.constraintSystem.kick()},addNode:e=>{this.settings.enableAdaptive&&this.adaptiveSystem.addNode(e),this.settings.enableNesting&&this.nestedSystem.addNode(e),this.settings.enableConstraints&&this.constraintSystem.addNode(e)},removeNode:e=>{this.settings.enableAdaptive&&this.adaptiveSystem.removeNode(e),this.settings.enableNesting&&this.nestedSystem.removeNode(e),this.settings.enableConstraints&&this.constraintSystem.removeNode(e)},addEdge:e=>{this.settings.enableAdaptive&&this.adaptiveSystem.addEdge(e),this.settings.enableNesting&&this.nestedSystem.addEdge(e),this.settings.enableConstraints&&this.constraintSystem.addEdge(e)},removeEdge:e=>{this.settings.enableAdaptive&&this.adaptiveSystem.removeEdge(e),this.settings.enableNesting&&this.nestedSystem.removeEdge(e),this.settings.enableConstraints&&this.constraintSystem.removeEdge(e)},dispose:()=>{}}}registerLayoutRegion(e,t,i,n=[]){this.settings.enableConnections&&this.connector.registerLayoutRegion(e,t,i,n)}unregisterLayoutRegion(e){this.settings.enableConnections&&this.connector.unregisterLayoutRegion(e)}addLayoutConnection(e,t,i={}){return this.settings.enableConnections?this.connector.addConnection(e,t,i):null}removeLayoutConnection(e){this.settings.enableConnections&&this.connector.removeConnection(e)}activateConnections(){this.settings.enableConnections=!0,this.connector.activate()}deactivateConnections(){this.settings.enableConnections=!1,this.connector.deactivate()}addPositionConstraint(e,t,i={}){this.constraintSystem.addPositionConstraint(e,t,i)}addDistanceConstraint(e,t,i={}){this.constraintSystem.addDistanceConstraint(e,t,i)}addAngleConstraint(e,t,i,n={}){this.constraintSystem.addAngleConstraint(e,t,i,n)}addBoundaryConstraint(e,t,i={}){this.constraintSystem.addBoundaryConstraint(e,t,i)}addContainer(e,t=null){this.nestedSystem.addContainer(e,t)}removeContainer(e){this.nestedSystem.removeContainer(e)}addNodeToContainer(e,t){this.nestedSystem.addNodeToContainer(e,t)}removeNodeFromContainer(e,t){this.nestedSystem.removeNodeFromContainer(e,t)}setContainerLayout(e,t,i={}){this.nestedSystem.setContainerLayout(e,t,i)}addAdaptationRule(e){this.adaptiveSystem.addAdaptationRule(e)}removeAdaptationRule(e){this.adaptiveSystem.removeAdaptationRule(e)}forceAdaptation(e,t="manual"){this.adaptiveSystem.forceAdaptation(e,t)}setAdaptationEnabled(e){this.settings.enableAdaptive=e,this.adaptiveSystem.setAdaptationEnabled(e)}getLayoutHistory(){return this.adaptiveSystem.getLayoutHistory()}setLayoutMode(e){this.currentMode=e,this.settings.enableConstraints=e===this.layoutModes.CONSTRAINT||e===this.layoutModes.HYBRID,this.settings.enableNesting=e===this.layoutModes.NESTED||e===this.layoutModes.HYBRID,this.settings.enableAdaptive=e===this.layoutModes.ADAPTIVE||e===this.layoutModes.HYBRID}enableAdvancedFeatures(e={}){e.constraints!==void 0&&(this.settings.enableConstraints=e.constraints),e.nesting!==void 0&&(this.settings.enableNesting=e.nesting),e.adaptive!==void 0&&(this.settings.enableAdaptive=e.adaptive),e.connections!==void 0&&(this.settings.enableConnections=e.connections),e.autoMode!==void 0&&(this.settings.autoModeSelection=e.autoMode)}getLayoutCapabilities(){return{modes:Object.values(this.layoutModes),currentMode:this.currentMode,availableLayouts:Array.from(this.layouts.keys()),features:{constraints:this.settings.enableConstraints,nesting:this.settings.enableNesting,adaptive:this.settings.enableAdaptive,connections:this.settings.enableConnections,autoMode:this.settings.autoModeSelection},systems:{constraint:this.constraintSystem,nested:this.nestedSystem,connector:this.connector,adaptive:this.adaptiveSystem}}}addNodeToLayout(e){super.addNodeToLayout(e),this.settings.enableConstraints&&this.constraintSystem.addNode(e),this.settings.enableNesting&&this.nestedSystem.addNode(e),this.settings.enableAdaptive&&this.adaptiveSystem.addNode(e)}removeNodeFromLayout(e){super.removeNodeFromLayout(e),this.settings.enableConstraints&&this.constraintSystem.removeNode(e),this.settings.enableNesting&&this.nestedSystem.removeNode(e),this.settings.enableAdaptive&&this.adaptiveSystem.removeNode(e)}addEdgeToLayout(e){super.addEdgeToLayout(e),this.settings.enableConstraints&&this.constraintSystem.addEdge(e),this.settings.enableNesting&&this.nestedSystem.addEdge(e),this.settings.enableAdaptive&&this.adaptiveSystem.addEdge(e)}removeEdgeFromLayout(e){super.removeEdgeFromLayout(e),this.settings.enableConstraints&&this.constraintSystem.removeEdge(e),this.settings.enableNesting&&this.nestedSystem.removeEdge(e),this.settings.enableAdaptive&&this.adaptiveSystem.removeEdge(e)}dispose(){super.dispose(),this.constraintSystem.dispose(),this.nestedSystem.dispose(),this.connector.dispose(),this.adaptiveSystem.dispose()}}class e1 extends mn{constructor(t,i){super(t,i);E(this,"layoutManager",null);this.layoutManager=new QC(t,i)}getName(){return"LayoutPlugin"}async init(){super.init(),this.layoutManager.registerLayout("force",new FC),this.layoutManager.registerLayout("grid",new BC),this.layoutManager.registerLayout("circular",new HC),this.layoutManager.registerLayout("spherical",new GC),this.layoutManager.registerLayout("hierarchical",new VC),this.layoutManager.registerLayout(pd.layoutName,new pd),this.layoutManager.registerLayout(md.layoutName,new md),this.layoutManager.enableAdvancedFeatures({connections:!0,constraints:!1,nesting:!1,adaptive:!1,autoMode:!1}),await this.layoutManager.applyLayout("force"),this._setupEventListeners()}_setupEventListeners(){if(!this.space||!this.layoutManager)return;const t=this.pluginManager.getPlugin("UIPlugin");this.space.on("ui:request:applyLayout",i=>this.applyLayout(i)),this.space.on("node:dragstart",i=>{const n=this.layoutManager.getActiveLayout();if(!n||typeof n.fixNode!="function")return;const s=t==null?void 0:t.getSelectedNodes();s!=null&&s.has(i)?s.forEach(a=>n.fixNode(a)):n.fixNode(i)}),this.space.on("node:dragend",i=>{const n=this.layoutManager.getActiveLayout();if(!n||typeof n.releaseNode!="function")return;const s=t==null?void 0:t.getSelectedNodes();s!=null&&s.has(i)?s.forEach(a=>n.releaseNode(a)):n.releaseNode(i),this.kick()}),this.space.on("node:added",i=>{this.addNodeToLayout(i),this.kick()}),this.space.on("node:removed",(i,n)=>{n&&this.removeNodeFromLayout(n),this.kick()}),this.space.on("edge:added",i=>{this.addEdgeToLayout(i),this.kick()}),this.space.on("edge:removed",(i,n)=>{n&&this.removeEdgeFromLayout(n),this.kick()})}addNodeToLayout(t){var i;(i=this.layoutManager)==null||i.addNodeToLayout(t)}removeNodeFromLayout(t){var i;(i=this.layoutManager)==null||i.removeNodeFromLayout(t)}addEdgeToLayout(t){var i;(i=this.layoutManager)==null||i.addEdgeToLayout(t)}removeEdgeFromLayout(t){var i;(i=this.layoutManager)==null||i.removeEdgeFromLayout(t)}kick(){var t;(t=this.layoutManager)==null||t.kick()}stop(){var t;(t=this.layoutManager)==null||t.stopLayout()}async applyLayout(t,i={}){var n;return((n=this.layoutManager)==null?void 0:n.applyLayout(t,i))||!1}togglePinNode(t){var s,a;const i=(s=this.pluginManager.getPlugin("NodePlugin"))==null?void 0:s.getNodeById(t);if(!i)return console.warn(`LayoutPlugin: Node ${t} not found.`);const n=(a=this.layoutManager)==null?void 0:a.getActiveLayout();n&&typeof n.setPinState=="function"?(n.setPinState(i,!i.isPinned),this.space.emit("node:pinned",{node:i,isPinned:i.isPinned})):console.warn("LayoutPlugin: Active layout does not support pinning.")}update(){var t;(t=this.layoutManager)==null||t.update()}dispose(){var t;super.dispose(),(t=this.layoutManager)==null||t.dispose(),this.layoutManager=null}}const xt={IDLE:"IDLE",PANNING:"PANNING",DRAGGING_NODE:"DRAGGING_NODE",RESIZING_NODE:"RESIZING_NODE",LINKING_NODE:"LINKING_NODE"};class t1{constructor(e,t){E(this,"_onConfirmYes",()=>{var e;(e=this.confirmCallback)==null||e.call(this),this.hide()});E(this,"_onConfirmNo",()=>{this.hide()});E(this,"hide",()=>{this.confirmDialogElement.style.display==="block"&&(this.confirmDialogElement.style.display="none",this.confirmCallback=null,this.space.emit("ui:confirmdialog:hidden"))});this.space=e,this.confirmDialogElement=t,this.confirmCallback=null,this._bindEvents()}_bindEvents(){var e,t;(e=ue("#confirm-yes",this.confirmDialogElement))==null||e.addEventListener("click",this._onConfirmYes),(t=ue("#confirm-no",this.confirmDialogElement))==null||t.addEventListener("click",this._onConfirmNo)}show(e,t){const i=ue("#confirm-message",this.confirmDialogElement);i&&(i.textContent=e),this.confirmCallback=t,this.confirmDialogElement.style.display="block",this.space.emit("ui:confirmdialog:shown",{message:e})}dispose(){var e,t;(e=ue("#confirm-yes",this.confirmDialogElement))==null||e.removeEventListener("click",this._onConfirmYes),(t=ue("#confirm-no",this.confirmDialogElement))==null||t.removeEventListener("click",this._onConfirmNo),this.confirmDialogElement=null,this.space=null}}class i1{constructor(e,t,i){E(this,"_onContextMenuClick",e=>{var v,g;const t=e.target.closest("li[data-action]");if(!t||t.classList.contains("disabled"))return;const{action:i,nodeId:n,edgeId:s,positionX:a,positionY:o,positionZ:l}=t.dataset,c=a?{x:parseFloat(a),y:parseFloat(o),z:parseFloat(l)}:null;this.hide();const h=this.space.plugins.getPlugin("NodePlugin"),d=this.space.plugins.getPlugin("EdgePlugin"),u=this.space.plugins.getPlugin("RenderingPlugin"),f=n?h==null?void 0:h.getNodeById(n):null,m=s?d==null?void 0:d.getEdgeById(s):null;switch(i){case"edit-node-content":f instanceof gt&&f.data.editable&&((g=(v=f.htmlElement)==null?void 0:v.querySelector(".node-content"))==null||g.focus());break;case"delete-node":f&&this.space.emit("ui:request:confirm",{message:`Delete node "${f.id.substring(0,10)}..."?`,onConfirm:()=>this.space.emit("ui:request:removeNode",f.id)});break;case"start-linking-node":f&&this.space.emit("ui:request:startLinking",f);break;case"autozoom-node":f&&this.space.emit("ui:request:autoZoomNode",f);break;case"toggle-pin-node":f&&this.space.togglePinNode(f.id);break;case"edit-edge-style":m&&this._uiPluginCallbacks.setSelectedEdge(m,!1);break;case"reverse-edge-direction":m&&this.space.emit("ui:request:reverseEdge",m.id);break;case"delete-edge":m&&this.space.emit("ui:request:confirm",{message:`Delete edge "${m.id.substring(0,10)}..."?`,onConfirm:()=>this.space.emit("ui:request:removeEdge",m.id)});break;case"create-html-node":c&&this.space.emit("ui:request:createNode",{type:"html",position:c,data:{label:"New Node",content:"Edit me!"}});break;case"create-note-node":c&&this.space.emit("ui:request:createNode",{type:"note",position:c,data:{content:"New Note ✨"}});break;case"create-shape-node-box":c&&this.space.emit("ui:request:createNode",{type:"shape",position:c,data:{label:"Box Node 📦",shape:"box",size:60,color:Math.random()*16777215}});break;case"create-shape-node-sphere":c&&this.space.emit("ui:request:createNode",{type:"shape",position:c,data:{label:"Sphere Node 🌐",shape:"sphere",size:60,color:Math.random()*16777215}});break;case"center-camera-view":this.space.emit("ui:request:centerView");break;case"reset-camera-view":this.space.emit("ui:request:resetView");break;case"toggle-background-visibility":{if(u){const p=u.background.alpha===0?1:0,x=p===0?0:document.body.classList.contains("theme-light")?16053492:1710621;this.space.emit("ui:request:toggleBackground",x,p)}break}default:console.warn("ContextMenu: Unknown action:",i)}});E(this,"hide",()=>{this.contextMenuElement.style.display==="block"&&(this.contextMenuElement.style.display="none",this.contextMenuElement.innerHTML="",this.space.emit("ui:contextmenu:hidden"))});this.space=e,this.contextMenuElement=t,this._uiPluginCallbacks=i,this._bindEvents()}_bindEvents(){this.contextMenuElement.addEventListener("click",this._onContextMenuClick)}_getContextMenuItemsForNode(e){const t=[];e instanceof gt&&e.data.editable&&t.push({label:"📝 Edit Content",action:"edit-node-content",nodeId:e.id}),t.push({label:"🔗 Start Link",action:"start-linking-node",nodeId:e.id}),t.push({label:"🔎 Auto Zoom",action:"autozoom-node",nodeId:e.id});const i=e.isPinned||!1;return t.push({label:i?"📌 Unpin":"📌 Pin",action:"toggle-pin-node",nodeId:e.id}),t.push({type:"separator"}),t.push({label:"🗑️ Delete Node",action:"delete-node",nodeId:e.id,isDestructive:!0}),t}_getContextMenuItemsForEdge(e){return[{label:"🎨 Edit Style",action:"edit-edge-style",edgeId:e.id},{label:"↔️ Reverse Direction",action:"reverse-edge-direction",edgeId:e.id},{type:"separator"},{label:"🗑️ Delete Edge",action:"delete-edge",edgeId:e.id,isDestructive:!0}]}_getContextMenuItemsForBackground(e){const t=[];if(e){const n={positionX:e.x,positionY:e.y,positionZ:e.z};t.push({label:"📄 Add HTML Node",action:"create-html-node",...n}),t.push({label:"📝 Add Note",action:"create-note-node",...n}),t.push({label:"📦 Add Box",action:"create-shape-node-box",...n}),t.push({label:"🌐 Add Sphere",action:"create-shape-node-sphere",...n})}t.push({type:"separator"}),t.push({label:"🎯 Center View",action:"center-camera-view"}),t.push({label:"🔄 Reset View",action:"reset-camera-view"});const i=this.space.plugins.getPlugin("RenderingPlugin");if(i){const n=i.background.alpha===0;t.push({label:n?"🖼️ Opaque BG":"💨 Transparent BG",action:"toggle-background-visibility"})}return t}show(e,t,i){let n=[];if(i.node)i.shiftKey||this._uiPluginCallbacks.setSelectedNode(i.node,!1),n=this._getContextMenuItemsForNode(i.node);else if(i.intersectedEdge)i.shiftKey||this._uiPluginCallbacks.setSelectedEdge(i.intersectedEdge,!1),n=this._getContextMenuItemsForEdge(i.intersectedEdge);else{i.shiftKey||this._uiPluginCallbacks.setSelectedNode(null,!1);const u=this.space.screenToWorld(e,t,0);n=this._getContextMenuItemsForBackground(u)}if(n.length===0)return;const s=this.contextMenuElement;s.innerHTML="";const a=document.createElement("ul");n.forEach(u=>{const f=document.createElement("li");u.type==="separator"?f.className="separator":(f.textContent=u.label,Object.keys(u).forEach(m=>{m!=="label"&&m!=="type"&&m!=="isDestructive"&&u[m]!==void 0&&u[m]!==null&&(f.dataset[m]=String(u[m]))}),u.disabled&&f.classList.add("disabled"),u.isDestructive&&f.classList.add("destructive")),a.appendChild(f)}),s.appendChild(a);const{offsetWidth:o,offsetHeight:l}=s,c=5;let h=e+c;h+o>window.innerWidth-c&&(h=e-o-c);let d=t+c;d+l>window.innerHeight-c&&(d=t-l-c),s.style.left=`${Math.max(c,h)}px`,s.style.top=`${Math.max(c,d)}px`,s.style.display="block",this.space.emit("ui:contextmenu:shown",{x:e,y:t,items:n})}dispose(){this.contextMenuElement.removeEventListener("click",this._onContextMenuClick),this.contextMenuElement=null,this.space=null,this._uiPluginCallbacks=null}}class n1{constructor(e,t){E(this,"hide",()=>{var e,t;this.edgeMenuObject&&((e=this.edgeMenuObject.element)==null||e.remove(),(t=this.edgeMenuObject.parent)==null||t.remove(this.edgeMenuObject),this.edgeMenuObject=null,this.space.emit("ui:edgemenu:hidden"))});E(this,"updatePosition",e=>{var n,s;if(!this.edgeMenuObject||!((n=this.edgeMenuObject.element)!=null&&n.parentNode)||!e)return;const t=new M().lerpVectors(e.source.position,e.target.position,.5);this.edgeMenuObject.position.copy(t);const i=(s=this.space.plugins.getPlugin("CameraPlugin"))==null?void 0:s.getCameraInstance();i&&this.edgeMenuObject.lookAt(i.position),this.edgeMenuObject.element.style.transform=`scale(${1/this.space.plugins.getPlugin("RenderingPlugin").getCSS3DRenderer().getSize().width*1e5})`});this.space=e,this._uiPluginCallbacks=t,this.edgeMenuObject=null}show(e){var i,n;if(!e)return;this.hide();const t=this._createEdgeMenuElement(e);this.edgeMenuObject=new sa(t),(n=(i=this.space.plugins.getPlugin("RenderingPlugin"))==null?void 0:i.getCSS3DScene())==null||n.add(this.edgeMenuObject),this.updatePosition(e),this.space.emit("ui:edgemenu:shown",{edge:e})}_createEdgeMenuElement(e){var n;const t=document.createElement("div");t.className="edge-menu-frame",t.dataset.edgeId=e.id;const i=`#${((n=e.data.color)==null?void 0:n.toString(16).padStart(6,"0"))||"ffffff"}`;return t.innerHTML=`
            <input type="color" value="${i}" title="Edge Color" data-property="color">
            <input type="range" min="0.5" max="10" step="0.1" value="${e.data.thickness||1}" title="Edge Thickness" data-property="thickness">
            <select title="Constraint Type" data-property="constraintType">
                ${["elastic","rigid","weld","none"].map(s=>`<option value="${s}" ${e.data.constraintType===s?"selected":""}>${s.charAt(0).toUpperCase()+s.slice(1)}</option>`).join("")}
            </select>
            <button title="Delete Edge" class="delete-button" data-action="delete-edge">×</button>
        `,t.addEventListener("input",s=>{if(s.target instanceof HTMLInputElement||s.target instanceof HTMLSelectElement){const a=s.target.dataset.property;if(!a)return;let o=s.target.value;s.target.type==="color"?o=parseInt(o.substring(1),16):s.target.type==="range"&&(o=parseFloat(o)),this.space.emit("ui:request:updateEdge",e.id,a,o)}}),t.addEventListener("click",s=>{s.target.closest('button[data-action="delete-edge"]')&&this.space.emit("ui:request:confirm",{message:`Delete edge "${e.id.substring(0,10)}..."?`,onConfirm:()=>this.space.emit("ui:request:removeEdge",e.id)})}),t.addEventListener("pointerdown",s=>s.stopPropagation()),t.addEventListener("wheel",s=>s.stopPropagation()),t}dispose(){this.hide(),this.space=null,this._uiPluginCallbacks=null}}class s1{constructor(e){E(this,"hide",()=>{this.keyboardShortcutsDialogElement&&(this.keyboardShortcutsDialogElement.style.display="none",this.space.emit("ui:keyboardshortcuts:hidden"))});this.space=e,this.keyboardShortcutsDialogElement=null,this.keyboardShortcuts=[{keys:["Delete","Backspace"],description:"Delete selected node(s) or edge(s)"},{keys:["Escape"],description:"Close menus, cancel linking, deselect all, or exit pointer lock"},{keys:["Enter"],description:"Focus content of selected HTML node (if editable)"},{keys:["+","="],description:"Zoom in content of selected HTML node"},{keys:["Ctrl/Meta + +","Ctrl/Meta + ="],description:"Increase size of selected HTML node"},{keys:["-"],description:"Zoom out content of selected HTML node"},{keys:["Ctrl/Meta + -"],description:"Decrease size of selected HTML node"},{keys:["Spacebar"],description:"Focus on selected item or center view"},{keys:["Scroll Wheel"],description:"Zoom camera"},{keys:["Ctrl/Meta + Scroll Wheel"],description:"Adjust content scale of hovered HTML node"},{keys:["Middle Mouse Button (on node)"],description:"Auto-zoom to node"},{keys:["Alt + Drag Node (vertical)"],description:"Adjust node Z-depth"}]}_createDialogElement(){var t;if(this.keyboardShortcutsDialogElement)return;this.keyboardShortcutsDialogElement=document.createElement("div"),this.keyboardShortcutsDialogElement.id="keyboard-shortcuts-dialog",this.keyboardShortcutsDialogElement.className="dialog",this.keyboardShortcutsDialogElement.addEventListener("pointerdown",i=>i.stopPropagation());let e=`
            <h2>Keyboard Shortcuts</h2>
            <table class="shortcuts-table">
                <thead>
                    <tr>
                        <th>Key(s)</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
        `;this.keyboardShortcuts.forEach(i=>{e+=`
                <tr>
                    <td>${i.keys.map(n=>`<kbd>${n}</kbd>`).join(" / ")}</td>
                    <td>${i.description}</td>
                </tr>
            `}),e+=`
                </tbody>
            </table>
            <button id="close-shortcuts-dialog">Close</button>
        `,this.keyboardShortcutsDialogElement.innerHTML=e,document.body.appendChild(this.keyboardShortcutsDialogElement),(t=ue("#close-shortcuts-dialog",this.keyboardShortcutsDialogElement))==null||t.addEventListener("click",this.hide)}show(){this._createDialogElement(),this.keyboardShortcutsDialogElement.style.display="block",this.space.emit("ui:keyboardshortcuts:shown")}dispose(){var e;this.keyboardShortcutsDialogElement&&((e=ue("#close-shortcuts-dialog",this.keyboardShortcutsDialogElement))==null||e.removeEventListener("click",this.hide),this.keyboardShortcutsDialogElement.remove(),this.keyboardShortcutsDialogElement=null),this.space=null}}class r1{constructor(e){E(this,"_onApplyLayout",()=>{var t;const e=(t=ue("#layout-select",this.layoutSettingsDialogElement))==null?void 0:t.value;e&&(this.space.emit("ui:request:applyLayout",e),setTimeout(()=>this._updateContent(),100))});E(this,"hide",()=>{this.layoutSettingsDialogElement&&(this.layoutSettingsDialogElement.style.display="none",this.space.emit("ui:layoutsettings:hidden"))});this.space=e,this.layoutSettingsDialogElement=null}_createDialogElement(){var e,t;this.layoutSettingsDialogElement||(this.layoutSettingsDialogElement=document.createElement("div"),this.layoutSettingsDialogElement.id="layout-settings-dialog",this.layoutSettingsDialogElement.className="dialog",this.layoutSettingsDialogElement.addEventListener("pointerdown",i=>i.stopPropagation()),document.body.appendChild(this.layoutSettingsDialogElement),this.layoutSettingsDialogElement.innerHTML=`
            <h2>Layout Settings</h2>
            <div class="layout-controls"></div>
            <button id="apply-layout-button" style="margin-right: 10px;">Apply Layout</button>
            <button id="close-layout-dialog">Close</button>
        `,(e=ue("#apply-layout-button",this.layoutSettingsDialogElement))==null||e.addEventListener("click",this._onApplyLayout),(t=ue("#close-layout-dialog",this.layoutSettingsDialogElement))==null||t.addEventListener("click",this.hide))}_updateContent(){if(!this.layoutSettingsDialogElement||this.layoutSettingsDialogElement.style.display==="none")return;const e=this.space.plugins.getPlugin("LayoutPlugin");if(!(e!=null&&e.layoutManager)){console.warn("LayoutPlugin not available for layout settings update.");return}const t=e.layoutManager.getActiveLayoutName(),i=[...e.layoutManager.layouts.keys()];let n=`
            <div>
                <label for="layout-select">Current Layout: </label>
                <select id="layout-select">
        `;i.forEach(a=>{const o=a.charAt(0).toUpperCase()+a.slice(1);n+=`<option value="${a}" ${a===t?"selected":""}>${o}</option>`}),n+=`
                </select>
            </div>
            <div class="layout-options-container" style="margin-top: 15px; min-height: 50px;">
                <p><em>Layout-specific options will be available here in a future update.</em></p>
            </div>
        `,ue(".layout-controls",this.layoutSettingsDialogElement).innerHTML=n;const s=ue("#layout-select",this.layoutSettingsDialogElement);s&&(s.value=t)}show(){this._createDialogElement(),this._updateContent(),this.layoutSettingsDialogElement.style.display="block",this.space.emit("ui:layoutsettings:shown")}dispose(){var e,t;this.layoutSettingsDialogElement&&((e=ue("#apply-layout-button",this.layoutSettingsDialogElement))==null||e.removeEventListener("click",this._onApplyLayout),(t=ue("#close-layout-dialog",this.layoutSettingsDialogElement))==null||t.removeEventListener("click",this.hide),this.layoutSettingsDialogElement.remove(),this.layoutSettingsDialogElement=null),this.space=null}}class a1{constructor(e,t,i){E(this,"_togglePopupMenu",e=>{e==null||e.stopPropagation(),this.isPopupMenuVisible=!this.isPopupMenuVisible,this.isPopupMenuVisible?(this.hudPopupMenu.classList.remove("hidden"),this.hudMainMenuButton.classList.add("active"),document.addEventListener("click",this._handleClickOutsideMenu,{capture:!0,once:!0}),document.addEventListener("keydown",this._handleEscKey,{capture:!0,once:!0})):(this.hudPopupMenu.classList.add("hidden"),this.hudMainMenuButton.classList.remove("active"),document.removeEventListener("click",this._handleClickOutsideMenu,{capture:!0}),document.removeEventListener("keydown",this._handleEscKey,{capture:!0}))});E(this,"_handleClickOutsideMenu",e=>{!this.hudPopupMenu.contains(e.target)&&e.target!==this.hudMainMenuButton?this.isPopupMenuVisible&&this._togglePopupMenu():this.isPopupMenuVisible&&document.addEventListener("click",this._handleClickOutsideMenu,{capture:!0,once:!0}),document.removeEventListener("keydown",this._handleEscKey,{capture:!0})});E(this,"_handleEscKey",e=>{e.key==="Escape"&&this.isPopupMenuVisible?this._togglePopupMenu():this.isPopupMenuVisible&&document.addEventListener("keydown",this._handleEscKey,{capture:!0,once:!0}),document.removeEventListener("click",this._handleClickOutsideMenu,{capture:!0})});E(this,"_onModeIndicatorChange",e=>{const t=e.target.value;this.space.emit("ui:request:setCameraMode",t)});E(this,"_onKeyboardShortcutsButtonClick",()=>{this.keyboardShortcutsDialog.show(),this.isPopupMenuVisible&&this._togglePopupMenu()});E(this,"_onLayoutSettingsButtonClick",()=>{this.layoutSettingsDialog.show(),this.isPopupMenuVisible&&this._togglePopupMenu()});this.space=e,this.container=t,this._uiPluginCallbacks=i,this.hudLayer=null,this.hudMainMenuButton=null,this.hudPopupMenu=null,this.hudModeIndicator=null,this.hudSelectionInfo=null,this.hudKeyboardShortcutsButton=null,this.hudLayoutSettingsButton=null,this.isPopupMenuVisible=!1,this.keyboardShortcutsDialog=new s1(e),this.layoutSettingsDialog=new r1(e),this._createHudElements(),this._bindEvents(),this.updateHudSelectionInfo(),this.updateHudCameraMode()}_createHudElements(){var s;this.hudLayer=ue("#hud-layer"),this.hudLayer||(this.hudLayer=document.createElement("div"),this.hudLayer.id="hud-layer",this.container.parentNode.appendChild(this.hudLayer)),this.hudMainMenuButton=document.createElement("div"),this.hudMainMenuButton.id="hud-main-menu-button",this.hudMainMenuButton.textContent="☰",this.hudMainMenuButton.title="Open Menu",this.hudLayer.appendChild(this.hudMainMenuButton),this.hudPopupMenu=document.createElement("div"),this.hudPopupMenu.id="hud-popup-menu",this.hudPopupMenu.classList.add("hidden"),this.hudModeIndicator=document.createElement("select"),this.hudModeIndicator.id="hud-mode-indicator";const e=((s=this.space.plugins.getPlugin("CameraPlugin"))==null?void 0:s.getAvailableCameraModes())||{orbit:"Orbit Control",free:"Free Look"};for(const a in e){const o=document.createElement("option");o.value=a,o.textContent=e[a],this.hudModeIndicator.appendChild(o)}const t=this._createMenuGroup("Camera Mode:",this.hudModeIndicator);this.hudPopupMenu.appendChild(t),this.hudKeyboardShortcutsButton=document.createElement("button"),this.hudKeyboardShortcutsButton.id="hud-keyboard-shortcuts-button",this.hudKeyboardShortcutsButton.innerHTML='⌨️ <span class="label">Shortcuts</span>',this.hudKeyboardShortcutsButton.title="View Keyboard Shortcuts";const i=this._createMenuGroup(null,this.hudKeyboardShortcutsButton);this.hudPopupMenu.appendChild(i),this.hudLayoutSettingsButton=document.createElement("button"),this.hudLayoutSettingsButton.id="hud-layout-settings-button",this.hudLayoutSettingsButton.innerHTML='📐 <span class="label">Layout</span>',this.hudLayoutSettingsButton.title="Layout Settings";const n=this._createMenuGroup(null,this.hudLayoutSettingsButton);this.hudPopupMenu.appendChild(n),this.hudLayer.appendChild(this.hudPopupMenu),this.hudSelectionInfo=ue("#hud-selection-info"),this.hudSelectionInfo||(this.hudSelectionInfo=document.createElement("div"),this.hudSelectionInfo.id="hud-selection-info",this.hudLayer.appendChild(this.hudSelectionInfo))}_createMenuGroup(e,t){const i=document.createElement("div");if(i.className="hud-menu-group",e){const n=document.createElement("label");n.textContent=e,t.id&&(n.htmlFor=t.id),i.appendChild(n)}return i.appendChild(t),i}_bindEvents(){this.hudMainMenuButton.addEventListener("click",this._togglePopupMenu),this.hudModeIndicator.addEventListener("change",this._onModeIndicatorChange),this.hudKeyboardShortcutsButton.addEventListener("click",this._onKeyboardShortcutsButtonClick),this.hudLayoutSettingsButton.addEventListener("click",this._onLayoutSettingsButtonClick)}updateHudCameraMode(e){if(this.hudModeIndicator){const t=this.space.plugins.getPlugin("CameraPlugin"),i=e||(t==null?void 0:t.getCameraMode()),n=t==null?void 0:t.getAvailableCameraModes();if(n){const s=Array.from(this.hudModeIndicator.options).map(o=>o.value),a=Object.keys(n);if(s.length!==a.length||!a.every(o=>s.includes(o))){this.hudModeIndicator.innerHTML="";for(const o in n){const l=document.createElement("option");l.value=o,l.textContent=n[o],this.hudModeIndicator.appendChild(l)}}}i&&(this.hudModeIndicator.value=i)}}updateHudSelectionInfo(){if(!this.hudSelectionInfo)return;const e=this._uiPluginCallbacks.getSelectedNodes(),t=this._uiPluginCallbacks.getSelectedEdges();if(e.size===1){const i=e.values().next().value;this.hudSelectionInfo.textContent=`Selected: Node ${i.data.label||i.id.substring(0,8)}`}else if(e.size>1)this.hudSelectionInfo.textContent=`Selected: ${e.size} Nodes`;else if(t.size===1){const i=t.values().next().value;this.hudSelectionInfo.textContent=`Selected: Edge ${i.id.substring(0,8)}`}else t.size>1?this.hudSelectionInfo.textContent=`Selected: ${t.size} Edges`:this.hudSelectionInfo.textContent="Selected: None"}isKeyboardShortcutsDialogVisible(){var e;return((e=this.keyboardShortcutsDialog.keyboardShortcutsDialogElement)==null?void 0:e.style.display)==="block"}isLayoutSettingsDialogVisible(){var e;return((e=this.layoutSettingsDialog.layoutSettingsDialogElement)==null?void 0:e.style.display)==="block"}hideAllDialogs(){this.keyboardShortcutsDialog.hide(),this.layoutSettingsDialog.hide(),this.isPopupMenuVisible&&this._togglePopupMenu()}dispose(){var e,t,i,n,s;(e=this.hudMainMenuButton)==null||e.removeEventListener("click",this._togglePopupMenu),(t=this.hudModeIndicator)==null||t.removeEventListener("change",this._onModeIndicatorChange),(i=this.hudKeyboardShortcutsButton)==null||i.removeEventListener("click",this._onKeyboardShortcutsButtonClick),(n=this.hudLayoutSettingsButton)==null||n.removeEventListener("click",this._onLayoutSettingsButtonClick),document.removeEventListener("click",this._handleClickOutsideMenu,{capture:!0}),document.removeEventListener("keydown",this._handleEscKey,{capture:!0}),(s=this.hudLayer)==null||s.remove(),this.hudLayer=null,this.hudMainMenuButton=null,this.hudPopupMenu=null,this.hudModeIndicator=null,this.hudSelectionInfo=null,this.hudKeyboardShortcutsButton=null,this.hudLayoutSettingsButton=null,this.keyboardShortcutsDialog.dispose(),this.layoutSettingsDialog.dispose(),this.space=null,this.container=null,this._uiPluginCallbacks=null}}class o1 extends a1{constructor(e,t,i){super(e,t,i),this.settings={showPerformanceMetrics:!0,showMinimap:!1,showStatusBar:!0,showNotifications:!0,showProgressIndicators:!0,autoHideDelay:3e3,hudOpacity:.9},this.performanceMetrics={fps:0,frameTime:0,nodeCount:0,edgeCount:0,lastUpdateTime:0},this.notifications=[],this.progressIndicators=new Map,this.statusItems=new Map,this._createAdvancedHudElements(),this._startPerformanceMonitoring(),this._subscribeToAdvancedEvents()}_createAdvancedHudElements(){this.performancePanel=this._createPerformancePanel(),this.minimapPanel=this._createMinimapPanel(),this.statusBar=this._createStatusBar(),this.notificationContainer=this._createNotificationContainer(),this.progressContainer=this._createProgressContainer(),this.cameraStatusIndicator=this._createCameraStatusIndicator(),this.layoutStatusIndicator=this._createLayoutStatusIndicator(),this.navigationControls=this._createNavigationControls(),this.viewModeControls=this._createViewModeControls(),this.quickActionsPanel=this._createQuickActionsPanel()}_createPerformancePanel(){const e=document.createElement("div");return e.id="hud-performance-panel",e.className="hud-panel hud-top-left",e.innerHTML=`
            <div class="hud-panel-header">
                <span class="hud-panel-title">Performance</span>
                <button class="hud-panel-toggle" title="Toggle Performance Monitor">📊</button>
            </div>
            <div class="hud-panel-content">
                <div class="performance-metric">
                    <span class="metric-label">FPS:</span>
                    <span class="metric-value" id="fps-value">60</span>
                </div>
                <div class="performance-metric">
                    <span class="metric-label">Frame Time:</span>
                    <span class="metric-value" id="frametime-value">16ms</span>
                </div>
                <div class="performance-metric">
                    <span class="metric-label">Nodes:</span>
                    <span class="metric-value" id="nodes-count">0</span>
                </div>
                <div class="performance-metric">
                    <span class="metric-label">Edges:</span>
                    <span class="metric-value" id="edges-count">0</span>
                </div>
                <div class="performance-metric">
                    <span class="metric-label">Memory:</span>
                    <span class="metric-value" id="memory-usage">0MB</span>
                </div>
            </div>
        `,this.hudLayer.appendChild(e),this._bindPanelToggle(e),e}_createMinimapPanel(){const e=document.createElement("div");return e.id="hud-minimap-panel",e.className="hud-panel hud-top-right",e.innerHTML=`
            <div class="hud-panel-header">
                <span class="hud-panel-title">Minimap</span>
                <button class="hud-panel-toggle" title="Toggle Minimap">🗺️</button>
            </div>
            <div class="hud-panel-content">
                <canvas id="minimap-canvas" width="150" height="150"></canvas>
                <div class="minimap-controls">
                    <button id="minimap-zoom-in" title="Zoom In">+</button>
                    <button id="minimap-zoom-out" title="Zoom Out">-</button>
                    <button id="minimap-center" title="Center View">⌖</button>
                </div>
            </div>
        `,this.hudLayer.appendChild(e),this._bindPanelToggle(e),this._initMinimap(e.querySelector("#minimap-canvas")),e}_createStatusBar(){const e=document.createElement("div");return e.id="hud-status-bar",e.className="hud-status-bar hud-bottom-full",e.innerHTML=`
            <div class="status-section status-left">
                <span class="status-item" id="layout-status">Layout: Force</span>
                <span class="status-item" id="camera-mode-status">Camera: Orbit</span>
                <span class="status-item" id="selection-count-status">Selected: 0</span>
            </div>
            <div class="status-section status-center">
                <span class="status-item" id="current-action-status">Ready</span>
            </div>
            <div class="status-section status-right">
                <span class="status-item" id="zoom-level-status">Zoom: 100%</span>
                <span class="status-item" id="coordinates-status">0, 0, 0</span>
                <span class="status-item" id="time-status"></span>
            </div>
        `,this.hudLayer.appendChild(e),this._startTimeUpdater(e.querySelector("#time-status")),e}_createNotificationContainer(){const e=document.createElement("div");return e.id="hud-notifications",e.className="hud-notifications hud-top-center",this.hudLayer.appendChild(e),e}_createProgressContainer(){const e=document.createElement("div");return e.id="hud-progress-indicators",e.className="hud-progress-container hud-bottom-center",this.hudLayer.appendChild(e),e}_createCameraStatusIndicator(){const e=document.createElement("div");return e.id="hud-camera-status",e.className="hud-indicator hud-right-center",e.innerHTML=`
            <div class="indicator-icon" id="camera-mode-icon">📹</div>
            <div class="indicator-details">
                <div class="indicator-line" id="camera-position">Pos: 0, 0, 0</div>
                <div class="indicator-line" id="camera-target">Target: 0, 0, 0</div>
                <div class="indicator-line" id="camera-distance">Distance: 0</div>
            </div>
        `,this.hudLayer.appendChild(e),e}_createLayoutStatusIndicator(){const e=document.createElement("div");return e.id="hud-layout-status",e.className="hud-indicator hud-left-center",e.innerHTML=`
            <div class="indicator-icon" id="layout-mode-icon">🔗</div>
            <div class="indicator-details">
                <div class="indicator-line" id="layout-type">Type: Force</div>
                <div class="indicator-line" id="layout-running">Status: Running</div>
                <div class="indicator-line" id="layout-energy">Energy: 0</div>
            </div>
        `,this.hudLayer.appendChild(e),e}_createNavigationControls(){const e=document.createElement("div");return e.id="hud-navigation-controls",e.className="hud-controls hud-bottom-right",e.innerHTML=`
            <div class="control-group">
                <button class="nav-button" id="nav-zoom-in" title="Zoom In">🔍+</button>
                <button class="nav-button" id="nav-zoom-out" title="Zoom Out">🔍-</button>
            </div>
            <div class="control-group">
                <button class="nav-button" id="nav-center" title="Center View">⌖</button>
                <button class="nav-button" id="nav-reset" title="Reset View">🏠</button>
            </div>
            <div class="control-group">
                <button class="nav-button" id="nav-fullscreen" title="Toggle Fullscreen">⛶</button>
                <button class="nav-button" id="nav-screenshot" title="Take Screenshot">📸</button>
            </div>
        `,this.hudLayer.appendChild(e),this._bindNavigationControls(e),e}_createViewModeControls(){const e=document.createElement("div");return e.id="hud-view-mode-controls",e.className="hud-controls hud-top-center-right",e.innerHTML=`
            <div class="view-mode-toggle">
                <button class="mode-button active" id="mode-3d" title="3D View">3D</button>
                <button class="mode-button" id="mode-2d" title="2D View">2D</button>
            </div>
            <div class="view-options">
                <button class="option-button" id="toggle-grid" title="Toggle Grid">⊞</button>
                <button class="option-button" id="toggle-axes" title="Toggle Axes">⊥</button>
                <button class="option-button" id="toggle-labels" title="Toggle Labels">🏷️</button>
                <button class="option-button" id="toggle-shadows" title="Toggle Shadows">☀️</button>
            </div>
        `,this.hudLayer.appendChild(e),this._bindViewModeControls(e),e}_createQuickActionsPanel(){const e=document.createElement("div");return e.id="hud-quick-actions",e.className="hud-panel hud-bottom-left",e.innerHTML=`
            <div class="hud-panel-header">
                <span class="hud-panel-title">Quick Actions</span>
                <button class="hud-panel-toggle" title="Toggle Quick Actions">⚡</button>
            </div>
            <div class="hud-panel-content">
                <div class="action-group">
                    <button class="action-button" id="action-add-node" title="Add Node">➕ Node</button>
                    <button class="action-button" id="action-add-edge" title="Add Edge">🔗 Edge</button>
                </div>
                <div class="action-group">
                    <button class="action-button" id="action-select-all" title="Select All">◉ All</button>
                    <button class="action-button" id="action-clear-selection" title="Clear Selection">◯ Clear</button>
                </div>
                <div class="action-group">
                    <button class="action-button" id="action-auto-layout" title="Auto Layout">🎯 Auto</button>
                    <button class="action-button" id="action-export" title="Export Graph">💾 Export</button>
                </div>
            </div>
        `,this.hudLayer.appendChild(e),this._bindPanelToggle(e),this._bindQuickActions(e),e}_bindPanelToggle(e){const t=e.querySelector(".hud-panel-toggle"),i=e.querySelector(".hud-panel-content");t&&i&&t.addEventListener("click",()=>{const n=!i.classList.contains("collapsed");i.classList.toggle("collapsed",n),t.classList.toggle("collapsed",n)})}_bindNavigationControls(e){const t=this.space.plugins.getPlugin("CameraPlugin");e.querySelector("#nav-zoom-in").addEventListener("click",()=>{t==null||t.zoom(-5)}),e.querySelector("#nav-zoom-out").addEventListener("click",()=>{t==null||t.zoom(5)}),e.querySelector("#nav-center").addEventListener("click",()=>{t==null||t.centerView()}),e.querySelector("#nav-reset").addEventListener("click",()=>{t==null||t.resetView()}),e.querySelector("#nav-fullscreen").addEventListener("click",()=>{this._toggleFullscreen()}),e.querySelector("#nav-screenshot").addEventListener("click",()=>{this._takeScreenshot()})}_bindViewModeControls(e){const t=e.querySelector("#mode-3d"),i=e.querySelector("#mode-2d");t.addEventListener("click",()=>{t.classList.add("active"),i.classList.remove("active"),this._setViewMode("3d")}),i.addEventListener("click",()=>{i.classList.add("active"),t.classList.remove("active"),this._setViewMode("2d")}),e.querySelector("#toggle-grid").addEventListener("click",()=>{this._toggleGrid()}),e.querySelector("#toggle-axes").addEventListener("click",()=>{this._toggleAxes()}),e.querySelector("#toggle-labels").addEventListener("click",()=>{this._toggleLabels()}),e.querySelector("#toggle-shadows").addEventListener("click",()=>{this._toggleShadows()})}_bindQuickActions(e){e.querySelector("#action-add-node").addEventListener("click",()=>{this._addRandomNode()}),e.querySelector("#action-add-edge").addEventListener("click",()=>{this.space.emit("ui:request:startLinking")}),e.querySelector("#action-select-all").addEventListener("click",()=>{this._selectAllNodes()}),e.querySelector("#action-clear-selection").addEventListener("click",()=>{this._clearSelection()}),e.querySelector("#action-auto-layout").addEventListener("click",()=>{this._applyAutoLayout()}),e.querySelector("#action-export").addEventListener("click",()=>{this._exportGraph()})}_initMinimap(e){if(!e)return;this.minimapCanvas=e,this.minimapCtx=e.getContext("2d");const t=e.parentElement.querySelector("#minimap-zoom-in"),i=e.parentElement.querySelector("#minimap-zoom-out"),n=e.parentElement.querySelector("#minimap-center");t==null||t.addEventListener("click",()=>this._minimapZoom(1.2)),i==null||i.addEventListener("click",()=>this._minimapZoom(.8)),n==null||n.addEventListener("click",()=>this._minimapCenter()),e.addEventListener("click",s=>this._minimapClick(s)),this._updateMinimap()}_startPerformanceMonitoring(){let e=0,t=performance.now();const i=()=>{var s,a;e++;const n=performance.now();if(n-t>=1e3){this.performanceMetrics.fps=e,this.performanceMetrics.frameTime=(n-t)/e;const o=this.space.plugins.getPlugin("NodePlugin"),l=this.space.plugins.getPlugin("EdgePlugin");this.performanceMetrics.nodeCount=((s=o==null?void 0:o.getNodes())==null?void 0:s.size)||0,this.performanceMetrics.edgeCount=((a=l==null?void 0:l.getEdges())==null?void 0:a.size)||0,this._updatePerformanceDisplay(),e=0,t=n}requestAnimationFrame(i)};i()}_startTimeUpdater(e){if(!e)return;const t=()=>{const i=new Date;e.textContent=i.toLocaleTimeString()};t(),setInterval(t,1e3)}_subscribeToAdvancedEvents(){this.space.on("camera:moved",()=>this._updateCameraStatus()),this.space.on("camera:modeChanged",()=>this._updateCameraStatus()),this.space.on("camera:autoZoomToggled",()=>this._updateCameraStatus()),this.space.on("camera:autoRotationToggled",()=>this._updateCameraStatus()),this.space.on("layout:started",e=>this._updateLayoutStatus(e)),this.space.on("layout:stopped",e=>this._updateLayoutStatus(e)),this.space.on("layout:adapted",e=>this._updateLayoutStatus(e)),this.space.on("selection:changed",()=>this._updateSelectionStatus()),this.space.on("node:added",()=>this._updateGraphStatus()),this.space.on("node:removed",()=>this._updateGraphStatus()),this.space.on("edge:added",()=>this._updateGraphStatus()),this.space.on("edge:removed",()=>this._updateGraphStatus())}_updatePerformanceDisplay(){const e=ue("#fps-value"),t=ue("#frametime-value"),i=ue("#nodes-count"),n=ue("#edges-count"),s=ue("#memory-usage");if(e&&(e.textContent=Math.round(this.performanceMetrics.fps)),t&&(t.textContent=`${this.performanceMetrics.frameTime.toFixed(1)}ms`),i&&(i.textContent=this.performanceMetrics.nodeCount),n&&(n.textContent=this.performanceMetrics.edgeCount),s&&performance.memory){const a=performance.memory.usedJSHeapSize/1048576;s.textContent=`${a.toFixed(1)}MB`}}_updateCameraStatus(){var o;const e=this.space.plugins.getPlugin("CameraPlugin");if(!e)return;const t=e.getCameraInstance(),i=e.getCameraMode(),n=((o=e.getAdvancedControlsStatus)==null?void 0:o.call(e))||{},s=ue("#camera-position");if(ue("#camera-target"),ue("#camera-distance"),s&&t){const l=t.position;s.textContent=`Pos: ${l.x.toFixed(1)}, ${l.y.toFixed(1)}, ${l.z.toFixed(1)}`}const a=ue("#camera-mode-status");if(a){let l=`Camera: ${i}`;n.autoZoom&&(l+=" [AutoZoom]"),n.autoRotation&&(l+=" [AutoRotate]"),n.peekMode&&(l+=" [Peek]"),n.cinematicMode&&(l+=" [Cinematic]"),a.textContent=l}}_updateLayoutStatus(e){const t=ue("#layout-type"),i=ue("#layout-running");ue("#layout-energy");const n=ue("#layout-status");t&&e&&(t.textContent=`Type: ${e.name||"Unknown"}`),i&&(i.textContent=(e==null?void 0:e.type)==="started"?"Status: Running":"Status: Stopped"),n&&e&&(n.textContent=`Layout: ${e.name||"Unknown"}`)}_updateSelectionStatus(){const e=this._uiPluginCallbacks.getSelectedNodes(),t=this._uiPluginCallbacks.getSelectedEdges(),i=e.size+t.size,n=ue("#selection-count-status");n&&(n.textContent=`Selected: ${i}`)}_updateGraphStatus(){this._updateMinimap()}_updateMinimap(){var d,u;if(!this.minimapCanvas||!this.minimapCtx)return;const e=this.minimapCtx,t=this.minimapCanvas;e.clearRect(0,0,t.width,t.height),e.fillStyle="rgba(20, 20, 30, 0.8)",e.fillRect(0,0,t.width,t.height);const i=this.space.plugins.getPlugin("NodePlugin"),n=this.space.plugins.getPlugin("EdgePlugin"),s=Array.from(((d=i==null?void 0:i.getNodes())==null?void 0:d.values())||[]),a=Array.from(((u=n==null?void 0:n.getEdges())==null?void 0:u.values())||[]);if(s.length===0)return;const o=this._calculateMinimapBounds(s),l=Math.min(t.width/o.width,t.height/o.height)*.8,c=(t.width-o.width*l)/2,h=(t.height-o.height*l)/2;e.strokeStyle="rgba(100, 150, 255, 0.5)",e.lineWidth=1,a.forEach(f=>{const m=this._worldToMinimap(f.source.position,o,l,c,h),v=this._worldToMinimap(f.target.position,o,l,c,h);e.beginPath(),e.moveTo(m.x,m.y),e.lineTo(v.x,v.y),e.stroke()}),s.forEach(f=>{const m=this._worldToMinimap(f.position,o,l,c,h),v=this._uiPluginCallbacks.getSelectedNodes().has(f);e.fillStyle=v?"#ffff00":"#64B5F6",e.beginPath(),e.arc(m.x,m.y,v?3:2,0,Math.PI*2),e.fill()}),this._drawCameraIndicator(e,o,l,c,h)}_calculateMinimapBounds(e){let t=1/0,i=1/0,n=-1/0,s=-1/0;e.forEach(o=>{t=Math.min(t,o.position.x),i=Math.min(i,o.position.y),n=Math.max(n,o.position.x),s=Math.max(s,o.position.y)});const a=50;return{minX:t-a,minY:i-a,maxX:n+a,maxY:s+a,width:n-t+2*a,height:s-i+2*a}}_worldToMinimap(e,t,i,n,s){return{x:(e.x-t.minX)*i+n,y:(e.y-t.minY)*i+s}}_drawCameraIndicator(e,t,i,n,s){const a=this.space.plugins.getPlugin("CameraPlugin");if(!a)return;const o=a.getCameraInstance();if(!o)return;const l=this._worldToMinimap(o.position,t,i,n,s);e.strokeStyle="#ff6b6b",e.lineWidth=2,e.beginPath(),e.arc(l.x,l.y,8,0,Math.PI*2),e.stroke(),e.beginPath(),e.moveTo(l.x,l.y),e.lineTo(l.x,l.y-12),e.stroke()}showNotification(e,t="info",i=3e3){const n=document.createElement("div");return n.className=`hud-notification hud-notification-${t}`,n.innerHTML=`
            <div class="notification-icon">${this._getNotificationIcon(t)}</div>
            <div class="notification-content">${e}</div>
            <button class="notification-close" title="Close">×</button>
        `,n.querySelector(".notification-close").addEventListener("click",()=>this._removeNotification(n)),this.notificationContainer.appendChild(n),this.notifications.push(n),i>0&&setTimeout(()=>this._removeNotification(n),i),requestAnimationFrame(()=>{n.classList.add("notification-visible")}),n}_getNotificationIcon(e){const t={info:"ℹ️",success:"✅",warning:"⚠️",error:"❌"};return t[e]||t.info}_removeNotification(e){e.classList.remove("notification-visible"),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e),this.notifications=this.notifications.filter(t=>t!==e)},300)}showProgress(e,t,i=0){let n=this.progressIndicators.get(e);n||(n=document.createElement("div"),n.className="hud-progress-indicator",n.innerHTML=`
                <div class="progress-label">${t}</div>
                <div class="progress-bar">
                    <div class="progress-fill"></div>
                </div>
                <div class="progress-percent">0%</div>
            `,this.progressContainer.appendChild(n),this.progressIndicators.set(e,n));const s=n.querySelector(".progress-fill"),a=n.querySelector(".progress-percent");s.style.width=`${Math.max(0,Math.min(100,i))}%`,a.textContent=`${Math.round(i)}%`,i>=100&&setTimeout(()=>this.hideProgress(e),1e3)}hideProgress(e){const t=this.progressIndicators.get(e);t&&t.parentNode&&(t.parentNode.removeChild(t),this.progressIndicators.delete(e))}_addRandomNode(){const e={x:(Math.random()-.5)*400,y:(Math.random()-.5)*400,z:(Math.random()-.5)*200},t=["ControlPanelNode","ProgressNode","TextMeshNode","ShapeNode"],i=t[Math.floor(Math.random()*t.length)],n=this.space.addNode({id:`quick_node_${Date.now()}`,type:i,position:e,data:{content:"Quick Node"}});return this.showNotification(`Added ${i}`,"success",2e3),n}_selectAllNodes(){var i;const e=this.space.plugins.getPlugin("NodePlugin"),t=Array.from(((i=e==null?void 0:e.getNodes())==null?void 0:i.values())||[]);t.forEach(n=>{this._uiPluginCallbacks.setSelectedNode(n,!0)}),this.showNotification(`Selected ${t.length} nodes`,"info",2e3)}_clearSelection(){this._uiPluginCallbacks.setSelectedNode(null,!1),this._uiPluginCallbacks.setSelectedEdge(null,!1),this.showNotification("Selection cleared","info",2e3)}_applyAutoLayout(){var t;const e=this.space.plugins.getPlugin("LayoutPlugin");if((t=e==null?void 0:e.layoutManager)!=null&&t.toggleAutoZoom){const i=e.layoutManager.toggleAutoZoom();this.showNotification(`Auto-zoom ${i?"enabled":"disabled"}`,"info",2e3)}}_exportGraph(){const e=this.space.exportGraphToJSON();if(e){const t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),i=URL.createObjectURL(t),n=document.createElement("a");n.href=i,n.download=`spacegraph_${new Date().toISOString().slice(0,10)}.json`,n.click(),URL.revokeObjectURL(i),this.showNotification("Graph exported successfully","success",2e3)}}_toggleFullscreen(){var e,t,i;document.fullscreenElement?(i=document.exitFullscreen)==null||i.call(document):(t=(e=this.container).requestFullscreen)==null||t.call(e)}_takeScreenshot(){this.space.plugins.getPlugin("RenderingPlugin")&&this.showNotification("Screenshot feature not yet implemented","warning",2e3)}_setViewMode(e){this.space.emit("ui:request:setViewMode",e),this.showNotification(`Switched to ${e.toUpperCase()} view`,"info",2e3)}_toggleGrid(){this.space.emit("ui:request:toggleGrid"),this.showNotification("Grid toggled","info",1500)}_toggleAxes(){this.space.emit("ui:request:toggleAxes"),this.showNotification("Axes toggled","info",1500)}_toggleLabels(){this.space.emit("ui:request:toggleLabels"),this.showNotification("Labels toggled","info",1500)}_toggleShadows(){this.space.emit("ui:request:toggleShadows"),this.showNotification("Shadows toggled","info",1500)}_minimapZoom(e){const t=this.space.plugins.getPlugin("CameraPlugin");t==null||t.zoom(e>1?-5:5)}_minimapCenter(){const e=this.space.plugins.getPlugin("CameraPlugin");e==null||e.centerView()}_minimapClick(e){const t=this.minimapCanvas.getBoundingClientRect();e.clientX-t.left,e.clientY-t.top,this.showNotification("Minimap navigation coming soon","info",1500)}updateHudSelectionInfo(){super.updateHudSelectionInfo(),this._updateSelectionStatus()}updateHudCameraMode(e){super.updateHudCameraMode(e),this._updateCameraStatus()}updateHudSettings(e){this.settings={...this.settings,...e},this.hudLayer&&(this.hudLayer.style.opacity=this.settings.hudOpacity),this.performancePanel&&(this.performancePanel.style.display=this.settings.showPerformanceMetrics?"block":"none"),this.minimapPanel&&(this.minimapPanel.style.display=this.settings.showMinimap?"block":"none"),this.statusBar&&(this.statusBar.style.display=this.settings.showStatusBar?"block":"none")}getHudSettings(){return{...this.settings}}dispose(){this.notifications.forEach(e=>this._removeNotification(e)),this.progressIndicators.forEach((e,t)=>this.hideProgress(t)),super.dispose()}}class l1{constructor(e,t){this.space=e,this.toolbarElement=t,this._setupToolbar()}_setupToolbar(){if(!this.toolbarElement)return;this.toolbarElement.innerHTML="",[{id:"tb-add-node",text:"➕",title:"Add Default Node",action:"addNode"},{id:"tb-center-view",text:"🎯",title:"Center View",action:"centerView"},{id:"tb-reset-view",text:"🔄",title:"Reset View",action:"resetView"},{id:"tb-toggle-theme",text:"🎨",title:"Toggle Light/Dark Theme",action:"toggleTheme"}].forEach(t=>{const i=document.createElement("button");i.id=t.id,i.textContent=t.text,i.title=t.title,i.addEventListener("click",()=>this._handleToolbarAction(t.action)),this.toolbarElement.appendChild(i)})}_handleToolbarAction(e){switch(e){case"addNode":{const t=this.space.plugins.getPlugin("CameraPlugin"),i=t==null?void 0:t.getCameraInstance();let n={x:Math.random()*200-100,y:Math.random()*200-100,z:0};if(i){const s=new M,a=new M;i.getWorldPosition(s),i.getWorldDirection(a);const l=s.add(a.multiplyScalar(300));n={x:l.x,y:l.y,z:0}}this.space.emit("ui:request:createNode",{type:"html",position:n,data:{label:"New Node",content:"Edit me!"}});break}case"centerView":this.space.emit("ui:request:centerView");break;case"resetView":this.space.emit("ui:request:resetView");break;case"toggleTheme":{document.body.classList.toggle("theme-light");const t=document.body.classList.contains("theme-light")?"light":"dark";localStorage.setItem("spacegraph-theme",t),this.space.emit("theme:changed",{theme:t});break}default:console.warn("Toolbar: Unknown action:",e)}}dispose(){this.toolbarElement&&(this.toolbarElement.innerHTML="",this.toolbarElement=null),this.space=null}}class c1{constructor(e,t,i,n){E(this,"space",null);E(this,"container",null);E(this,"confirmDialog",null);E(this,"contextMenu",null);E(this,"edgeMenu",null);E(this,"hudManager",null);E(this,"toolbar",null);E(this,"currentState",xt.IDLE);E(this,"activePointerId",null);E(this,"draggedNode",null);E(this,"draggedNodeInitialZ",0);E(this,"dragOffset",new M);E(this,"resizedNode",null);E(this,"resizeStartPointerPos",{x:0,y:0});E(this,"resizeStartNodeSize",{width:0,height:0});E(this,"resizeNodeScreenScaleX",1);E(this,"resizeNodeScreenScaleY",1);E(this,"hoveredEdge",null);E(this,"pointerState",{down:!1,button:-1,clientX:0,clientY:0,startClientX:0,startClientY:0,isDraggingThresholdMet:!1,DRAG_THRESHOLD:5});E(this,"tempLinkLine",null);E(this,"_uiPluginCallbacks",{setSelectedNode:()=>{},setSelectedEdge:()=>{},cancelLinking:()=>{},getIsLinking:()=>!1,getLinkSourceNode:()=>null,getSelectedNodes:()=>new Set,getSelectedEdges:()=>new Set,completeLinking:()=>{}});E(this,"_onRequestConfirm",e=>{this.confirmDialog.show(e.message,e.onConfirm)});E(this,"_onCameraModeChanged",e=>{this.hudManager.updateHudCameraMode(e.newMode)});E(this,"_onSelectionChanged",e=>{const t=e.selected.size>0&&e.type==="edge"?e.selected:new Set;if(t.size===1){const i=t.values().next().value;!this.edgeMenu.edgeMenuObject||this.edgeMenu.edgeMenuObject.element.dataset.edgeId!==i.id?this.edgeMenu.show(i):this.edgeMenu.updatePosition(i)}else this.edgeMenu.hide();this.hudManager.updateHudSelectionInfo()});E(this,"_onPointerDown",e=>{var n;if(this.activePointerId!==null&&this.activePointerId!==e.pointerId)return;this.activePointerId=e.pointerId,this._updateNormalizedPointerState(e,!0);const t=this._getTargetInfo(e),i=this.space.plugins.getPlugin("CameraPlugin");if(!((i==null?void 0:i.getCameraMode())==="free"&&((n=i.getControls())!=null&&n.isPointerLocked)&&this.pointerState.button===0)){if(this.pointerState.button===1){e.preventDefault(),t.node&&this.space.emit("ui:request:autoZoomNode",t.node);return}if(this.pointerState.button===0){if(t.nodeControls){e.preventDefault(),e.stopPropagation(),this._handleNodeControlButtonClick(t.nodeControls,t.node);return}if(t.resizeHandle&&t.node instanceof gt){e.preventDefault(),e.stopPropagation(),this._transitionToState(xt.RESIZING_NODE,{node:t.node}),this._uiPluginCallbacks.setSelectedNode(t.node,!1),this.contextMenu.hide();return}if(t.node){if(e.preventDefault(),t.contentEditable||t.interactiveElement){e.stopPropagation(),this._uiPluginCallbacks.setSelectedNode(t.node,e.shiftKey),this.contextMenu.hide();return}this._transitionToState(xt.DRAGGING_NODE,{node:t.node}),this._uiPluginCallbacks.setSelectedNode(t.node,e.shiftKey),this.contextMenu.hide();return}if(t.intersectedEdge){e.preventDefault(),this._uiPluginCallbacks.setSelectedEdge(t.intersectedEdge,e.shiftKey),this.contextMenu.hide();return}this._transitionToState(xt.PANNING),this.contextMenu.hide(),e.shiftKey||this._uiPluginCallbacks.setSelectedNode(null,!1)}}});E(this,"_onPointerMove",e=>{var a,o,l,c;if(e.pointerId!==this.activePointerId&&this.activePointerId!==null)return;const t=this.pointerState.clientX,i=this.pointerState.clientY;this._updateNormalizedPointerState(e);const n=this.pointerState.clientX-t,s=this.pointerState.clientY-i;switch(this.currentState){case xt.IDLE:this._handleHover(e);break;case xt.DRAGGING_NODE:if(e.preventDefault(),this.draggedNode){let u=this.draggedNodeInitialZ;e.altKey&&(u-=s*1,this.draggedNodeInitialZ=u);const f=this.space.screenToWorld(this.pointerState.clientX,this.pointerState.clientY,u);if(f){const m=f.clone().sub(this.dragOffset);m.z=u;const v=m.clone().sub(this.draggedNode.position),g=this._uiPluginCallbacks.getSelectedNodes();(g==null?void 0:g.size)>0&&g.has(this.draggedNode)?g.forEach(p=>{if(p===this.draggedNode)p.drag(m);else{const x=p.position.clone().add(v);p.drag(x)}}):this.draggedNode.drag(m),this.space.emit("graph:node:dragged",{node:this.draggedNode,position:m})}}break;case xt.RESIZING_NODE:if(e.preventDefault(),this.resizedNode){const u=this.pointerState.clientX-this.resizeStartPointerPos.x,f=this.pointerState.clientY-this.resizeStartPointerPos.y,m=u/(this.resizeNodeScreenScaleX||1),v=f/(this.resizeNodeScreenScaleY||1),g=this.resizeStartNodeSize.width+m,p=this.resizeStartNodeSize.height+v;this.resizedNode.resize(Math.max(gt.MIN_SIZE.width,g),Math.max(gt.MIN_SIZE.height,p)),this.space.emit("graph:node:resized",{node:this.resizedNode,size:{...this.resizedNode.size}})}break;case xt.PANNING:e.preventDefault(),(a=this.space.plugins.getPlugin("CameraPlugin"))==null||a.pan(n,s);break;case xt.LINKING_NODE:e.preventDefault(),this._updateTempLinkLine(this.pointerState.clientX,this.pointerState.clientY);const h=this._getTargetInfo(e);_u(".node-common.linking-target").forEach(u=>u.classList.remove("linking-target"));const d=((o=h.node)==null?void 0:o.htmlElement)??((c=(l=h.node)==null?void 0:l.labelObject)==null?void 0:c.element);h.node&&h.node!==this._uiPluginCallbacks.getLinkSourceNode()&&d&&d.classList.add("linking-target");break}});E(this,"_onPointerUp",e=>{var i;if(e.pointerId!==this.activePointerId)return;this._updateNormalizedPointerState(e,!1);const t=this.currentState;if(!this.pointerState.isDraggingThresholdMet&&e.button===0){const n=this._getTargetInfo(e);n.node instanceof gt&&n.node.data.editable&&((i=n.element)==null||i.closest(".node-content"),n.node.htmlElement.querySelector(".node-content"))}t===xt.LINKING_NODE&&e.button===0&&this._uiPluginCallbacks.completeLinking(this.pointerState.clientX,this.pointerState.clientY),this._transitionToState(xt.IDLE),this.activePointerId=null});E(this,"_onContextMenu",e=>{e.preventDefault(),this._updateNormalizedPointerState(e),this.contextMenu.hide();const t=this._getTargetInfo(e);this.contextMenu.show(e.clientX,e.clientY,{node:t.node,intersectedEdge:t.intersectedEdge,shiftKey:e.shiftKey})});E(this,"_onDocumentClick",e=>{var t,i,n,s;if(!(this.contextMenu.contextMenuElement.contains(e.target)||this.contextMenu.contextMenuElement.style.display==="none")&&!((i=(t=this.edgeMenu.edgeMenuObject)==null?void 0:t.element)!=null&&i.contains(e.target))&&!this.confirmDialog.confirmDialogElement.contains(e.target)&&!((n=this.hudManager.keyboardShortcutsDialog.keyboardShortcutsDialogElement)!=null&&n.contains(e.target))&&!((s=this.hudManager.layoutSettingsDialog.layoutSettingsDialogElement)!=null&&s.contains(e.target))&&(this.contextMenu.hide(),this.edgeMenu.edgeMenuObject)){const a=this._getTargetInfo(e),o=this._uiPluginCallbacks.getSelectedEdges();a.intersectedEdge&&(o==null?void 0:o.has(a.intersectedEdge))||this._uiPluginCallbacks.setSelectedEdge(null,!1)}});E(this,"_onKeyDown",e=>{var c,h,d;const t=document.activeElement,i=t&&(t.tagName==="INPUT"||t.tagName==="TEXTAREA"||t.isContentEditable);if(i&&e.key!=="Escape")return;const n=this._uiPluginCallbacks.getSelectedNodes(),s=this._uiPluginCallbacks.getSelectedEdges(),a=n.size>0?n.values().next().value:null,o=s.size>0?s.values().next().value:null;let l=!1;switch(e.key){case"Delete":case"Backspace":if(a){const f=n.size>1?`Delete ${n.size} selected nodes?`:`Delete node "${a.id.substring(0,10)}..."?`;this.space.emit("ui:request:confirm",{message:f,onConfirm:()=>n.forEach(m=>this.space.emit("ui:request:removeNode",m.id))}),l=!0}else if(o){const f=s.size>1?`Delete ${s.size} selected edges?`:`Delete edge "${o.id.substring(0,10)}..."?`;this.space.emit("ui:request:confirm",{message:f,onConfirm:()=>s.forEach(m=>this.space.emit("ui:request:removeEdge",m.id))}),l=!0}break;case"Escape":this._uiPluginCallbacks.getIsLinking()?(this._uiPluginCallbacks.cancelLinking(),l=!0):this.hudManager.isLayoutSettingsDialogVisible()?(this.hudManager.layoutSettingsDialog.hide(),l=!0):this.hudManager.isKeyboardShortcutsDialogVisible()?(this.hudManager.keyboardShortcutsDialog.hide(),l=!0):this.contextMenu.contextMenuElement.style.display==="block"?(this.contextMenu.hide(),l=!0):this.confirmDialog.confirmDialogElement.style.display==="block"?(this.confirmDialog.hide(),l=!0):this.edgeMenu.edgeMenuObject?(this._uiPluginCallbacks.setSelectedEdge(null,!1),l=!0):(n.size>0||s.size>0)&&(this._uiPluginCallbacks.setSelectedNode(null,!1),l=!0);const u=this.space.plugins.getPlugin("CameraPlugin");(u==null?void 0:u.getCameraMode())==="free"&&((c=u.getControls())!=null&&c.isPointerLocked)&&(u.exitPointerLock(),l=!0);break;case"Enter":a instanceof gt&&a.data.editable&&!i&&((d=(h=a.htmlElement)==null?void 0:h.querySelector(".node-content"))==null||d.focus(),l=!0);break;case"+":case"=":if(a instanceof gt){const f=e.key==="+"||e.key==="="?1.15:1.2;e.ctrlKey||e.metaKey?this.space.emit("ui:request:adjustNodeSize",a,f):this.space.emit("ui:request:adjustContentScale",a,f),l=!0}break;case"-":case"_":if(a instanceof gt){const f=e.key==="-"||e.key==="_"?.8695652173913044:.8333333333333334;e.ctrlKey||e.metaKey?this.space.emit("ui:request:adjustNodeSize",a,f):this.space.emit("ui:request:adjustContentScale",a,f),l=!0}break;case" ":if(a)this.space.emit("ui:request:focusOnNode",a,.5,!0),l=!0;else if(o){const f=new M().lerpVectors(o.source.position,o.target.position,.5),m=o.source.position.distanceTo(o.target.position),v=this.space.plugins.getPlugin("CameraPlugin");v==null||v.pushState(),v==null||v.moveTo(f.x,f.y,f.z+m*.6+100,.5,f),l=!0}else this.space.emit("ui:request:centerView"),l=!0;break}l&&(e.preventDefault(),e.stopPropagation())});E(this,"_onWheel",e=>{var i,n;const t=this._getTargetInfo(e);if(!((i=t.element)!=null&&i.closest(".node-content")&&t.element.scrollHeight>t.element.clientHeight)&&!((n=t.element)!=null&&n.closest('.edge-menu-frame input[type="range"]')))if((e.ctrlKey||e.metaKey)&&t.node instanceof gt){e.preventDefault(),e.stopPropagation();const s=e.deltaY<0?1.1:1/1.1;this.space.emit("ui:request:adjustContentScale",t.node,s)}else e.preventDefault(),this.space.emit("ui:request:zoomCamera",e.deltaY)});E(this,"_onLinkingStarted",e=>{this._transitionToState(xt.LINKING_NODE,{sourceNode:e.sourceNode})});E(this,"_onLinkingCancelled",e=>{this._removeTempLinkLine(),this.currentState===xt.LINKING_NODE&&this._transitionToState(xt.IDLE)});E(this,"_onLinkingCompleted",e=>{this._removeTempLinkLine(),this.currentState===xt.LINKING_NODE&&this._transitionToState(xt.IDLE)});if(!e||!t||!i)throw new Error("UIManager requires SpaceGraph instance and UI elements.");this.space=e,this.container=e.container,this._uiPluginCallbacks={...this._uiPluginCallbacks,...n},this.confirmDialog=new t1(this.space,i),this.contextMenu=new i1(this.space,t,this._uiPluginCallbacks),this.edgeMenu=new n1(this.space,this._uiPluginCallbacks),this.hudManager=new o1(this.space,this.container,this._uiPluginCallbacks),this.toolbar=new l1(this.space,ue("#toolbar")),this._applySavedTheme(),this._bindEvents(),this._subscribeToSpaceGraphEvents()}_applySavedTheme(){localStorage.getItem("spacegraph-theme")==="light"?document.body.classList.add("theme-light"):document.body.classList.remove("theme-light")}_bindEvents(){const e={passive:!1};this.container.addEventListener("pointerdown",this._onPointerDown,e),window.addEventListener("pointermove",this._onPointerMove,e),window.addEventListener("pointerup",this._onPointerUp,e),this.container.addEventListener("contextmenu",this._onContextMenu,e),document.addEventListener("click",this._onDocumentClick,!0),window.addEventListener("keydown",this._onKeyDown),this.container.addEventListener("wheel",this._onWheel,e),this.space.on("ui:request:confirm",this._onRequestConfirm)}_subscribeToSpaceGraphEvents(){this.space.on("selection:changed",this._onSelectionChanged),this.space.on("linking:started",this._onLinkingStarted),this.space.on("linking:cancelled",this._onLinkingCancelled),this.space.on("linking:succeeded",this._onLinkingCompleted),this.space.on("linking:failed",this._onLinkingCompleted),this.space.on("camera:modeChanged",this._onCameraModeChanged)}_updateNormalizedPointerState(e,t=void 0){if(this.pointerState.clientX=e.clientX,this.pointerState.clientY=e.clientY,t!==void 0&&(this.pointerState.down=t,t?(this.pointerState.button=e.button,this.pointerState.startClientX=e.clientX,this.pointerState.startClientY=e.clientY,this.pointerState.isDraggingThresholdMet=!1):this.pointerState.button=-1),this.pointerState.down&&!this.pointerState.isDraggingThresholdMet){const i=this.pointerState.clientX-this.pointerState.startClientX,n=this.pointerState.clientY-this.pointerState.startClientY;Math.sqrt(i*i+n*n)>this.pointerState.DRAG_THRESHOLD&&(this.pointerState.isDraggingThresholdMet=!0)}}_transitionToState(e,t={}){var i,n,s,a;if(this.currentState!==e){switch(console.log(`UIManager: Exiting state: ${this.currentState}, transitioning to ${e}`),this.currentState){case xt.DRAGGING_NODE:(i=this.draggedNode)==null||i.endDrag(),this.container.style.cursor="grab",this.draggedNode=null;break;case xt.RESIZING_NODE:(n=this.resizedNode)==null||n.endResize(),this.container.style.cursor="grab",this.resizedNode=null;break;case xt.PANNING:(s=this.space.plugins.getPlugin("CameraPlugin"))==null||s.endPan(),this.container.style.cursor="grab";break;case xt.LINKING_NODE:this.container.style.cursor="grab",_u(".node-common.linking-target").forEach(o=>o.classList.remove("linking-target"));break}switch(this.currentState=e,e){case xt.DRAGGING_NODE:this.draggedNode=t.node,this.draggedNodeInitialZ=this.draggedNode.position.z,this.draggedNode.startDrag();const o=this.space.screenToWorld(this.pointerState.clientX,this.pointerState.clientY,this.draggedNodeInitialZ);this.dragOffset=o?o.sub(this.draggedNode.position):new M,this.container.style.cursor="grabbing";break;case xt.RESIZING_NODE:this.resizedNode=t.node,this.resizedNode.startResize(),this.resizeStartNodeSize={...this.resizedNode.size},this.resizeStartPointerPos={x:this.pointerState.clientX,y:this.pointerState.clientY},this.container.style.cursor="nwse-resize";const l=this.resizedNode,c=this.space.plugins.getPlugin("CameraPlugin"),h=c==null?void 0:c.getCameraInstance();if(l&&h&&l.cssObject){const d=new M(0,0,0),u=new M(1,0,0),f=new M(0,1,0),m=d.clone().applyMatrix4(l.cssObject.matrixWorld),v=u.clone().applyMatrix4(l.cssObject.matrixWorld),g=f.clone().applyMatrix4(l.cssObject.matrixWorld),p=m.clone().project(h),x=v.clone().project(h),_=g.clone().project(h),y=window.innerWidth/2,w=window.innerHeight/2,C={x:p.x*y+y,y:-p.y*w+w},A={x:x.x*y+y,y:-x.y*w+w},L={x:_.x*y+w,y:-_.y*w+w};this.resizeNodeScreenScaleX=Math.abs(A.x-C.x),this.resizeNodeScreenScaleY=Math.abs(L.y-C.y),this.resizeNodeScreenScaleX<.001&&(this.resizeNodeScreenScaleX=.001),this.resizeNodeScreenScaleY<.001&&(this.resizeNodeScreenScaleY=.001)}else this.resizeNodeScreenScaleX=1,this.resizeNodeScreenScaleY=1;break;case xt.PANNING:(a=this.space.plugins.getPlugin("CameraPlugin"))==null||a.startPan(this.pointerState.clientX,this.pointerState.clientY),this.container.style.cursor="grabbing";break;case xt.LINKING_NODE:this.container.style.cursor="crosshair",this._createTempLinkLine(t.sourceNode);break;case xt.IDLE:this.container.style.cursor="grab";break}this.space.emit("interaction:stateChanged",{newState:e,oldState:this.currentState,data:t})}}_handleNodeControlButtonClick(e,t){if(!(t instanceof gt))return;const i=[...e.classList].find(s=>s.startsWith("node-")&&!s.includes("button")),n=i==null?void 0:i.substring(5);switch(n){case"delete":this.space.emit("ui:request:confirm",{message:`Delete node "${t.id.substring(0,10)}..."?`,onConfirm:()=>this.space.emit("ui:request:removeNode",t.id)});break;case"content-zoom-in":this.space.emit("ui:request:adjustContentScale",t,1.15);break;case"content-zoom-out":this.space.emit("ui:request:adjustContentScale",t,1/1.15);break;case"grow":this.space.emit("ui:request:adjustNodeSize",t,1.2);break;case"shrink":this.space.emit("ui:request:adjustNodeSize",t,1/1.2);break;default:console.warn("UIManager: Unknown node control action:",n)}}_getTargetInfo(e){var d;const t=document.elementFromPoint(e.clientX,e.clientY),i=t==null?void 0:t.closest(".node-common"),n=t==null?void 0:t.closest(".resize-handle"),s=t==null?void 0:t.closest(".node-controls button"),a=t==null?void 0:t.closest('[contenteditable="true"]'),o=t==null?void 0:t.closest("button, input, textarea, select, a, .clickable");let l=i?(d=this.space.plugins.getPlugin("NodePlugin"))==null?void 0:d.getNodeById(i.dataset.nodeId):null,c=null;if(!n&&!s&&!a&&!o){const u=this.space.intersectedObjects(e.clientX,e.clientY);u&&(u.node&&!l&&(l=u.node),c=u.edge||null)}return{element:t,nodeElement:i,resizeHandle:n,nodeControls:s,contentEditable:a,interactiveElement:o,node:l,intersectedEdge:c}}_handleHover(e){if(this.pointerState.down||this.currentState!==xt.IDLE){this.hoveredEdge&&(this._uiPluginCallbacks.getSelectedEdges().has(this.hoveredEdge)||this.hoveredEdge.setHighlight(!1),this.hoveredEdge=null);return}const i=this._getTargetInfo(e).intersectedEdge;if(this.hoveredEdge!==i){const n=this._uiPluginCallbacks.getSelectedEdges();this.hoveredEdge&&!n.has(this.hoveredEdge)&&this.hoveredEdge.setHighlight(!1),this.hoveredEdge=i,this.hoveredEdge&&!n.has(this.hoveredEdge)&&this.hoveredEdge.setHighlight(!0)}}_createTempLinkLine(e){var s,a;this._removeTempLinkLine();const t=new py({color:16755200,linewidth:2,dashSize:8,gapSize:4,transparent:!0,opacity:.9,depthTest:!1}),i=[e.position.clone(),e.position.clone()],n=new At().setFromPoints(i);this.tempLinkLine=new ea(n,t),this.tempLinkLine.computeLineDistances(),this.tempLinkLine.renderOrder=1,(a=(s=this.space.plugins.getPlugin("RenderingPlugin"))==null?void 0:s.getWebGLScene())==null||a.add(this.tempLinkLine)}_updateTempLinkLine(e,t){if(!this.tempLinkLine||!this._uiPluginCallbacks.getIsLinking()||!this._uiPluginCallbacks.getLinkSourceNode())return;const i=this._uiPluginCallbacks.getLinkSourceNode(),n=this.space.screenToWorld(e,t,i.position.z);if(n){const s=this.tempLinkLine.geometry.attributes.position;s.setXYZ(1,n.x,n.y,n.z),s.needsUpdate=!0,this.tempLinkLine.geometry.computeBoundingSphere(),this.tempLinkLine.computeLineDistances()}}_removeTempLinkLine(){var e,t,i,n;this.tempLinkLine&&((e=this.tempLinkLine.geometry)==null||e.dispose(),(t=this.tempLinkLine.material)==null||t.dispose(),(n=(i=this.space.plugins.getPlugin("RenderingPlugin"))==null?void 0:i.getWebGLScene())==null||n.remove(this.tempLinkLine),this.tempLinkLine=null)}dispose(){const e={passive:!1};this.container.removeEventListener("pointerdown",this._onPointerDown,e),window.removeEventListener("pointermove",this._onPointerMove,e),window.removeEventListener("pointerup",this._onPointerUp,e),this.container.removeEventListener("contextmenu",this._onContextMenu,e),document.removeEventListener("click",this._onDocumentClick,!0),window.removeEventListener("keydown",this._onKeyDown),this.container.removeEventListener("wheel",this._onWheel,e),this.space.off("ui:request:confirm",this._onRequestConfirm),this.space.off("selection:changed",this._onSelectionChanged),this.space.off("linking:started",this._onLinkingStarted),this.space.off("linking:cancelled",this._onLinkingCancelled),this.space.off("linking:succeeded",this._onLinkingCompleted),this.space.off("linking:failed",this._onLinkingCompleted),this.space.off("camera:modeChanged",this._onCameraModeChanged),this._removeTempLinkLine(),this.confirmDialog.dispose(),this.contextMenu.dispose(),this.edgeMenu.dispose(),this.hudManager.dispose(),this.toolbar.dispose(),this.space=null,this.container=null,this.draggedNode=null,this.resizedNode=null,this.hoveredEdge=null,this._uiPluginCallbacks=null,console.log("UIManager disposed.")}}class h1 extends mn{constructor(t,i,n,s){super(t,i);E(this,"uiManager",null);E(this,"selectedNodes",new Set);E(this,"selectedEdges",new Set);E(this,"linkSourceNode",null);E(this,"isLinking",!1);E(this,"_onNodeRemoved",(t,i)=>{var n;i&&this.selectedNodes.delete(i),((n=this.linkSourceNode)==null?void 0:n.id)===t&&this.cancelLinking(),this._emitSelectionChange()});E(this,"_onEdgeRemoved",(t,i)=>{i&&this.selectedEdges.delete(i),this._emitSelectionChange()});E(this,"startLinking",t=>{t&&(this.linkSourceNode=t,this.isLinking=!0,this.space.emit("linking:started",{sourceNode:t}))});E(this,"cancelLinking",()=>{this.linkSourceNode=null,this.isLinking=!1,this.space.emit("linking:cancelled")});E(this,"completeLinking",(t,i)=>{if(!this.isLinking||!this.linkSourceNode)return;const n=this.space.intersectedObjects(t,i),s=n==null?void 0:n.node;s&&s!==this.linkSourceNode?(this.space.emit("ui:request:addEdge",this.linkSourceNode,s),this.space.emit("linking:succeeded",{source:this.linkSourceNode,target:s})):this.space.emit("linking:failed"),this.cancelLinking()});E(this,"getIsLinking",()=>this.isLinking);E(this,"getLinkSourceNode",()=>this.linkSourceNode);this.uiManager=new c1(t,n,s,{setSelectedNode:this.setSelectedNode.bind(this),setSelectedEdge:this.setSelectedEdge.bind(this),cancelLinking:this.cancelLinking.bind(this),getIsLinking:this.getIsLinking.bind(this),getLinkSourceNode:this.getLinkSourceNode.bind(this),getSelectedNodes:this.getSelectedNodes.bind(this),getSelectedEdges:this.getSelectedEdges.bind(this),completeLinking:this.completeLinking.bind(this)})}getName(){return"UIPlugin"}init(){super.init(),this._subscribeToEvents()}_subscribeToEvents(){this.space.on("node:removed",this._onNodeRemoved),this.space.on("edge:removed",this._onEdgeRemoved),this.space.on("ui:request:startLinking",this.startLinking)}setSelectedNode(t,i=!1){i||(this.selectedNodes.forEach(n=>n.setSelectedStyle(!1)),this.selectedNodes.clear(),this.selectedEdges.forEach(n=>n.setHighlight(!1)),this.selectedEdges.clear()),t?this.selectedNodes.has(t)?(this.selectedNodes.delete(t),t.setSelectedStyle(!1)):(this.selectedNodes.add(t),t.setSelectedStyle(!0)):i||(this.selectedNodes.forEach(n=>n.setSelectedStyle(!1)),this.selectedNodes.clear()),this._emitSelectionChange()}setSelectedEdge(t,i=!1){i||(this.selectedEdges.forEach(n=>n.setHighlight(!1)),this.selectedEdges.clear(),this.selectedNodes.forEach(n=>n.setSelectedStyle(!1)),this.selectedNodes.clear()),t?this.selectedEdges.has(t)?(this.selectedEdges.delete(t),t.setHighlight(!1)):(this.selectedEdges.add(t),t.setHighlight(!0)):i||(this.selectedEdges.forEach(n=>n.setHighlight(!1)),this.selectedEdges.clear()),this._emitSelectionChange()}_emitSelectionChange(){const t=new Set([...this.selectedNodes,...this.selectedEdges]),i=this.selectedNodes.size>0?"node":this.selectedEdges.size>0?"edge":"none";this.space.emit("selection:changed",{selected:t,type:i})}getSelectedNode(){return this.selectedNodes.values().next().value||null}getSelectedNodes(){return this.selectedNodes}getSelectedEdge(){return this.selectedEdges.values().next().value||null}getSelectedEdges(){return this.selectedEdges}update(){var t,i;if(this.selectedEdges.size===1){const n=this.selectedEdges.values().next().value;(i=(t=this.uiManager)==null?void 0:t.edgeMenu)==null||i.updatePosition(n)}}dispose(){var t;super.dispose(),this.space.off("node:removed",this._onNodeRemoved),this.space.off("edge:removed",this._onEdgeRemoved),this.space.off("ui:request:startLinking",this.startLinking),(t=this.uiManager)==null||t.dispose(),this.uiManager=null,this.selectedNodes.clear(),this.selectedEdges.clear(),this.linkSourceNode=null}}const kp=200,Op=10,d1=2236979,u1=.7,Jc=43775,f1=16755200;class p1 extends mn{constructor(t,i){super(t,i);E(this,"minimapCamera",null);E(this,"nodeProxies",new Map);E(this,"frustumHelper",null);E(this,"minimapScene",null);E(this,"currentViewport",new Ke);E(this,"currentScissor",new Ke);this.minimapScene=new za}getName(){return"MinimapPlugin"}init(){var t;super.init(),this._setupMinimapCamera(),this._setupFrustumHelper(),this.space.on("node:added",this._addNodeProxy.bind(this)),this.space.on("node:removed",this._removeNodeProxy.bind(this)),(t=this.pluginManager.getPlugin("NodePlugin"))==null||t.getNodes().forEach(i=>this._addNodeProxy(i))}_setupMinimapCamera(){this.minimapCamera=new ho(-2e3*1/2,2e3*1/2,2e3/2,-2e3/2,1,1e4),this.minimapCamera.position.set(0,0,1e3),this.minimapCamera.lookAt(0,0,0),this.minimapScene.add(this.minimapCamera)}_setupFrustumHelper(){var i;if((i=this.pluginManager.getPlugin("CameraPlugin"))==null?void 0:i.getCameraInstance()){const n=new At,s=new oo({color:f1,linewidth:2});this.frustumHelper=new om(n,s),this.frustumHelper.frustumCulled=!1,this.minimapScene.add(this.frustumHelper)}}_addNodeProxy(t){if(this.nodeProxies.has(t.id))return;const i=new ys(1,1),n=new di({color:t.data.color||Jc,side:$t}),s=new st(i,n);s.userData.nodeId=t.id,this.nodeProxies.set(t.id,s),this.minimapScene.add(s)}_removeNodeProxy(t){const i=typeof t=="string"?t:t.id,n=this.nodeProxies.get(i);n&&(this.minimapScene.remove(n),n.geometry.dispose(),n.material.dispose(),this.nodeProxies.delete(i))}_updateNodeProxies(){const t=this.pluginManager.getPlugin("NodePlugin");t&&t.getNodes().forEach(i=>{const n=this.nodeProxies.get(i.id);if(n){n.position.copy(i.position);const s=Math.max(20,i.getBoundingSphereRadius()*.5);n.scale.set(s,s,1),n.material.color.getHex()!==(i.data.color||Jc)&&n.material.color.set(i.data.color||Jc)}})}_updateFrustumHelper(){var f;const t=(f=this.pluginManager.getPlugin("CameraPlugin"))==null?void 0:f.getCameraInstance();if(!this.frustumHelper||!t)return;t.updateMatrixWorld(),t.updateProjectionMatrix();const i=new M;t.getWorldPosition(i);const n=new M;t.getWorldDirection(n),n.multiplyScalar(-i.z/n.z).add(i);const s=t.aspect,a=t.fov*Qr.DEG2RAD,o=2*Math.tan(a/2)*Math.abs(i.z-n.z),c=o*s/2,h=o/2,d=[n.x-c,n.y+h,0,n.x+c,n.y+h,0,n.x+c,n.y-h,0,n.x-c,n.y-h,0],u=new Float32Array([d[0],d[1],d[2],d[3],d[4],d[5],d[3],d[4],d[5],d[6],d[7],d[8],d[6],d[7],d[8],d[9],d[10],d[11],d[9],d[10],d[11],d[0],d[1],d[2]]);this.frustumHelper.geometry.setAttribute("position",new Ct(u,3)),this.frustumHelper.geometry.attributes.position.needsUpdate=!0,this.frustumHelper.geometry.computeBoundingSphere()}render(t){if(!this.minimapCamera)return;this._updateNodeProxies(),this._updateFrustumHelper(),t.getSize(this.currentViewport);const i=t.getClearColor(new fe),n=t.getClearAlpha(),s=t.getRenderTarget(),a=kp,o=kp,l=this.currentViewport.x-a-Op,c=Op;t.setViewport(l,c,a,o),t.setScissor(l,c,a,o),t.setScissorTest(!0),t.setClearColor(d1,u1),t.clearDepth(),t.render(this.minimapScene,this.minimapCamera),t.setViewport(0,0,this.currentViewport.x,this.currentViewport.y),t.setScissor(0,0,this.currentViewport.x,this.currentViewport.y),t.setScissorTest(!1),t.setClearColor(i,n),s&&t.setRenderTarget(s)}dispose(){super.dispose(),this.space.off("node:added",this._addNodeProxy.bind(this)),this.space.off("node:removed",this._removeNodeProxy.bind(this)),this.nodeProxies.forEach(t=>{this.minimapScene.remove(t),t.geometry.dispose(),t.material.dispose()}),this.nodeProxies.clear(),this.frustumHelper&&(this.minimapScene.remove(this.frustumHelper),this.frustumHelper.geometry.dispose(),this.frustumHelper.material.dispose()),this.minimapScene.clear()}}class m1 extends mn{constructor(e,t){super(e,t)}getName(){return"DataPlugin"}init(){super.init()}exportGraphToJSON(e={prettyPrint:!1,includeCamera:!1}){var a;const t=this.pluginManager.getPlugin("NodePlugin"),i=this.pluginManager.getPlugin("EdgePlugin"),n=this.pluginManager.getPlugin("CameraPlugin");if(!t||!i)return console.error("DataPlugin: Node/Edge Plugin not available."),null;const s={nodes:[...t.getNodes().values()].map(o=>({id:o.id,type:o.data.type||"unknown",position:{x:o.position.x,y:o.position.y,z:o.position.z},mass:o.mass,isPinned:o.isPinned||!1,data:{...o.data}})),edges:[...i.getEdges().values()].map(o=>({sourceId:o.source.id,targetId:o.target.id,data:{...o.data}}))};if(e.includeCamera&&n){const o=n.getControls();o&&(s.camera={position:{x:o.targetPosition.x,y:o.targetPosition.y,z:o.targetPosition.z},lookAt:{x:o.targetLookAt.x,y:o.targetLookAt.y,z:o.targetLookAt.z},mode:((a=o.getCameraMode)==null?void 0:a.call(o))||"orbit"})}try{return JSON.stringify(s,null,e.prettyPrint?2:void 0)}catch(o){return console.error("DataPlugin: Error serializing graph:",o),null}}async importGraphFromJSON(e,t={clearExistingGraph:!0}){var h,d;const i=this.pluginManager.getPlugin("NodePlugin"),n=this.pluginManager.getPlugin("EdgePlugin"),s=this.pluginManager.getPlugin("LayoutPlugin"),a=this.pluginManager.getPlugin("CameraPlugin");if(!i||!n||!s)return console.error("DataPlugin: Required plugins (Node, Edge, Layout) not available."),!1;let o;try{if(o=typeof e=="string"?JSON.parse(e):e,!(o!=null&&o.nodes)||!Array.isArray(o.nodes)||!o.edges||!Array.isArray(o.edges))throw new Error("Invalid graph data structure.")}catch(u){return console.error("DataPlugin: Error parsing JSON:",u),!1}t.clearExistingGraph&&[...i.getNodes().keys()].forEach(u=>i.removeNode(u));const l=new Map;for(const u of o.nodes){const f=i.createAndAddNode({id:u.id,type:u.type,position:u.position,data:u.data,mass:u.mass});f?(u.isPinned&&(f.isPinned=!0),l.set(f.id,f)):console.warn("DataPlugin: Failed to create node:",u)}const c=(h=s.layoutManager)==null?void 0:h.getActiveLayout();c!=null&&c.setPinState&&o.nodes.forEach(u=>{if(u.isPinned){const f=l.get(u.id);f&&c.setPinState(f,!0)}});for(const u of o.edges){const f=l.get(u.sourceId),m=l.get(u.targetId);f&&m?n.addEdge(f,m,u.data):console.warn("DataPlugin: Missing source/target node for edge:",u)}if(o.camera&&a){const u=a.getControls(),f=o.camera;u&&f.position&&f.lookAt&&(u.moveTo(f.position.x,f.position.y,f.position.z,.5,f.lookAt),(d=u.setCameraMode)==null||d.call(u,f.mode))}return s.kick(),this.space.emit("data:imported"),!0}dispose(){super.dispose()}}class g1{constructor(e){this.space=e,this.cameraPlugin=null,this.currentZoomLevel=0,this.targetZoomLevel=0,this.zoomTransitionTween=null,this.lodLevels=new Map,this.zoomThresholds=[],this.contentAdapters=new Map,this.zoomStep=.5,this.maxZoomIn=20,this.maxZoomOut=-10,this.transitionDuration=.8,this.lodUpdateThreshold=.1,this.memoryBudget=100,this.isTransitioning=!1,this._initializeLODLevels(),this._bindEvents()}_initializeLODLevels(){[{zoomLevel:-5,name:"overview",nodeDetailLevel:"minimal",edgeDetailLevel:"none",labelsVisible:!1,textScale:.5,geometryQuality:"low"},{zoomLevel:-2,name:"distant",nodeDetailLevel:"low",edgeDetailLevel:"low",labelsVisible:!1,textScale:.7,geometryQuality:"low"},{zoomLevel:0,name:"normal",nodeDetailLevel:"medium",edgeDetailLevel:"medium",labelsVisible:!0,textScale:1,geometryQuality:"medium"},{zoomLevel:3,name:"detailed",nodeDetailLevel:"high",edgeDetailLevel:"high",labelsVisible:!0,textScale:1.2,geometryQuality:"high"},{zoomLevel:6,name:"micro",nodeDetailLevel:"ultra",edgeDetailLevel:"ultra",labelsVisible:!0,textScale:1.5,geometryQuality:"ultra"}].forEach(t=>{this.lodLevels.set(t.zoomLevel,t),this.zoomThresholds.push(t.zoomLevel)}),this.zoomThresholds.sort((t,i)=>t-i)}_bindEvents(){this.space.on("ui:request:zoomCamera",this._onZoomRequest.bind(this)),this.space.on("ui:request:setZoomLevel",this._onSetZoomLevel.bind(this)),this.space.on("camera:changed",this._onCameraChanged.bind(this))}init(e){this.cameraPlugin=e,this._updateLOD()}_onZoomRequest(e){const t=e>0?-1:1,i=Math.max(this.maxZoomOut,Math.min(this.maxZoomIn,this.currentZoomLevel+t*this.zoomStep));this.zoomToLevel(i)}_onSetZoomLevel(e){this.zoomToLevel(e)}_onCameraChanged(e){!this.isTransitioning&&e.source!=="fractal-zoom"&&this._calculateZoomLevelFromCamera()}_calculateZoomLevelFromCamera(){if(!this.cameraPlugin)return;const e=this.cameraPlugin.getCameraInstance();if(!e)return;const t=e.position.distanceTo(new M(0,0,0)),n=-Math.log2(t/1e3);Math.abs(n-this.currentZoomLevel)>this.lodUpdateThreshold&&(this.currentZoomLevel=n,this._updateLOD())}zoomToLevel(e,t=this.transitionDuration){if(e=Math.max(this.maxZoomOut,Math.min(this.maxZoomIn,e)),Math.abs(e-this.currentZoomLevel)<.01)return;const i=this.currentZoomLevel;this.targetZoomLevel=e,this.isTransitioning=!0,this.zoomTransitionTween&&this.zoomTransitionTween.kill(),this.zoomTransitionTween=Ut.to(this,{currentZoomLevel:e,duration:t,ease:"power2.inOut",onUpdate:()=>{this._updateCameraForZoomLevel(),this._updateLOD()},onComplete:()=>{this.isTransitioning=!1,this.space.emit("fractal-zoom:levelChanged",{oldLevel:i,newLevel:e,lodConfig:this.getCurrentLODConfig()})}})}_updateCameraForZoomLevel(){if(!this.cameraPlugin)return;const e=this.cameraPlugin.getCameraInstance();if(!e)return;const i=1e3/Math.pow(2,this.currentZoomLevel),s=e.position.clone().normalize().multiplyScalar(i);e.position.copy(s),this.space.emit("camera:changed",{source:"fractal-zoom"})}_updateLOD(){const e=this.getCurrentLODConfig();this.space.getNodes().forEach(t=>{this._updateNodeLOD(t,e)}),this.space.getEdges().forEach(t=>{this._updateEdgeLOD(t,e)}),this.space.emit("fractal-zoom:lodUpdated",{lodConfig:e,zoomLevel:this.currentZoomLevel})}getCurrentLODConfig(){let e=this.lodLevels.get(0);for(let t=this.zoomThresholds.length-1;t>=0;t--){const i=this.zoomThresholds[t];if(this.currentZoomLevel>=i){e=this.lodLevels.get(i);break}}return e}_updateNodeLOD(e,t){if(!(!e||!t)){if(e.object3d){const i=this._calculateScaleMultiplier(t);e.object3d.scale.setScalar(i),e.setDetailLevel&&e.setDetailLevel(t.nodeDetailLevel)}if(e.htmlElement&&t.textScale!==void 0){const i=e.htmlElement.querySelector(".node-content");i&&(i.style.transform=`scale(${t.textScale})`,i.style.transformOrigin="top left")}e.labelObject&&(e.labelObject.visible=t.labelsVisible)}}_updateEdgeLOD(e,t){if(!(!e||!t)){if(e.line){const i=e.line.material,n=this._getLineWidthMultiplier(t.edgeDetailLevel);i.linewidth!==void 0&&(i.linewidth=n);const s=this._getOpacityMultiplier(t.edgeDetailLevel);i.opacity=Math.min(1,i.opacity*s),e.line.visible=t.edgeDetailLevel!=="none"}e.labelObject&&(e.labelObject.visible=t.labelsVisible&&t.edgeDetailLevel!=="none")}}_calculateScaleMultiplier(e){const i=Math.pow(1.1,this.currentZoomLevel*.5);let n=1;switch(e.nodeDetailLevel){case"minimal":n=.5;break;case"low":n=.7;break;case"medium":n=1;break;case"high":n=1.3;break;case"ultra":n=1.6;break}return 1*i*n}_getLineWidthMultiplier(e){switch(e){case"none":return 0;case"low":return .5;case"medium":return 1;case"high":return 1.5;case"ultra":return 2;default:return 1}}_getOpacityMultiplier(e){switch(e){case"none":return 0;case"low":return .3;case"medium":return .7;case"high":return 1;case"ultra":return 1;default:return .7}}addLODLevel(e,t){this.lodLevels.set(e,t),this.zoomThresholds.includes(e)||(this.zoomThresholds.push(e),this.zoomThresholds.sort((i,n)=>i-n))}registerContentAdapter(e,t){this.contentAdapters.set(e,t)}_applyContentAdapters(){const e=this.getCurrentLODConfig();this.contentAdapters.forEach((t,i)=>{const n=this.space.getNodeById(i);n&&t.adapt&&t.adapt(n,e,this.currentZoomLevel)})}getZoomLevel(){return this.currentZoomLevel}getZoomRange(){return{min:this.maxZoomOut,max:this.maxZoomIn,current:this.currentZoomLevel,target:this.targetZoomLevel}}resetZoom(e=this.transitionDuration){this.zoomToLevel(0,e)}zoomIn(){this.zoomToLevel(this.currentZoomLevel+this.zoomStep)}zoomOut(){this.zoomToLevel(this.currentZoomLevel-this.zoomStep)}isTransitioningZoom(){return this.isTransitioning}dispose(){this.zoomTransitionTween&&this.zoomTransitionTween.kill(),this.space.off("ui:request:zoomCamera",this._onZoomRequest.bind(this)),this.space.off("ui:request:setZoomLevel",this._onSetZoomLevel.bind(this)),this.space.off("camera:changed",this._onCameraChanged.bind(this)),this.lodLevels.clear(),this.contentAdapters.clear(),this.space=null,this.cameraPlugin=null}}class Xl{constructor(e,t={}){this.nodeId=e,this.config={zoomContent:new Map,transitionDuration:.3,fadeTransition:!0,preloadContent:!0,maxCachedLevels:5,...t},this.contentCache=new Map,this.currentContent=null,this.lastZoomLevel=0}defineContent(e,t,i){const n=`${e}-${t}`;this.config.zoomContent.set(n,{minZoom:e,maxZoom:t,generator:i})}adapt(e,t,i){if(Math.abs(i-this.lastZoomLevel)<.5)return;this.lastZoomLevel=i;const n=this._findContentForZoomLevel(i);n&&this._applyContent(e,n,t,i)}_findContentForZoomLevel(e){for(const[t,i]of this.config.zoomContent)if(e>=i.minZoom&&e<=i.maxZoom)return i;return null}_applyContent(e,t,i,n){if(!t.generator)return;const s=this._getOrGenerateContent(t,i,n);s&&s!==this.currentContent&&(this._transitionToContent(e,s),this.currentContent=s)}_getOrGenerateContent(e,t,i){const n=`${e.minZoom}-${e.maxZoom}-${i.toFixed(1)}`;if(this.contentCache.has(n))return this.contentCache.get(n);const s=e.generator(t,i);return this.contentCache.set(n,s),this.contentCache.size>this.config.maxCachedLevels&&this._cleanupCache(),s}_transitionToContent(e,t){if(!e.htmlElement)return;const i=e.htmlElement.querySelector(".node-content");i&&(this.config.fadeTransition?(i.style.transition=`opacity ${this.config.transitionDuration}s`,i.style.opacity="0",setTimeout(()=>{typeof t=="string"?i.innerHTML=t:t.innerHTML?i.innerHTML=t.innerHTML:t.textContent&&(i.textContent=t.textContent),i.style.opacity="1"},this.config.transitionDuration*1e3)):typeof t=="string"?i.innerHTML=t:t.innerHTML?i.innerHTML=t.innerHTML:t.textContent&&(i.textContent=t.textContent))}_cleanupCache(){const e=Array.from(this.contentCache.entries());e.slice(0,e.length-this.config.maxCachedLevels).forEach(([i])=>this.contentCache.delete(i))}clearCache(){this.contentCache.clear()}dispose(){this.contentCache.clear(),this.currentContent=null}}class v1 extends Xl{constructor(e,t={}){super(e,t),this.textLevels=new Map}defineTextLevel(e,t,i){this.defineContent(e,t,()=>i)}defineProgressiveText(e,t,i){this.defineTextLevel(-10,-2,e),this.defineTextLevel(-2,2,t),this.defineTextLevel(2,10,i)}}class y1 extends Xl{constructor(e,t={}){super(e,t)}defineHTMLLevel(e,t,i){this.defineContent(e,t,(n,s)=>typeof i=="function"?i(n,s):i)}defineProgressiveHTML(e,t,i){this.defineHTMLLevel(-10,-1,e),this.defineHTMLLevel(-1,3,t),this.defineHTMLLevel(3,10,i)}}class _1 extends Xl{constructor(e,t,i={}){super(e,i),this.data=t}defineDataLevels(e){Object.entries(e).forEach(([t,i])=>{this.defineContent(i.minZoom,i.maxZoom,(n,s)=>this._generateDataVisualization(i,n,s))})}_generateDataVisualization(e,t,i){if(!this.data)return"<div>No data available</div>";switch(e.type){case"summary":return this._generateSummary(e);case"chart":return this._generateChart(e,i);case"table":return this._generateTable(e,i);case"raw":return this._generateRawData(e);default:return"<div>Unknown visualization type</div>"}}_generateSummary(e){return`<div class="data-summary">${e.summaryFunction?e.summaryFunction(this.data):"Data Summary"}</div>`}_generateChart(e,t){const i=e.chartType||"bar",n=Array.isArray(this.data)?this.data.length:Object.keys(this.data).length;return`
            <div class="data-chart">
                <h4>${e.title||"Chart"}</h4>
                <div class="chart-placeholder">
                    ${i.toUpperCase()} chart with ${n} data points
                    <br>Zoom level: ${t.toFixed(1)}
                </div>
            </div>
        `}_generateTable(e,t){if(!Array.isArray(this.data))return"<div>Data not suitable for table</div>";const i=Math.min(e.maxRows||10,this.data.length),n=this.data.slice(0,i);let s='<table class="data-table"><thead><tr>';if(n.length>0){const a=Object.keys(n[0]);a.forEach(o=>{s+=`<th>${o}</th>`}),s+="</tr></thead><tbody>",n.forEach(o=>{s+="<tr>",a.forEach(l=>{s+=`<td>${o[l]||""}</td>`}),s+="</tr>"})}return s+="</tbody></table>",s}_generateRawData(e){return`<pre class="raw-data">${JSON.stringify(this.data,null,2)}</pre>`}}function Ws(r,e,t={}){switch(e){case"text":return new v1(r,t);case"html":return new y1(r,t);case"data":return new _1(r,t.data,t);default:return new Xl(r,t)}}class x1 extends mn{constructor(e,t,i={}){super(e,t),this.config={enabled:!0,autoLOD:!0,zoomStep:.5,maxZoomIn:20,maxZoomOut:-10,transitionDuration:.8,...i},this.fractalZoomManager=null,this.contentAdapters=new Map,this.zoomListeners=new Set}getName(){return"FractalZoomPlugin"}init(){if(super.init(),!this.config.enabled)return;this.fractalZoomManager=new g1(this.space),this.fractalZoomManager.zoomStep=this.config.zoomStep,this.fractalZoomManager.maxZoomIn=this.config.maxZoomIn,this.fractalZoomManager.maxZoomOut=this.config.maxZoomOut,this.fractalZoomManager.transitionDuration=this.config.transitionDuration;const e=this.pluginManager.getPlugin("CameraPlugin");e&&this.fractalZoomManager.init(e),this._subscribeToEvents(),this._setupDefaultContentAdapters(),this.space.fractalZoom={zoomToLevel:this.zoomToLevel.bind(this),zoomIn:this.zoomIn.bind(this),zoomOut:this.zoomOut.bind(this),resetZoom:this.resetZoom.bind(this),getZoomLevel:this.getZoomLevel.bind(this),getZoomRange:this.getZoomRange.bind(this),addContentAdapter:this.addContentAdapter.bind(this),addLODLevel:this.addLODLevel.bind(this),isTransitioning:this.isTransitioning.bind(this)},console.log("FractalZoomPlugin initialized")}_subscribeToEvents(){this.space.on("node:added",this._onNodeAdded.bind(this)),this.space.on("node:removed",this._onNodeRemoved.bind(this)),this.space.on("fractal-zoom:levelChanged",this._onZoomLevelChanged.bind(this)),this.space.on("fractal-zoom:lodUpdated",this._onLODUpdated.bind(this))}_setupDefaultContentAdapters(){}_onNodeAdded(e,t){this.fractalZoomManager&&this._createDefaultContentAdapter(e,t)}_onNodeRemoved(e,t){this.contentAdapters.has(e)&&(this.contentAdapters.get(e).dispose(),this.contentAdapters.delete(e))}_onZoomLevelChanged(e){this.space.emit("ui:fractalZoom:levelChanged",e),this.zoomListeners.forEach(t=>{typeof t=="function"&&t(e)})}_onLODUpdated(e){this.space.emit("ui:fractalZoom:lodUpdated",e)}_createDefaultContentAdapter(e,t){if(!t.htmlElement)return;const i=t.htmlElement.querySelector(".node-content");if(!i)return;const n=i.textContent||i.innerHTML;let s;if(n.length>200){s=Ws(e,"text");const a=this._extractSummary(n),o=this._extractDetail(n);s.defineProgressiveText(a,o,n)}else i.querySelector("table, chart, canvas")?s=Ws(e,"data"):(s=Ws(e,"html"),s.defineHTMLLevel(-10,10,n));s&&this.addContentAdapter(e,s)}_extractSummary(e){const t=e.match(/[^\.!?]*[\.!?]/);return t?t[0].trim():e.substring(0,50)+(e.length>50?"...":"")}_extractDetail(e){const t=e.split(`
`)[0];return t.length>20?t:e.substring(0,150)+(e.length>150?"...":"")}zoomToLevel(e,t){this.fractalZoomManager&&this.fractalZoomManager.zoomToLevel(e,t)}zoomIn(){this.fractalZoomManager&&this.fractalZoomManager.zoomIn()}zoomOut(){this.fractalZoomManager&&this.fractalZoomManager.zoomOut()}resetZoom(e){this.fractalZoomManager&&this.fractalZoomManager.resetZoom(e)}getZoomLevel(){return this.fractalZoomManager?this.fractalZoomManager.getZoomLevel():0}getZoomRange(){return this.fractalZoomManager?this.fractalZoomManager.getZoomRange():{min:-10,max:20,current:0,target:0}}isTransitioning(){return this.fractalZoomManager?this.fractalZoomManager.isTransitioningZoom():!1}addContentAdapter(e,t){this.contentAdapters.has(e)&&this.contentAdapters.get(e).dispose(),this.contentAdapters.set(e,t),this.fractalZoomManager&&this.fractalZoomManager.registerContentAdapter(e,t)}removeContentAdapter(e){this.contentAdapters.has(e)&&(this.contentAdapters.get(e).dispose(),this.contentAdapters.delete(e))}addLODLevel(e,t){this.fractalZoomManager&&this.fractalZoomManager.addLODLevel(e,t)}addZoomListener(e){this.zoomListeners.add(e)}removeZoomListener(e){this.zoomListeners.delete(e)}setEnabled(e){this.config.enabled=e,!e&&this.fractalZoomManager&&this.fractalZoomManager.resetZoom(.5)}updateConfig(e){this.config={...this.config,...e},this.fractalZoomManager&&(this.fractalZoomManager.zoomStep=this.config.zoomStep,this.fractalZoomManager.maxZoomIn=this.config.maxZoomIn,this.fractalZoomManager.maxZoomOut=this.config.maxZoomOut,this.fractalZoomManager.transitionDuration=this.config.transitionDuration)}getCurrentLODConfig(){return this.fractalZoomManager?this.fractalZoomManager.getCurrentLODConfig():null}updateLOD(){this.fractalZoomManager&&this.fractalZoomManager._updateLOD()}dispose(){super.dispose(),this.contentAdapters.forEach(e=>e.dispose()),this.contentAdapters.clear(),this.zoomListeners.clear(),this.fractalZoomManager&&(this.fractalZoomManager.dispose(),this.fractalZoomManager=null),this.space.fractalZoom&&delete this.space.fractalZoom,console.log("FractalZoomPlugin disposed")}}class b1{constructor(e){this.space=e,this.renderingPlugin=null,this.config={enableInstancing:!0,enableCulling:!0,enableLOD:!0,enableMemoryManagement:!0,instanceThreshold:10,maxInstances:1e3,frustumCulling:!0,distanceCulling:!0,maxRenderDistance:1e4,lodLevels:[{distance:100,quality:"high"},{distance:500,quality:"medium"},{distance:1500,quality:"low"},{distance:5e3,quality:"minimal"}],memoryBudget:512*1024*1024,garbageCollectionThreshold:.8,maxCachedObjects:1e3},this.stats={totalObjects:0,visibleObjects:0,instancedObjects:0,culledObjects:0,memoryUsage:0,frameTime:0,avgFrameTime:0},this.instanceManager=new M1(this),this.cullingManager=new S1(this),this.lodManager=new w1(this),this.memoryManager=new E1(this),this.frameTimeHistory=[],this.maxFrameHistory=60,this.lastFrameTime=performance.now(),this._bindEvents()}init(e){this.renderingPlugin=e,this.instanceManager.init(e),this.cullingManager.init(e),this.lodManager.init(e),this.memoryManager.init(),console.log("PerformanceManager initialized")}_bindEvents(){this.space.on("node:added",this._onNodeAdded.bind(this)),this.space.on("node:removed",this._onNodeRemoved.bind(this)),this.space.on("edge:added",this._onEdgeAdded.bind(this)),this.space.on("edge:removed",this._onEdgeRemoved.bind(this)),this.space.on("camera:changed",this._onCameraChanged.bind(this))}_onNodeAdded(e,t){this.stats.totalObjects++,this.config.enableInstancing&&this.instanceManager.registerObject(t),this.config.enableLOD&&this.lodManager.registerObject(t)}_onNodeRemoved(e,t){this.stats.totalObjects--,this.config.enableInstancing&&this.instanceManager.unregisterObject(t),this.config.enableLOD&&this.lodManager.unregisterObject(t)}_onEdgeAdded(e,t){this.stats.totalObjects++,this.config.enableInstancing&&this.instanceManager.registerObject(t),this.config.enableLOD&&this.lodManager.registerObject(t)}_onEdgeRemoved(e,t){this.stats.totalObjects--,this.config.enableInstancing&&this.instanceManager.unregisterObject(t),this.config.enableLOD&&this.lodManager.unregisterObject(t)}_onCameraChanged(e){this.config.enableCulling&&this.cullingManager.updateCulling(),this.config.enableLOD&&this.lodManager.updateLOD()}update(){const e=performance.now(),t=e-this.lastFrameTime;this.lastFrameTime=e,this._updateFrameStats(t),this.config.enableCulling&&this.cullingManager.update(),this.config.enableLOD&&this.lodManager.update(),this.config.enableMemoryManagement&&this.memoryManager.update(),this._updateStats()}_updateFrameStats(e){this.stats.frameTime=e,this.frameTimeHistory.push(e),this.frameTimeHistory.length>this.maxFrameHistory&&this.frameTimeHistory.shift();const t=this.frameTimeHistory.reduce((i,n)=>i+n,0);this.stats.avgFrameTime=t/this.frameTimeHistory.length}_updateStats(){this.stats.visibleObjects=this.cullingManager.getVisibleCount(),this.stats.instancedObjects=this.instanceManager.getInstancedCount(),this.stats.culledObjects=this.stats.totalObjects-this.stats.visibleObjects,this.stats.memoryUsage=this.memoryManager.getMemoryUsage()}getStats(){return{...this.stats}}getPerformanceReport(){return{stats:this.getStats(),config:{...this.config},instancing:this.instanceManager.getReport(),culling:this.cullingManager.getReport(),lod:this.lodManager.getReport(),memory:this.memoryManager.getReport()}}updateConfig(e){const t={...this.config};this.config={...this.config,...e},t.enableInstancing!==this.config.enableInstancing&&this.instanceManager.setEnabled(this.config.enableInstancing),t.enableCulling!==this.config.enableCulling&&this.cullingManager.setEnabled(this.config.enableCulling),t.enableLOD!==this.config.enableLOD&&this.lodManager.setEnabled(this.config.enableLOD)}optimizePerformance(){const t=this.getStats().avgFrameTime,i=16.67;t>i*1.5?(console.log("Performance degraded, enabling aggressive optimizations"),this.updateConfig({enableInstancing:!0,enableCulling:!0,maxRenderDistance:Math.max(1e3,this.config.maxRenderDistance*.8),instanceThreshold:Math.max(5,this.config.instanceThreshold-2)}),this.lodManager.setAggressiveMode(!0)):t<i*.8&&(this.updateConfig({maxRenderDistance:Math.min(1e4,this.config.maxRenderDistance*1.1),instanceThreshold:Math.min(20,this.config.instanceThreshold+1)}),this.lodManager.setAggressiveMode(!1))}cleanup(){this.memoryManager.forceCleanup(),this.instanceManager.cleanup(),this.cullingManager.cleanup(),this.lodManager.cleanup()}dispose(){this.space.off("node:added",this._onNodeAdded.bind(this)),this.space.off("node:removed",this._onNodeRemoved.bind(this)),this.space.off("edge:added",this._onEdgeAdded.bind(this)),this.space.off("edge:removed",this._onEdgeRemoved.bind(this)),this.space.off("camera:changed",this._onCameraChanged.bind(this)),this.instanceManager.dispose(),this.cullingManager.dispose(),this.lodManager.dispose(),this.memoryManager.dispose(),console.log("PerformanceManager disposed")}}class M1{constructor(e){this.perfManager=e,this.enabled=!0,this.instanceGroups=new Map,this.registeredObjects=new Map,this.instancedCount=0}init(e){this.renderingPlugin=e}registerObject(e){if(!this.enabled||!e.object3d)return;const t=this._getGeometryKey(e);if(!t)return;this.instanceGroups.has(t)||this.instanceGroups.set(t,{objects:[],instancedMesh:null,needsUpdate:!0});const i=this.instanceGroups.get(t);i.objects.push(e),i.needsUpdate=!0,this.registeredObjects.set(e.id,t),i.objects.length>=this.perfManager.config.instanceThreshold&&this._createInstancedMesh(t)}unregisterObject(e){const t=this.registeredObjects.get(e.id);if(!t)return;const i=this.instanceGroups.get(t);if(i){const n=i.objects.indexOf(e);n!==-1&&(i.objects.splice(n,1),i.needsUpdate=!0),i.objects.length<this.perfManager.config.instanceThreshold&&i.instancedMesh&&this._destroyInstancedMesh(t)}this.registeredObjects.delete(e.id)}_getGeometryKey(e){if(e.object3d&&e.object3d.children.length>0){const t=e.object3d.children[0];if(t.geometry&&t.material)return`${t.geometry.type}_${t.material.type}`}return null}_createInstancedMesh(e){const t=this.instanceGroups.get(e);if(!t||t.objects.length===0)return;const i=t.objects[0].object3d.children[0],n=i.geometry,s=i.material.clone(),a=Math.min(t.objects.length,this.perfManager.config.maxInstances),o=new ao(n,s,a),l=new Ne;t.objects.forEach((c,h)=>{h>=a||(l.setPosition(c.position.x,c.position.y,c.position.z),o.setMatrixAt(h,l),c.object3d.visible=!1)}),o.instanceMatrix.needsUpdate=!0,t.instancedMesh=o,this.renderingPlugin&&this.renderingPlugin.getWebGLScene().add(o),this.instancedCount+=t.objects.length,console.log(`Created instanced mesh for ${e} with ${t.objects.length} instances`)}_destroyInstancedMesh(e){const t=this.instanceGroups.get(e);!t||!t.instancedMesh||(this.renderingPlugin&&this.renderingPlugin.getWebGLScene().remove(t.instancedMesh),t.objects.forEach(i=>{i.object3d.visible=!0}),this.instancedCount-=t.objects.length,t.instancedMesh.dispose(),t.instancedMesh=null)}getInstancedCount(){return this.instancedCount}setEnabled(e){this.enabled=e,e||this.instanceGroups.forEach((t,i)=>{t.instancedMesh&&this._destroyInstancedMesh(i)})}getReport(){return{enabled:this.enabled,groupCount:this.instanceGroups.size,instancedCount:this.instancedCount,registeredCount:this.registeredObjects.size}}cleanup(){this.instanceGroups.forEach((e,t)=>{e.objects.length===0&&(e.instancedMesh&&this._destroyInstancedMesh(t),this.instanceGroups.delete(t))})}dispose(){this.instanceGroups.forEach((e,t)=>{e.instancedMesh&&this._destroyInstancedMesh(t)}),this.instanceGroups.clear(),this.registeredObjects.clear()}}class S1{constructor(e){this.perfManager=e,this.enabled=!0,this.camera=null,this.frustum=new Ul,this.cameraMatrix=new Ne,this.visibleObjects=new Set,this.culledObjects=new Set,this.lastCameraPosition=new M,this.cameraMovedThreshold=10}init(e){this.renderingPlugin=e;const t=this.perfManager.space.plugins.getPlugin("CameraPlugin");t&&(this.camera=t.getCameraInstance())}updateCulling(){if(!this.enabled||!this.camera)return;const e=this.camera.position;if(e.distanceTo(this.lastCameraPosition)<this.cameraMovedThreshold)return;this.lastCameraPosition.copy(e),this.cameraMatrix.multiplyMatrices(this.camera.projectionMatrix,this.camera.matrixWorldInverse),this.frustum.setFromProjectionMatrix(this.cameraMatrix);const t=this.perfManager.space.getNodes(),i=this.perfManager.space.getEdges();[...t,...i].forEach(n=>{this._testObjectCulling(n)})}_testObjectCulling(e){if(!e.object3d)return;let t=!1;this.perfManager.config.distanceCulling&&this.camera&&e.position.distanceTo(this.camera.position)>this.perfManager.config.maxRenderDistance&&(t=!0),!t&&this.perfManager.config.frustumCulling&&(this.frustum.intersectsObject(e.object3d)||(t=!0)),t?this.visibleObjects.has(e)&&(this.visibleObjects.delete(e),this.culledObjects.add(e),e.object3d.visible=!1):this.culledObjects.has(e)&&(this.culledObjects.delete(e),this.visibleObjects.add(e),e.object3d.visible=!0)}update(){this.updateCulling()}getVisibleCount(){return this.visibleObjects.size}setEnabled(e){this.enabled=e,e||(this.culledObjects.forEach(t=>{t.object3d.visible=!0}),this.culledObjects.clear())}getReport(){return{enabled:this.enabled,visibleCount:this.visibleObjects.size,culledCount:this.culledObjects.size}}cleanup(){}dispose(){this.visibleObjects.clear(),this.culledObjects.clear()}}class w1{constructor(e){this.perfManager=e,this.enabled=!0,this.aggressiveMode=!1,this.camera=null,this.lodObjects=new Map}init(e){this.renderingPlugin=e;const t=this.perfManager.space.plugins.getPlugin("CameraPlugin");t&&(this.camera=t.getCameraInstance())}registerObject(e){this.enabled&&this.lodObjects.set(e,"high")}unregisterObject(e){this.lodObjects.delete(e)}updateLOD(){!this.enabled||!this.camera||this.lodObjects.forEach((e,t)=>{const i=t.position.distanceTo(this.camera.position),n=this._calculateLOD(i);n!==e&&(this._applyLOD(t,n),this.lodObjects.set(t,n))})}_calculateLOD(e){const t=this.perfManager.config.lodLevels;for(let i=0;i<t.length;i++)if(e<=t[i].distance)return t[i].quality;return"minimal"}_applyLOD(e,t){if(e.object3d)switch(t){case"high":this._applyHighLOD(e);break;case"medium":this._applyMediumLOD(e);break;case"low":this._applyLowLOD(e);break;case"minimal":this._applyMinimalLOD(e);break}}_applyHighLOD(e){e.object3d.material&&(e.object3d.material.wireframe=!1),e.labelObject&&(e.labelObject.visible=!0)}_applyMediumLOD(e){e.labelObject&&(e.labelObject.visible=!0)}_applyLowLOD(e){e.labelObject&&(e.labelObject.visible=!1)}_applyMinimalLOD(e){e.object3d.material&&(e.object3d.material.wireframe=this.aggressiveMode),e.labelObject&&(e.labelObject.visible=!1)}update(){this.updateLOD()}setEnabled(e){this.enabled=e,e||this.lodObjects.forEach((t,i)=>{this._applyLOD(i,"high")})}setAggressiveMode(e){this.aggressiveMode=e,this.updateLOD()}getReport(){const e={};return this.lodObjects.forEach(t=>{e[t]=(e[t]||0)+1}),{enabled:this.enabled,aggressiveMode:this.aggressiveMode,objectCount:this.lodObjects.size,lodDistribution:e}}cleanup(){}dispose(){this.lodObjects.clear()}}class E1{constructor(e){this.perfManager=e,this.enabled=!0,this.memoryUsage=0,this.cachedObjects=new Map,this.lastCleanup=performance.now(),this.cleanupInterval=3e4}init(){performance.memory&&setInterval(()=>{this.memoryUsage=performance.memory.usedJSHeapSize},1e3)}update(){if(!this.enabled)return;const e=performance.now();e-this.lastCleanup>this.cleanupInterval&&(this._performCleanup(),this.lastCleanup=e),this._isMemoryPressureHigh()&&this.forceCleanup()}_isMemoryPressureHigh(){return performance.memory?this.memoryUsage/this.perfManager.config.memoryBudget>this.perfManager.config.garbageCollectionThreshold:!1}_performCleanup(){if(this.cachedObjects.size>this.perfManager.config.maxCachedObjects){const e=this.cachedObjects.size-this.perfManager.config.maxCachedObjects;Array.from(this.cachedObjects.keys()).slice(0,e).forEach(i=>{const n=this.cachedObjects.get(i);n&&n.dispose&&n.dispose(),this.cachedObjects.delete(i)})}window.gc&&typeof window.gc=="function"&&window.gc()}forceCleanup(){console.log("Performing force cleanup due to memory pressure"),this.cachedObjects.clear(),window.gc&&typeof window.gc=="function"&&window.gc(),this.lastCleanup=performance.now()}getMemoryUsage(){return this.memoryUsage}setEnabled(e){this.enabled=e}getReport(){return{enabled:this.enabled,memoryUsage:this.memoryUsage,cachedObjectCount:this.cachedObjects.size,lastCleanup:this.lastCleanup}}cleanup(){this._performCleanup()}dispose(){this.cachedObjects.clear()}}class Vg{constructor(){this.workers=new Map,this.workerPools=new Map,this.taskQueue=[],this.activeJobs=new Map,this.jobIdCounter=0,this.config={maxWorkers:navigator.hardwareConcurrency||4,workerTimeout:3e4,enableWorkers:this._checkWorkerSupport()},console.log(`WorkerManager initialized with ${this.config.maxWorkers} max workers`)}_checkWorkerSupport(){return typeof Worker<"u"}createWorker(e,t){if(!this.config.enableWorkers)return console.warn("Web Workers not supported, falling back to main thread"),null;try{let i;if(t instanceof URL)i=new Worker(t);else if(typeof t=="string"){const s=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(s);i=new Worker(a)}else throw new Error("Invalid worker script type");const n={worker:i,type:e,busy:!1,created:Date.now(),lastUsed:Date.now(),jobsCompleted:0};return i.onmessage=s=>this._handleWorkerMessage(e,s),i.onerror=s=>this._handleWorkerError(e,s),this.workers.set(e,n),console.log(`Created worker for ${e}`),i}catch(i){return console.error(`Failed to create worker for ${e}:`,i),null}}createWorkerPool(e,t,i=2){if(!this.config.enableWorkers)return!1;i=Math.min(i,this.config.maxWorkers);const n=[];for(let s=0;s<i;s++){const a=this.createWorker(`${e}_${s}`,t);a&&n.push({worker:a,busy:!1,workerId:`${e}_${s}`})}return n.length>0?(this.workerPools.set(e,n),console.log(`Created worker pool for ${e} with ${n.length} workers`),!0):!1}_getAvailableWorker(e){if(this.workerPools.has(e)){const i=this.workerPools.get(e).find(n=>!n.busy);return i?(i.busy=!0,i):null}if(this.workers.has(e)){const t=this.workers.get(e);if(!t.busy)return t.busy=!0,t}return null}_releaseWorker(e){for(const[t,i]of this.workerPools){const n=i.find(s=>s.workerId===e);if(n){n.busy=!1,this.workers.get(e).lastUsed=Date.now(),this.workers.get(e).jobsCompleted++;return}}if(this.workers.has(e)){const t=this.workers.get(e);t.busy=!1,t.lastUsed=Date.now(),t.jobsCompleted++}}executeTask(e,t,i=this.config.workerTimeout){return new Promise((n,s)=>{if(!this.config.enableWorkers){s(new Error("Web Workers not available"));return}const a=this._generateJobId(),o={id:a,workerType:e,taskData:t,resolve:n,reject:s,timeout:i,startTime:Date.now()},l=this._getAvailableWorker(e);l?this._executeJob(o,l):(this.taskQueue.push(o),console.log(`Queued job ${a} for ${e} (queue length: ${this.taskQueue.length})`))})}_executeJob(e,t){this.activeJobs.set(e.id,{...e,workerId:t.workerId||t.type,worker:t.worker});const i=setTimeout(()=>{this._handleJobTimeout(e.id)},e.timeout),n=this.activeJobs.get(e.id);n.timeoutId=i;try{t.worker.postMessage({jobId:e.id,type:"task",data:e.taskData}),console.log(`Executing job ${e.id} on worker ${n.workerId}`)}catch(s){this._handleJobError(e.id,s)}}_handleWorkerMessage(e,t){const{jobId:i,type:n,data:s,error:a}=t.data;if(!i){console.log(`Worker ${e} message:`,n,s);return}if(!this.activeJobs.get(i)){console.warn(`Received message for unknown job ${i}`);return}a?this._handleJobError(i,new Error(a)):this._handleJobSuccess(i,s)}_handleWorkerError(e,t){console.error(`Worker ${e} error:`,t),this.activeJobs.forEach((i,n)=>{i.workerId===e&&this._handleJobError(n,t)})}_handleJobSuccess(e,t){const i=this.activeJobs.get(e);i&&(i.timeoutId&&clearTimeout(i.timeoutId),this._releaseWorker(i.workerId),this.activeJobs.delete(e),i.resolve(t),this._processQueue(),console.log(`Job ${e} completed successfully`))}_handleJobError(e,t){const i=this.activeJobs.get(e);i&&(i.timeoutId&&clearTimeout(i.timeoutId),this._releaseWorker(i.workerId),this.activeJobs.delete(e),i.reject(t),this._processQueue(),console.error(`Job ${e} failed:`,t))}_handleJobTimeout(e){const t=this.activeJobs.get(e);t&&(console.warn(`Job ${e} timed out after ${t.timeout}ms`),this._handleJobError(e,new Error(`Job ${e} timed out`)))}_processQueue(){if(this.taskQueue.length===0)return;const e=this.taskQueue.shift(),t=this._getAvailableWorker(e.workerType);t?this._executeJob(e,t):this.taskQueue.unshift(e)}_generateJobId(){return`job_${++this.jobIdCounter}_${Date.now()}`}getStats(){const e={enableWorkers:this.config.enableWorkers,totalWorkers:this.workers.size,workerPools:this.workerPools.size,activeJobs:this.activeJobs.size,queuedJobs:this.taskQueue.length,workers:{}};return this.workers.forEach((t,i)=>{e.workers[i]={busy:t.busy,jobsCompleted:t.jobsCompleted,uptime:Date.now()-t.created,lastUsed:Date.now()-t.lastUsed}}),e}terminateWorker(e){const t=this.workers.get(e);t&&(t.worker.terminate(),this.workers.delete(e),console.log(`Terminated worker ${e}`)),this.workerPools.has(e)&&(this.workerPools.get(e).forEach(n=>{n.worker.terminate(),this.workers.delete(n.workerId)}),this.workerPools.delete(e),console.log(`Terminated worker pool ${e}`))}terminateAll(){this.workers.forEach((e,t)=>{e.worker.terminate()}),this.activeJobs.forEach((e,t)=>{e.reject(new Error("Worker manager shutting down"))}),this.workers.clear(),this.workerPools.clear(),this.activeJobs.clear(),this.taskQueue=[],console.log("All workers terminated")}cleanupIdleWorkers(e=3e5){const t=Date.now(),i=[];this.workers.forEach((n,s)=>{!n.busy&&t-n.lastUsed>e&&i.push(s)}),i.forEach(n=>{this.terminateWorker(n)}),i.length>0&&console.log(`Cleaned up ${i.length} idle workers`)}isEnabled(){return this.config.enableWorkers}setEnabled(e){this.config.enableWorkers=e&&this._checkWorkerSupport(),this.config.enableWorkers||this.terminateAll()}updateConfig(e){this.config={...this.config,...e}}dispose(){this.terminateAll(),console.log("WorkerManager disposed")}}class T1 extends Vg{constructor(){super(),this.layoutWorkerScript=null,this.initialized=!1}async init(){if(!this.config.enableWorkers)return console.log("Layout workers disabled - using main thread calculations"),!1;try{const e=new URL("/spacegraphjs/assets/LayoutWorker-1fCAb600.js",import.meta.url),t=this.createWorkerPool("layout",e,Math.min(2,this.config.maxWorkers));return this.initialized=t,console.log(`Layout worker manager initialized: ${t}`),t}catch(e){return console.error("Failed to initialize layout workers:",e),this.initialized=!1,!1}}async calculateLayout(e,t,i,n={}){if(!this.initialized)throw new Error("Layout worker manager not initialized");const s={type:"calculate",layoutType:e,nodes:t.map(a=>({id:a.id,x:a.position.x,y:a.position.y,z:a.position.z})),edges:i.map(a=>({id:a.id,source:a.source.id,target:a.target.id})),config:n};return this.executeTask("layout",s)}async startContinuousLayout(e,t,i,n={}){if(!this.initialized)throw new Error("Layout worker manager not initialized");const s={type:"start_continuous",layoutType:e,nodes:t,edges:i,config:n};return this.executeTask("layout",s)}async stopContinuousLayout(){if(!this.initialized)return;const e={type:"stop_continuous"};return this.executeTask("layout",e)}}class C1 extends mn{constructor(e,t,i={}){super(e,t),this.config={enabled:!0,enableInstancing:!0,enableCulling:!0,enableLOD:!0,enableMemoryManagement:!0,enableWorkers:!0,autoOptimize:!0,optimizationInterval:5e3,targetFrameRate:60,performanceThreshold:.8,...i},this.performanceManager=null,this.workerManager=null,this.layoutWorkerManager=null,this.optimizationTimer=null,this.performanceMetrics={frameRate:60,frameTime:16.67,memoryUsage:0,objectCount:0},this.isMonitoring=!1}getName(){return"PerformancePlugin"}init(){if(super.init(),!this.config.enabled){console.log("PerformancePlugin disabled");return}this.performanceManager=new b1(this.space),this.workerManager=new Vg,this.layoutWorkerManager=new T1;const e=this.pluginManager.getPlugin("RenderingPlugin");e&&this.performanceManager.init(e),this.config.enableWorkers&&this._initializeWorkers(),this.config.autoOptimize&&this._startPerformanceMonitoring(),this._exposePerformanceAPI(),this._subscribeToEvents(),console.log("PerformancePlugin initialized")}async _initializeWorkers(){try{await this.layoutWorkerManager.init(),console.log("Performance workers initialized")}catch(e){console.error("Failed to initialize performance workers:",e)}}_subscribeToEvents(){this.space.on("render:beforeRender",()=>{this.performanceManager&&this.performanceManager.update()}),this.space.on("graph:changed",this._onGraphChanged.bind(this)),this.space.on("layout:calculate",this._onLayoutCalculate.bind(this))}_startPerformanceMonitoring(){this.isMonitoring||(this.isMonitoring=!0,this.optimizationTimer=setInterval(()=>{this._updatePerformanceMetrics(),this._checkPerformanceThresholds()},this.config.optimizationInterval),console.log("Performance monitoring started"))}_stopPerformanceMonitoring(){this.isMonitoring&&(this.isMonitoring=!1,this.optimizationTimer&&(clearInterval(this.optimizationTimer),this.optimizationTimer=null),console.log("Performance monitoring stopped"))}_updatePerformanceMetrics(){if(!this.performanceManager)return;const e=this.performanceManager.getStats();this.performanceMetrics={frameRate:1e3/e.avgFrameTime,frameTime:e.avgFrameTime,memoryUsage:e.memoryUsage,objectCount:e.totalObjects,visibleObjects:e.visibleObjects,instancedObjects:e.instancedObjects},this.space.emit("performance:update",this.performanceMetrics)}_checkPerformanceThresholds(){const t=1e3/this.config.targetFrameRate/this.performanceMetrics.frameTime;t<this.config.performanceThreshold&&(console.log(`Performance below threshold (${(t*100).toFixed(1)}%), triggering optimizations`),this._triggerOptimizations())}_triggerOptimizations(){this.performanceManager&&(this.performanceManager.optimizePerformance(),this.space.emit("performance:optimized",{reason:"automatic",metrics:this.performanceMetrics}))}_onGraphChanged(e){(e.changeType==="major"||e.objectsChanged>10)&&this._updatePerformanceMetrics()}async _onLayoutCalculate(e){if(!(!this.config.enableWorkers||!this.layoutWorkerManager.initialized))try{const{layoutType:t,nodes:i,edges:n,config:s}=e,a=await this.layoutWorkerManager.calculateLayout(t,i,n,s);this.space.emit("layout:result",a)}catch(t){console.error("Worker layout calculation failed:",t),this.space.emit("layout:error",t)}}_exposePerformanceAPI(){this.space.performance={getMetrics:()=>this.getPerformanceMetrics(),getDetailedReport:()=>this.getDetailedPerformanceReport(),updateConfig:e=>this.updatePerformanceConfig(e),getConfig:()=>({...this.config}),optimize:()=>this.optimizePerformance(),cleanup:()=>this.cleanupPerformance(),setInstancingEnabled:e=>this.setInstancingEnabled(e),setCullingEnabled:e=>this.setCullingEnabled(e),setLODEnabled:e=>this.setLODEnabled(e),setWorkersEnabled:e=>this.setWorkersEnabled(e),getWorkerStats:()=>this.getWorkerStats(),terminateWorkers:()=>this.terminateWorkers(),startMonitoring:()=>this._startPerformanceMonitoring(),stopMonitoring:()=>this._stopPerformanceMonitoring(),isMonitoring:()=>this.isMonitoring}}getPerformanceMetrics(){return{...this.performanceMetrics}}getDetailedPerformanceReport(){return this.performanceManager?{metrics:this.getPerformanceMetrics(),manager:this.performanceManager.getPerformanceReport(),workers:this.workerManager?this.workerManager.getStats():null,config:{...this.config}}:{error:"Performance manager not initialized"}}updatePerformanceConfig(e){const t={...this.config};this.config={...this.config,...e},this.performanceManager&&this.performanceManager.updateConfig(this.config),this.workerManager&&this.workerManager.updateConfig(this.config),t.autoOptimize!==this.config.autoOptimize&&(this.config.autoOptimize?this._startPerformanceMonitoring():this._stopPerformanceMonitoring()),this.space.emit("performance:configChanged",{oldConfig:t,newConfig:this.config})}optimizePerformance(){this.performanceManager&&(this.performanceManager.optimizePerformance(),this.space.emit("performance:optimized",{reason:"manual"}))}cleanupPerformance(){this.performanceManager&&this.performanceManager.cleanup(),this.workerManager&&this.workerManager.cleanupIdleWorkers(),this.space.emit("performance:cleanup")}setInstancingEnabled(e){this.config.enableInstancing=e,this.performanceManager&&this.performanceManager.updateConfig({enableInstancing:e})}setCullingEnabled(e){this.config.enableCulling=e,this.performanceManager&&this.performanceManager.updateConfig({enableCulling:e})}setLODEnabled(e){this.config.enableLOD=e,this.performanceManager&&this.performanceManager.updateConfig({enableLOD:e})}setWorkersEnabled(e){this.config.enableWorkers=e,this.workerManager&&this.workerManager.setEnabled(e),this.layoutWorkerManager&&this.layoutWorkerManager.setEnabled(e)}getWorkerStats(){return{workerManager:this.workerManager?this.workerManager.getStats():null,layoutWorkerManager:this.layoutWorkerManager?this.layoutWorkerManager.getStats():null}}terminateWorkers(){this.workerManager&&this.workerManager.terminateAll(),this.layoutWorkerManager&&this.layoutWorkerManager.terminateAll()}isEnabled(){return this.config.enabled}setEnabled(e){this.config.enabled=e,e?this.config.autoOptimize&&this._startPerformanceMonitoring():(this._stopPerformanceMonitoring(),this.terminateWorkers())}getStatus(){return{enabled:this.config.enabled,monitoring:this.isMonitoring,instancing:this.config.enableInstancing,culling:this.config.enableCulling,lod:this.config.enableLOD,workers:this.config.enableWorkers,workerStats:this.getWorkerStats()}}dispose(){super.dispose(),this._stopPerformanceMonitoring(),this.performanceManager&&(this.performanceManager.dispose(),this.performanceManager=null),this.workerManager&&(this.workerManager.dispose(),this.workerManager=null),this.layoutWorkerManager&&(this.layoutWorkerManager.dispose(),this.layoutWorkerManager=null),this.space.performance&&delete this.space.performance,console.log("PerformancePlugin disposed")}}class A1{constructor(e,t={}){E(this,"_cam",null);E(this,"_listeners",new Map);E(this,"plugins",null);E(this,"options",{});if(!e)throw new Error("SpaceGraph requires a valid HTML container element.");this.container=e,this.options=t,this.plugins=new OS(this);const i=t.ui||{},{contextMenuElement:n,confirmDialogElement:s}=i;this.plugins.add(new SC(this,this.plugins)),this.plugins.add(new QE(this,this.plugins)),this.plugins.add(new RC(this,this.plugins)),this.plugins.add(new UC(this,this.plugins)),this.plugins.add(new e1(this,this.plugins)),this.plugins.add(new h1(this,this.plugins,n,s)),this.plugins.add(new p1(this,this.plugins)),this.plugins.add(new m1(this,this.plugins)),this.plugins.add(new x1(this,this.plugins)),this.plugins.add(new C1(this,this.plugins))}async init(){await this.plugins.initPlugins();const e=this.plugins.getPlugin("CameraPlugin");e==null||e.centerView(null,0),e==null||e.setInitialState(),this._setupEventListeners()}on(e,t){this._listeners.has(e)||this._listeners.set(e,new Set),this._listeners.get(e).add(t)}off(e,t){var i;(i=this._listeners.get(e))==null||i.delete(t)}emit(e,...t){var i;(i=this._listeners.get(e))==null||i.forEach(n=>{n(...t)})}_setupEventListeners(){this.on("ui:request:addNode",e=>{var t;(t=this.plugins.getPlugin("NodePlugin"))==null||t.addNode(e)}),this.on("ui:request:createNode",e=>{var t;(t=this.plugins.getPlugin("NodePlugin"))==null||t.createAndAddNode(e)}),this.on("node:added",e=>{e&&setTimeout(()=>{var t,i,n;this.focusOnNode(e,.6,!0),(t=this.plugins.getPlugin("UIPlugin"))==null||t.setSelectedNode(e),e instanceof gt&&e.data.editable&&((n=(i=e.htmlElement)==null?void 0:i.querySelector(".node-content"))==null||n.focus())},100)}),this.on("ui:request:removeNode",e=>{var t;(t=this.plugins.getPlugin("NodePlugin"))==null||t.removeNode(e)}),this.on("ui:request:addEdge",(e,t,i)=>{var n;(n=this.plugins.getPlugin("EdgePlugin"))==null||n.addEdge(e,t,i)}),this.on("edge:added",()=>{}),this.on("ui:request:removeEdge",e=>{var t;(t=this.plugins.getPlugin("EdgePlugin"))==null||t.removeEdge(e)}),this.on("ui:request:autoZoomNode",e=>this.autoZoom(e)),this.on("ui:request:centerView",()=>this.centerView()),this.on("ui:request:resetView",()=>{var e;(e=this.plugins.getPlugin("CameraPlugin"))==null||e.resetView()}),this.on("ui:request:toggleBackground",(e,t)=>{var i;(i=this.plugins.getPlugin("RenderingPlugin"))==null||i.setBackground(e,t)}),this.on("ui:request:reverseEdge",e=>{var n;const t=this.plugins.getPlugin("EdgePlugin"),i=t==null?void 0:t.getEdgeById(e);i&&([i.source,i.target]=[i.target,i.source],i.update(),(n=this.plugins.getPlugin("LayoutPlugin"))==null||n.kick())}),this.on("ui:request:adjustContentScale",(e,t)=>{e instanceof gt&&e.adjustContentScale(t)}),this.on("ui:request:adjustNodeSize",(e,t)=>{e instanceof gt&&e.adjustNodeSize(t)}),this.on("ui:request:zoomCamera",e=>{var t;(t=this.plugins.getPlugin("CameraPlugin"))==null||t.zoom(e)}),this.on("ui:request:focusOnNode",(e,t,i)=>this.focusOnNode(e,t,i)),this.on("ui:request:updateEdge",(e,t,i)=>{var a,o,l,c,h,d;const n=this.plugins.getPlugin("EdgePlugin"),s=n==null?void 0:n.getEdgeById(e);if(s)switch(t){case"color":s.data.color=i,s.setHighlight((a=this.plugins.getPlugin("UIPlugin"))==null?void 0:a.getSelectedEdges().has(s));break;case"thickness":s.data.thickness=i,(o=s.line)!=null&&o.material&&(s.line.material.linewidth=s.data.thickness);break;case"constraintType":s.data.constraintType=i,i==="rigid"&&!((l=s.data.constraintParams)!=null&&l.distance)?s.data.constraintParams={distance:s.source.position.distanceTo(s.target.position),stiffness:.1}:i==="weld"&&!((c=s.data.constraintParams)!=null&&c.distance)?s.data.constraintParams={distance:s.source.getBoundingSphereRadius()+s.target.getBoundingSphereRadius(),stiffness:.5}:i==="elastic"&&!((h=s.data.constraintParams)!=null&&h.stiffness)&&(s.data.constraintParams={stiffness:.001,idealLength:200}),(d=this.plugins.getPlugin("LayoutPlugin"))==null||d.kick();break}})}addNode(e){const t=this.plugins.getPlugin("NodePlugin"),i=this.plugins.getPlugin("LayoutPlugin"),n=t==null?void 0:t.addNode(e);return n&&i&&i.kick(),n}addEdge(e,t,i={}){const n=this.plugins.getPlugin("EdgePlugin"),s=this.plugins.getPlugin("LayoutPlugin"),a=n==null?void 0:n.addEdge(e,t,i);return a&&s&&s.kick(),a}createNode(e){var t;return(t=this.plugins.getPlugin("NodePlugin"))==null?void 0:t.createAndAddNode(e)}togglePinNode(e){var t,i;(i=(t=this.plugins.getPlugin("LayoutPlugin"))==null?void 0:t.layoutManager)==null||i.togglePinNode(e)}centerView(e=null,t=.7){var i;(i=this.plugins.getPlugin("CameraPlugin"))==null||i.centerView(e,t)}focusOnNode(e,t=.6,i=!1){var n;(n=this.plugins.getPlugin("CameraPlugin"))==null||n.focusOnNode(e,t,i)}autoZoom(e){const t=this.plugins.getPlugin("CameraPlugin");!e||!t||(t.getCurrentTargetNodeId()===e.id?(t.popState(),t.setCurrentTargetNodeId(null)):(t.pushState(),t.setCurrentTargetNodeId(e.id),t.focusOnNode(e,.6,!1)))}screenToWorld(e,t,i=0){const n=this.plugins.getPlugin("CameraPlugin"),s=n==null?void 0:n.getCameraInstance();if(!s)return null;s.updateMatrixWorld();const a=new xf,o=new Z(e/window.innerWidth*2-1,-(t/window.innerHeight)*2+1);a.setFromCamera(o,s);const l=new ss(new M(0,0,1),-i),c=new M;return a.ray.intersectPlane(l,c)??null}intersectedObjects(e,t){var v,g;const i=this.plugins.getPlugin("CameraPlugin"),n=i==null?void 0:i.getCameraInstance();if(!n)return null;n.updateMatrixWorld();const s=new Z(e/window.innerWidth*2-1,-(t/window.innerHeight)*2+1),a=new xf;a.setFromCamera(s,n),a.params.Line.threshold=5;const o=this.plugins.getPlugin("NodePlugin"),l=this.plugins.getPlugin("EdgePlugin"),c=this.plugins.getPlugin("RenderingPlugin"),h=c==null?void 0:c.getInstancedMeshManager(),d=l==null?void 0:l.instancedEdgeManager;let u=null;if(h){const p=h.raycast(a);if(p){const x=o==null?void 0:o.getNodeById(p.nodeId);x&&(u={node:x,distance:p.distance,type:"node"})}}const f=o==null?void 0:o.getNodes();if(f){const p=[...f.values()].filter(x=>!x.isInstanced&&x.mesh&&x.mesh.visible).map(x=>x.mesh);if(p.length>0){const x=a.intersectObjects(p,!1);if(x.length>0&&(!u||x[0].distance<u.distance)){const _=x[0].object,y=o.getNodeById((v=_.userData)==null?void 0:v.nodeId);y&&(u={node:y,distance:x[0].distance,type:"node"})}}}if(d){const p=d.raycast(a);if(p&&(!u||p.distance<u.distance)){const x=l==null?void 0:l.getEdgeById(p.edgeId);x&&(u={edge:x,distance:p.distance,type:"edge"})}}const m=l==null?void 0:l.getEdges();if(m){const p=[...m.values()].filter(x=>!x.isInstanced&&x.line&&x.line.visible).map(x=>x.line);if(p.length>0){const x=a.intersectObjects(p,!1);if(x.length>0&&(!u||x[0].distance<u.distance)){const _=x[0].object,y=l.getEdgeById((g=_.userData)==null?void 0:g.edgeId);y&&(u={edge:y,distance:x[0].distance,type:"edge"})}}}return(u==null?void 0:u.type)==="node"?{node:u.node,distance:u.distance}:(u==null?void 0:u.type)==="edge"?{edge:u.edge,distance:u.distance}:null}animate(){const e=()=>{this.plugins.updatePlugins(),requestAnimationFrame(e)};e()}get layoutManager(){var e;return(e=this.plugins.getPlugin("LayoutPlugin"))==null?void 0:e.layoutManager}dispose(){this.plugins.disposePlugins(),this._listeners.clear()}exportGraphToJSON(e){var t;return((t=this.plugins.getPlugin("DataPlugin"))==null?void 0:t.exportGraphToJSON(e))||null}async importGraphFromJSON(e,t){var i;return await((i=this.plugins.getPlugin("DataPlugin"))==null?void 0:i.importGraphFromJSON(e,t))||!1}}const Il=class Il{getName(){return Il.generatorName}generate(e,t,i={}){if(!e||!t){console.error("FileSystemGenerator: Missing fsData or space instance.");return}const s={...{rootPosition:{x:0,y:0,z:0},nodeTypeMapping:{directory:"group",file:"document"},directoryData:a=>({label:a.name,content:`📁 ${a.name}`,width:150+a.name.length*5,height:60,backgroundColor:"#334455",type:"html"}),fileData:a=>({label:a.name,icon:this._getFileIcon(a.name),size:a.size||50,type:"document"})},...i};this._traverseFsItem(e,t,s,s.rootPosition,null)}_traverseFsItem(e,t,i,n,s=null){let a;const o=e.type==="directory"?i.nodeTypeMapping.directory:i.nodeTypeMapping.file;let l={};e.type==="directory"?l=i.directoryData(e):l=i.fileData(e);const c=l.type||o;if(a=t.createNode({id:bt.generateId(e.name),type:c,position:{...n},data:l,mass:e.type==="directory"?1.5:.8}),s&&a&&t.addEdge(s,a,{type:"straight",color:11184810,thickness:1.5}),e.type==="directory"&&e.children&&e.children.length>0)if(c==="group"&&a){const h=[];e.children.forEach((d,u)=>{const f={x:n.x+(u%3-1)*100,y:n.y-100-Math.floor(u/3)*80,z:n.z+u%2*20},m=this._traverseFsItem(d,t,i,f,a);m&&h.push(m.id)})}else e.children.forEach((h,d)=>{const u={x:n.x+(d%3-1)*150,y:n.y-150-Math.floor(d/3)*120,z:n.z+d%2*30};this._traverseFsItem(h,t,i,u,a)});return a}_getFileIcon(e){switch(e.slice(e.lastIndexOf(".")+1).toLowerCase()){case"txt":return"📄";case"json":return"{ }";case"js":return"📜";case"html":return"🌐";case"css":return"🎨";case"md":return"📝";case"png":case"jpg":case"gif":return"🖼️";default:return"❔"}}};E(Il,"generatorName","fileSystem");let gd=Il;const kl=class kl{getName(){return kl.generatorName}generate(e,t,i={}){if(typeof e!="object"||e===null||!t){console.error("ObjectPropertyGenerator: Invalid input object or space instance.");return}const s={...{rootPosition:{x:0,y:0,z:0},nodeType:"html",maxDepth:5,valueNodeColor:6728430,objectNodeColor:15641190,arrayNodeColor:6745770},...i};this._traverseObject(e,t,s,s.rootPosition,null,"root",0)}_traverseObject(e,t,i,n,s,a,o){if(o>i.maxDepth){const h=t.createNode({id:bt.generateId(`max_depth_${a}`),type:i.nodeType,position:n,data:{label:`${a}: (Max Depth)`,content:`<div style="color: #ffdddd; padding: 5px;">${a}: (Max Depth Reached)</div>`,width:180,height:40,backgroundColor:"#553333"},mass:.7});return s&&h&&t.addEdge(s,h,{color:11184810}),h}let l;const c={width:180,height:40};if(Array.isArray(e))l=t.createNode({id:bt.generateId(`array_${a}`),type:i.nodeType,position:n,data:{...c,label:`${a} [Array]`,content:`<div style="font-weight:bold; padding:5px;">${a} [Array (${e.length})]</div>`,backgroundColor:bt.toHexColor(i.arrayNodeColor)},mass:1.2});else if(typeof e=="object"&&e!==null)l=t.createNode({id:bt.generateId(`object_${a}`),type:i.nodeType,position:n,data:{...c,label:`${a} {Object}`,content:`<div style="font-weight:bold; padding:5px;">${a} {Object}</div>`,backgroundColor:bt.toHexColor(i.objectNodeColor)},mass:1.2});else{const h=String(e).length>30?String(e).substring(0,27)+"...":String(e);l=t.createNode({id:bt.generateId(`value_${a}`),type:i.nodeType,position:n,data:{...c,width:Math.min(250,80+String(h).length*7),label:`${a}: ${h}`,content:`<div><span style="color:#aaa; padding-right:5px;">${a}:</span> ${h}</div>`,backgroundColor:bt.toHexColor(i.valueNodeColor)},mass:.8})}if(s&&l&&t.addEdge(s,l,{color:12303291,thickness:1.5}),Array.isArray(e))e.forEach((h,d)=>{const u={x:n.x+(d%3-1)*200,y:n.y-150-Math.floor(d/3)*100,z:n.z+(d%2===0?20:-20)};this._traverseObject(h,t,i,u,l,`[${d}]`,o+1)});else if(typeof e=="object"&&e!==null){let h=0;for(const d in e)if(Object.prototype.hasOwnProperty.call(e,d)){const u={x:n.x+(h%3-1)*220,y:n.y-180-Math.floor(h/3)*120,z:n.z+(h%2===0?25:-25)};this._traverseObject(e[d],t,i,u,l,d,o+1),h++}}return l}};E(kl,"generatorName","objectProperty");let vd=kl;class Ni{static registerPreset(e,t){this.presets.set(e,t)}static registerTemplate(e,t){this.templates.set(e,t)}static createDashboard(e,t,i){const{title:n="Dashboard",width:s=600,height:a=400,layout:o="grid",columns:l=3,widgets:c=[]}=i;return e.addNode({type:"meta-widget",id:i.id||`dashboard-${Date.now()}`,position:t,data:{title:n,width:s,height:a,layout:o,columns:l,widgets:c.map((d,u)=>({id:d.id||`widget-${u}`,...d}))}})}static createControlCenter(e,t,i=[]){const n=i.map((s,a)=>({id:`control-${s.name}`,type:"control-panel",data:{title:s.title||s.name,controls:s.controls||[{id:"power",type:"switch",label:"Power",value:s.enabled||!1},{id:"level",type:"slider",label:"Level",value:s.level||50,min:0,max:100}]}}));return this.createDashboard(e,t,{title:"Control Center",width:800,height:500,layout:"grid",columns:2,widgets:n})}static createMonitoringDashboard(e,t,i=[]){const n=[];return i.forEach((s,a)=>{switch(s.type){case"gauge":n.push({id:`gauge-${s.name}`,type:"progress",data:{label:s.title||s.name,progressType:"gauge",value:s.value||0,max:s.max||100,color:s.color||"#4a9eff"}});break;case"progress":n.push({id:`progress-${s.name}`,type:"progress",data:{label:s.title||s.name,progressType:"bar",value:s.value||0,max:s.max||100,color:s.color||"#00ff88"}});break;case"status":n.push({id:`status-${s.name}`,type:"info",data:{text:s.title||s.name,icon:s.status==="ok"?"✅":s.status==="warning"?"⚠️":"❌"}});break;case"chart":n.push({id:`chart-${s.name}`,type:"chart",data:{title:s.title||s.name,chartType:s.chartType||"line"}});break}}),this.createDashboard(e,t,{title:"System Monitor",width:900,height:600,layout:"grid",columns:3,widgets:n})}static createWorkflowBuilder(e,t,i=[]){const n=i.map((s,a)=>({id:`step-${a}`,type:"info",data:{text:s.title||`Step ${a+1}`,icon:s.completed?"✅":s.active?"⚡":"⏳"}}));return n.push({id:"workflow-controls",type:"control-panel",data:{title:"Workflow Controls",controls:[{id:"start",type:"button",label:"Start Workflow",text:"Start"},{id:"pause",type:"button",label:"Pause",text:"Pause"},{id:"reset",type:"button",label:"Reset",text:"Reset"},{id:"auto",type:"switch",label:"Auto Mode",value:!1}]}}),this.createDashboard(e,t,{title:"Workflow Builder",width:700,height:450,layout:"flex-column",widgets:n})}static createAnalyticsDashboard(e,t,i={}){const n=[];return i.keyMetrics&&i.keyMetrics.forEach((s,a)=>{n.push({id:`metric-${a}`,type:"progress",data:{label:s.name,progressType:"circular",value:s.value,max:s.max||100,color:s.color||"#3498db"}})}),i.charts&&i.charts.forEach((s,a)=>{n.push({id:`chart-${a}`,type:"chart",data:{title:s.title,chartType:s.type||"line"}})}),n.push({id:"analytics-controls",type:"control-panel",data:{title:"Analytics Controls",controls:[{id:"timeRange",type:"select",label:"Time Range",value:"7d",options:[{value:"1d",label:"Last 24 Hours"},{value:"7d",label:"Last 7 Days"},{value:"30d",label:"Last 30 Days"},{value:"90d",label:"Last 90 Days"}]},{id:"refresh",type:"button",label:"Refresh Data",text:"Refresh"},{id:"autoRefresh",type:"switch",label:"Auto Refresh",value:!0}]}}),this.createDashboard(e,t,{title:"Analytics Dashboard",width:1e3,height:700,layout:"grid",columns:3,widgets:n})}static createFormBuilder(e,t,i={}){const n=[];return i.fields&&i.fields.forEach((s,a)=>{n.push({id:`field-${a}`,type:"control-panel",data:{title:s.label||`Field ${a+1}`,controls:[{id:s.name||`field${a}`,type:s.type||"text",label:s.label||"",value:s.defaultValue||"",required:s.required||!1,placeholder:s.placeholder||"",options:s.options||[]}]}})}),n.push({id:"form-actions",type:"control-panel",data:{title:"Form Actions",controls:[{id:"submit",type:"button",label:"Submit Form",text:"Submit"},{id:"clear",type:"button",label:"Clear Form",text:"Clear"},{id:"save",type:"button",label:"Save Draft",text:"Save Draft"}]}}),this.createDashboard(e,t,{title:i.title||"Form Builder",width:600,height:500,layout:"flex-column",widgets:n})}static createDataVisualization(e,t,i=[]){const n=[];return i.forEach((s,a)=>{n.push({id:`chart-${a}`,type:"chart",data:{title:s.name||`Dataset ${a+1}`,chartType:s.chartType||"line"}}),s.stats&&n.push({id:`stats-${a}`,type:"info",data:{text:`Records: ${s.stats.count||0}
Avg: ${s.stats.average||0}`,icon:"📊"}})}),n.push({id:"viz-controls",type:"control-panel",data:{title:"Visualization Controls",controls:[{id:"chartType",type:"select",label:"Chart Type",value:"line",options:[{value:"line",label:"Line Chart"},{value:"bar",label:"Bar Chart"},{value:"pie",label:"Pie Chart"},{value:"scatter",label:"Scatter Plot"}]},{id:"showGrid",type:"switch",label:"Show Grid",value:!0},{id:"animate",type:"switch",label:"Animate",value:!0}]}}),this.createDashboard(e,t,{title:"Data Visualization",width:900,height:600,layout:"grid",columns:2,widgets:n})}static createGameHUD(e,t,i={}){const n=[];return i.playerStats&&n.push({id:"player-stats",type:"control-panel",data:{title:"Player Stats",controls:Object.keys(i.playerStats).map(s=>({id:s,type:"progress",label:s.charAt(0).toUpperCase()+s.slice(1),value:i.playerStats[s],max:100}))}}),n.push({id:"health",type:"progress",data:{label:"Health",progressType:"bar",value:i.health||100,max:100,color:"#e74c3c",animated:!0}}),n.push({id:"energy",type:"progress",data:{label:"Energy",progressType:"bar",value:i.energy||100,max:100,color:"#3498db",animated:!0}}),n.push({id:"minimap",type:"info",data:{text:"Mini Map",icon:"🗺️"}}),n.push({id:"inventory",type:"info",data:{text:`Items: ${i.inventoryCount||0}`,icon:"🎒"}}),n.push({id:"game-controls",type:"control-panel",data:{title:"Game Controls",controls:[{id:"pause",type:"button",label:"Pause",text:"⏸️"},{id:"settings",type:"button",label:"Settings",text:"⚙️"},{id:"menu",type:"button",label:"Menu",text:"📋"}]}}),this.createDashboard(e,t,{title:"Game HUD",width:800,height:200,layout:"flex-row",widgets:n})}static connectWidgets(e,t,i,n="data"){const s=e.addEdge(t,i,{type:"flow",particleCount:5,particleSpeed:.3,particleColor:n==="data"?65416:n==="control"?16739125:4890367,flowDirection:1,thickness:2,label:n});return e.on("meta-widget:control-changed",a=>{a.metaWidget===t&&this.propagateData(a,i,n)}),s}static propagateData(e,t,i){const{controlId:n,value:s}=e;t.getAllWidgets().forEach(a=>{if(a.data.controls){const o=a.data.controls.find(l=>l.id===n);o&&(o.value=s,t.updateWidget(a.id,a.data))}})}static exportConfiguration(e){return{type:"meta-widget",layout:e.getLayoutData(),position:{x:e.position.x,y:e.position.y,z:e.position.z},data:e.data}}static importConfiguration(e,t){return e.addNode({type:"meta-widget",position:t.position,data:t.data})}static createWidgetLibrary(){return{slider:(e,t,i=50,n=0,s=100)=>({id:e||"slider",type:"control-panel",data:{title:"Slider Control",controls:[{id:e,type:"slider",label:t,value:i,min:n,max:s}]}}),button:(e,t,i)=>({id:e||"button",type:"control-panel",data:{title:"Button Control",controls:[{id:e,type:"button",label:t||i,text:i||t}]}}),progressBar:(e,t,i=0,n=100)=>({id:e||"progress",type:"progress",data:{label:t,progressType:"bar",value:i,max:n}}),gauge:(e,t,i=0,n=100)=>({id:e||"gauge",type:"progress",data:{label:t,progressType:"gauge",value:i,max:n}}),infoPanel:(e,t,i="ℹ")=>({id:e||"info",type:"info",data:{text:t,icon:i}}),chart:(e,t,i="line")=>({id:e||"chart",type:"chart",data:{title:t,chartType:i}})}}}E(Ni,"presets",new Map),E(Ni,"templates",new Map);Ni.registerPreset("monitoring",{title:"System Monitoring",layout:"grid",columns:2,widgets:["cpu-gauge","memory-gauge","disk-progress","network-chart"]});Ni.registerPreset("control-panel",{title:"Control Panel",layout:"flex-column",widgets:["power-switch","volume-slider","brightness-slider","mode-select"]});Ni.registerPreset("analytics",{title:"Analytics Dashboard",layout:"grid",columns:3,widgets:["visitors-chart","revenue-gauge","conversion-progress","goals-info"]});const P1={id:"advanced-camera",title:"Advanced Camera Controls",description:`<h3>Advanced Camera Controls</h3>
                  <p>Experience next-generation camera capabilities including intelligent auto-zoom,
                  smooth rotation controls, peek-around-corners functionality, and cinematic camera modes.</p>
                  <ul>
                    <li>Auto-zoom that adapts to graph density and node count</li>
                    <li>Auto-rotation with configurable speed and smooth damping</li>
                    <li>Peek mode - move mouse to screen edges to peek around</li>
                    <li>Cinematic mode with smooth orbital paths</li>
                    <li>Smart focus with neighbor-aware context</li>
                    <li>View sequences for automated tours</li>
                  </ul>
                  <p><strong>Controls:</strong> Ctrl+Z (Auto-zoom), Ctrl+R (Auto-rotation), P (Peek mode), Ctrl+C (Cinematic)</p>`};function L1(r){const e={title:"Advanced Camera Controls",description:"Auto-zoom, rotation, peek mode, and cinematic camera movements",init(){this.setupUI(),this.createDemoGraph(),this.setupCameraEnhancements()},setupUI(){this.ui=document.createElement("div"),this.ui.style.cssText=`
                position: absolute;
                top: 20px;
                right: 20px;
                background: rgba(20, 20, 30, 0.95);
                border: 1px solid rgba(100, 255, 150, 0.3);
                border-radius: 12px;
                padding: 20px;
                color: white;
                font-family: 'Monaco', 'Consolas', monospace;
                font-size: 12px;
                min-width: 320px;
                backdrop-filter: blur(10px);
                z-index: 1000;
            `,this.ui.innerHTML=`
                <h3 style="margin: 0 0 15px 0; color: #64FFB5;">Advanced Camera Controls</h3>

                <div style="margin-bottom: 15px;">
                    <h4 style="margin: 0 0 10px 0; color: #B3FFE5;">Auto Features:</h4>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                        <button id="toggleAutoZoom" style="padding: 8px; background: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;">Auto-Zoom OFF</button>
                        <button id="toggleAutoRotation" style="padding: 8px; background: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer;">Auto-Rotate OFF</button>
                    </div>
                </div>

                <div style="margin-bottom: 15px;">
                    <label style="display: block; margin-bottom: 8px; color: #B3FFE5;">Rotation Speed:</label>
                    <input type="range" id="rotationSpeed" min="0.005" max="0.05" step="0.005" value="0.02" style="width: 100%;">
                    <span id="rotationSpeedValue" style="color: #81C784; font-size: 11px;">0.02</span>
                </div>

                <div style="margin-bottom: 15px;">
                    <h4 style="margin: 0 0 10px 0; color: #FFD54F;">Interactive Modes:</h4>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                        <button id="togglePeekMode" style="padding: 8px; background: #FF9800; color: white; border: none; border-radius: 4px; cursor: pointer;">Peek Mode OFF</button>
                        <button id="toggleCinematicMode" style="padding: 8px; background: #9C27B0; color: white; border: none; border-radius: 4px; cursor: pointer;">Cinematic OFF</button>
                    </div>
                </div>

                <div style="margin-bottom: 15px;">
                    <h4 style="margin: 0 0 10px 0; color: #FF8A65;">Smart Navigation:</h4>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                        <button id="smartFocusRandom" style="padding: 6px; background: #E91E63; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Smart Focus</button>
                        <button id="viewSequence" style="padding: 6px; background: #00BCD4; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">View Tour</button>
                    </div>
                </div>

                <div style="margin-bottom: 15px;">
                    <h4 style="margin: 0 0 10px 0; color: #B39DDB;">Graph Actions:</h4>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                        <button id="addNodes" style="padding: 6px; background: #673AB7; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Add Nodes</button>
                        <button id="removeNodes" style="padding: 6px; background: #795548; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Remove Nodes</button>
                        <button id="changeLayout" style="padding: 6px; background: #607D8B; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Change Layout</button>
                        <button id="resetCamera" style="padding: 6px; background: #424242; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Reset Camera</button>
                    </div>
                </div>

                <div id="cameraStatus" style="background: rgba(255, 255, 255, 0.1); padding: 12px; border-radius: 6px; font-size: 11px;">
                    <div id="currentMode">Mode: Orbit</div>
                    <div id="nodeCount">Nodes: 0</div>
                    <div id="autoZoomStatus">Auto-Zoom: OFF</div>
                    <div id="autoRotateStatus">Auto-Rotate: OFF</div>
                    <div id="peekStatus">Peek Mode: OFF</div>
                    <div id="cinematicStatus">Cinematic: OFF</div>
                </div>

                <div style="margin-top: 15px; padding: 10px; background: rgba(100, 255, 150, 0.1); border-radius: 6px; font-size: 10px;">
                    <strong>Keyboard Controls:</strong><br>
                    • Ctrl+Z: Toggle Auto-Zoom<br>
                    • Ctrl+R: Toggle Auto-Rotation<br>
                    • P: Toggle Peek Mode<br>
                    • Ctrl+C: Toggle Cinematic Mode<br>
                    <strong>Peek Mode:</strong> Move mouse to screen edges
                </div>
            `,document.body.appendChild(this.ui),this.setupEventListeners()},setupEventListeners(){const t=document.getElementById("toggleAutoZoom"),i=document.getElementById("toggleAutoRotation"),n=document.getElementById("rotationSpeed"),s=document.getElementById("togglePeekMode"),a=document.getElementById("toggleCinematicMode");t.addEventListener("click",()=>{const o=r.plugins.getPlugin("CameraPlugin").toggleAutoZoom();t.textContent=`Auto-Zoom ${o?"ON":"OFF"}`,t.style.background=o?"#4CAF50":"#757575",this.updateStatus()}),i.addEventListener("click",()=>{const o=r.plugins.getPlugin("CameraPlugin").toggleAutoRotation();i.textContent=`Auto-Rotate ${o?"ON":"OFF"}`,i.style.background=o?"#2196F3":"#757575",this.updateStatus()}),n.addEventListener("input",o=>{const l=parseFloat(o.target.value);r.plugins.getPlugin("CameraPlugin").setRotationSpeed(l),document.getElementById("rotationSpeedValue").textContent=l.toFixed(3)}),s.addEventListener("click",()=>{const o=r.plugins.getPlugin("CameraPlugin").togglePeekMode();s.textContent=`Peek Mode ${o?"ON":"OFF"}`,s.style.background=o?"#FF9800":"#757575",this.updateStatus()}),a.addEventListener("click",()=>{const o=r.plugins.getPlugin("CameraPlugin").toggleCinematicMode();a.textContent=`Cinematic ${o?"ON":"OFF"}`,a.style.background=o?"#9C27B0":"#757575",this.updateStatus()}),document.getElementById("smartFocusRandom").addEventListener("click",()=>{this.performSmartFocus()}),document.getElementById("viewSequence").addEventListener("click",()=>{this.startViewSequence()}),document.getElementById("addNodes").addEventListener("click",()=>{this.addRandomNodes(5)}),document.getElementById("removeNodes").addEventListener("click",()=>{this.removeRandomNodes(3)}),document.getElementById("changeLayout").addEventListener("click",()=>{this.randomizeLayout()}),document.getElementById("resetCamera").addEventListener("click",()=>{r.plugins.getPlugin("CameraPlugin").resetView()}),r.on("camera:autoZoomToggled",()=>this.updateStatus()),r.on("camera:autoRotationToggled",()=>this.updateStatus()),r.on("camera:peekModeToggled",()=>this.updateStatus()),r.on("camera:cinematicModeToggled",()=>this.updateStatus()),r.on("camera:peekModeEntered",()=>{console.log("Peek mode entered - camera peeking around")}),r.on("camera:peekModeExited",()=>{console.log("Peek mode exited - camera returned to normal")})},createDemoGraph(){this.nodes=[],this.edges=[],this.layouts=["force","circular","grid","hierarchical"],this.createCluster("center",{x:0,y:0,z:0},8,150),this.createCluster("left",{x:-300,y:100,z:50},6,100),this.createCluster("right",{x:300,y:-100,z:-50},7,120),this.createCluster("top",{x:0,y:300,z:80},5,80),this.connectClusters(),this.updateStatus()},createCluster(t,i,n,s){const a=[];for(let o=0;o<n;o++){const l=o/n*Math.PI*2,c=s*(.3+Math.random()*.7),h=(Math.random()-.5)*s*.5,d={x:i.x+Math.cos(l)*c,y:i.y+Math.sin(l)*c+h,z:i.z+(Math.random()-.5)*100},u=["ControlPanelNode","ProgressNode","TextMeshNode","ProceduralShapeNode"],f=r.addNode({id:`${t}_node_${o}`,type:u[o%u.length],position:d,data:{cluster:t,mass:1+Math.random(),content:`Node ${t}-${o}`}});this.nodes.push(f),a.push(f)}for(let o=0;o<a.length;o++){const l=Math.min(3,a.length-1);for(let c=0;c<l;c++){const h=(o+c+1)%a.length;if(o!==h&&!this.hasEdge(a[o],a[h])){const d=r.addEdge({id:`${t}_edge_${o}_${h}`,source:a[o],target:a[h],type:Math.random()>.5?"SpringEdge":"BezierEdge"});this.edges.push(d)}}}},connectClusters(){const t=["center","left","right","top"];t.forEach((i,n)=>{t.forEach((s,a)=>{if(n<a){const o=this.nodes.filter(c=>c.data.cluster===i),l=this.nodes.filter(c=>c.data.cluster===s);if(o.length>0&&l.length>0){const c=o[Math.floor(Math.random()*o.length)],h=l[Math.floor(Math.random()*l.length)],d=r.addEdge({id:`inter_${i}_${s}`,source:c,target:h,type:"FlowEdge",data:{isInterCluster:!0}});this.edges.push(d)}}})})},hasEdge(t,i){return this.edges.some(n=>n.source===t&&n.target===i||n.source===i&&n.target===t)},setupCameraEnhancements(){r.plugins.getPlugin("CameraPlugin").updateAdvancedSettings({autoZoom:{enabled:!1,transitionDuration:1.5,targetPadding:2,nodeCountThreshold:8},rotation:{autoRotateSpeed:.02,smoothDamping:.15},peekMode:{peekDistance:120,peekSpeed:.6,returnDuration:.8},cinematic:{cinematicSpeed:.4,cinematicRadius:600,cinematicHeight:300}})},performSmartFocus(){if(this.nodes.length===0)return;const t=this.nodes[Math.floor(Math.random()*this.nodes.length)];r.plugins.getPlugin("CameraPlugin").smartFocusOnNode(t,{considerNeighbors:!0,includeEdges:!0,transitionDuration:1.2,contextRadius:250}),console.log(`Smart focus on node: ${t.id} (cluster: ${t.data.cluster})`)},async startViewSequence(){if(this.nodes.length<4)return;const t=["center","left","right","top"],i=[];t.forEach(s=>{const a=this.nodes.filter(o=>o.data.cluster===s);a.length>0&&i.push(a[Math.floor(Math.random()*a.length)])});const n=r.plugins.getPlugin("CameraPlugin");console.log("Starting view sequence tour..."),await n.createViewSequence(i,{duration:1.5,pause:2,includeOverview:!0,smoothTransitions:!0}),console.log("View sequence tour completed")},addRandomNodes(t){const i=["center","left","right","top"];for(let n=0;n<t;n++){const s=i[Math.floor(Math.random()*i.length)],a=this.nodes.filter(o=>o.data.cluster===s);if(a.length>0){const o=a[0],l=Math.random()*Math.PI*2,c=80+Math.random()*120,h={x:o.position.x+Math.cos(l)*c,y:o.position.y+Math.sin(l)*c,z:o.position.z+(Math.random()-.5)*100},d=["ControlPanelNode","ProgressNode","TextMeshNode","ProceduralShapeNode"],u=r.addNode({id:`${s}_added_${Date.now()}_${n}`,type:d[Math.floor(Math.random()*d.length)],position:h,data:{cluster:s,mass:1+Math.random(),content:`Added Node ${n}`}});if(this.nodes.push(u),Math.random()>.3){const f=a[Math.floor(Math.random()*a.length)],m=r.addEdge({id:`added_edge_${Date.now()}_${n}`,source:u,target:f,type:"BezierEdge"});this.edges.push(m)}}}this.updateStatus(),console.log(`Added ${t} nodes to the graph`)},removeRandomNodes(t){if(!(this.nodes.length<=10)){for(let i=0;i<t&&this.nodes.length>10;i++){const n=this.nodes[Math.floor(Math.random()*this.nodes.length)];this.edges=this.edges.filter(s=>s.source===n||s.target===n?(r.removeEdge(s.id),!1):!0),r.removeNode(n.id),this.nodes=this.nodes.filter(s=>s!==n)}this.updateStatus(),console.log(`Removed ${t} nodes from the graph`)}},randomizeLayout(){var s,a;const i=(this.layouts.indexOf(((s=r.layoutManager)==null?void 0:s.getActiveLayoutName())||"force")+1)%this.layouts.length,n=this.layouts[i];(a=r.layoutManager)==null||a.applyLayout(n),console.log(`Applied layout: ${n}`)},updateStatus(){const t=r.plugins.getPlugin("CameraPlugin"),i=t.getAdvancedControlsStatus(),n=t.getCameraMode();document.getElementById("currentMode").textContent=`Mode: ${n}`,document.getElementById("nodeCount").textContent=`Nodes: ${this.nodes.length}`,document.getElementById("autoZoomStatus").textContent=`Auto-Zoom: ${i.autoZoom?"ON":"OFF"}`,document.getElementById("autoRotateStatus").textContent=`Auto-Rotate: ${i.autoRotation?"ON":"OFF"}`,document.getElementById("peekStatus").textContent=`Peek Mode: ${i.peekMode?"ON":"OFF"}`,document.getElementById("cinematicStatus").textContent=`Cinematic: ${i.cinematicMode?"ON":"OFF"}`},dispose(){this.ui&&this.ui.parentNode&&this.ui.parentNode.removeChild(this.ui),this.nodes.forEach(t=>r.removeNode(t.id)),this.edges.forEach(t=>r.removeEdge(t.id))}};return e.init(),e}const R1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:L1,demoMetadata:P1},Symbol.toStringTag,{value:"Module"})),D1={id:"advanced-edges",title:"Advanced Edge Types",description:`<h3>Advanced Edge Types Demo</h3>
                  <p>Demonstrating the enhanced edge system with animated flows, physics-based springs, and bezier curves.</p>
                  <ul>
                    <li><strong>Flow Edges:</strong> Animated particle flows with direction control</li>
                    <li><strong>Spring Edges:</strong> Physics-based spring connections with tension visualization</li>
                    <li><strong>Bezier Edges:</strong> Smooth curves with automatic and manual control points</li>
                    <li><strong>Dynamic Properties:</strong> Real-time control over flow direction, spring tension, and curve parameters</li>
                  </ul>
                  <p><em>Watch the particles flow and springs react to node movement!</em></p>`};function N1(r){r.importGraphFromJSON({nodes:[],edges:[]});const e=r.addNode(new Ka("edge-controls",{x:0,y:0,z:0},{title:"Edge Controls",width:300,height:280,controls:[{id:"flowSpeed",type:"slider",label:"Flow Speed",min:.1,max:2,value:.8,step:.1},{id:"flowDirection",type:"select",label:"Flow Direction",value:"1",options:[{value:"1",label:"Forward"},{value:"-1",label:"Reverse"},{value:"0",label:"Bidirectional"}]},{id:"springStiffness",type:"slider",label:"Spring Stiffness",min:.001,max:.02,value:.008,step:.001},{id:"curveTension",type:"slider",label:"Curve Tension",min:.1,max:1,value:.4,step:.1},{id:"showControls",type:"switch",label:"Show Control Points",value:!1}]},2)),t=[];[{x:-400,y:200,label:"Source A"},{x:400,y:200,label:"Target A"},{x:-400,y:-200,label:"Source B"},{x:400,y:-200,label:"Target B"},{x:-600,y:0,label:"Hub L"},{x:600,y:0,label:"Hub R"},{x:0,y:300,label:"Top"},{x:0,y:-300,label:"Bottom"}].forEach((l,c)=>{const h=r.addNode(new un(`node-${c}`,{x:l.x,y:l.y,z:0},{text:l.label,fontSize:14,height:4,color:3447003,bevelEnabled:!0,align:"center"},1.5));t.push(h)});const n={flows:[],springs:[],beziers:[]};n.flows.push(r.addEdge(t[0],t[1],{type:"flow",particleCount:20,particleSpeed:.8,particleSize:4,particleColor:65416,flowDirection:1,animated:!0,glowEffect:!0,thickness:3,color:54442})),n.flows.push(r.addEdge(t[2],t[3],{type:"flow",particleCount:15,particleSpeed:.6,particleSize:3,particleColor:16739125,flowDirection:-1,animated:!0,glowEffect:!0,thickness:3,color:16747586})),n.flows.push(r.addEdge(t[4],t[5],{type:"flow",particleCount:25,particleSpeed:.5,particleSize:2,particleColor:10181046,flowDirection:0,animated:!0,glowEffect:!0,thickness:2,color:11568332})),n.springs.push(r.addEdge(e,t[6],{type:"spring",restLength:300,stiffness:.008,springCoils:8,springRadius:6,springColor:15158332,showTension:!0,tensionColorMin:65280,tensionColorMax:16711680,enablePhysics:!1})),n.springs.push(r.addEdge(e,t[7],{type:"spring",restLength:300,stiffness:.008,springCoils:6,springRadius:8,springColor:15965202,showTension:!0,tensionColorMin:65280,tensionColorMax:16711680,enablePhysics:!1})),n.beziers.push(r.addEdge(t[0],e,{type:"bezier",curveTension:.4,curveType:"cubic",autoControlPoints:!0,controlPointsVisible:!1,segments:60,color:9323693,thickness:3,gradientColors:[3447003,9323693]})),n.beziers.push(r.addEdge(t[1],e,{type:"bezier",curveTension:.3,curveType:"cubic",autoControlPoints:!0,controlPointsVisible:!1,segments:60,color:2600544,thickness:3,gradientColors:[3447003,2600544]})),n.beziers.push(r.addEdge(t[2],e,{type:"bezier",curveTension:.5,curveType:"cubic",autoControlPoints:!0,controlPointsVisible:!1,segments:60,color:15105570,thickness:3,gradientColors:[3447003,15105570]})),n.beziers.push(r.addEdge(t[3],e,{type:"bezier",curveTension:.35,curveType:"cubic",autoControlPoints:!0,controlPointsVisible:!1,segments:60,color:3066993,thickness:3,gradientColors:[3447003,3066993]})),n.flows.push(r.addEdge(t[4],t[0],{type:"flow",particleCount:12,particleSpeed:.4,particleSize:2,particleColor:1752220,flowDirection:1,animated:!0,thickness:2,color:4770224})),n.flows.push(r.addEdge(t[5],t[1],{type:"flow",particleCount:12,particleSpeed:.4,particleSize:2,particleColor:1752220,flowDirection:1,animated:!0,thickness:2,color:4770224})),r.on("graph:node:controlChanged",l=>{const{controlId:c,value:h}=l;switch(c){case"flowSpeed":n.flows.forEach(u=>{u.setParticleSpeed&&u.setParticleSpeed(parseFloat(h))});break;case"flowDirection":const d=parseInt(h);n.flows.forEach(u=>{u.setFlowDirection&&u.setFlowDirection(d)});break;case"springStiffness":n.springs.forEach(u=>{u.setStiffness&&u.setStiffness(parseFloat(h))});break;case"curveTension":n.beziers.forEach(u=>{u.setCurveTension&&u.setCurveTension(parseFloat(h))});break;case"showControls":n.beziers.forEach(u=>{u.setControlPointsVisible&&u.setControlPointsVisible(h)});break}}),[{id:"flow-info",position:{x:-400,y:350,z:0},text:`Flow Edges
Animated particles
show data flow`,color:65416},{id:"spring-info",position:{x:0,y:450,z:0},text:`Spring Edges
Physics-based
connections`,color:15158332},{id:"bezier-info",position:{x:400,y:350,z:0},text:`Bezier Edges
Smooth curves
with gradients`,color:9323693}].forEach(l=>{r.addNode(new un(l.id,l.position,{text:l.text,fontSize:12,height:3,color:l.color,bevelEnabled:!0,align:"center",animated:!0,animationType:"float"}))});let a=0;const o=()=>{a+=.016,n.springs.forEach((l,c)=>{if(l.setRestLength){const d=Math.sin(a*.5+c)*50;l.setRestLength(300+d)}}),n.beziers.forEach((l,c)=>{if(l.setCurveTension){const d=Math.sin(a*.3+c*.5)*.2;l.setCurveTension(Math.max(.1,.4+d))}}),requestAnimationFrame(o)};return o(),setTimeout(()=>{r.centerView(e,1e3)},100),r}const I1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:N1,demoMetadata:D1},Symbol.toStringTag,{value:"Module"})),k1={id:"advanced-layouts",title:"Advanced Layout Systems",description:`<h3>Advanced Layout Systems</h3>
                  <p>Demonstrates next-generation layout capabilities including constraint-based positioning,
                  nested container layouts, adaptive layout selection, and inter-layout connectivity.</p>
                  <ul>
                    <li>Constraint-based layouts with distance, position, and angle constraints</li>
                    <li>Nested container layouts with hierarchical arrangement</li>
                    <li>Adaptive layouts that automatically select optimal arrangements</li>
                    <li>Layout connectors for visualizing relationships between layout regions</li>
                    <li>Morphing transitions between different layout types</li>
                    <li>Hybrid layout modes combining multiple layout systems</li>
                  </ul>`};function O1(r){const e={title:"Advanced Layout Systems",description:"Constraint-based, nested, adaptive, and connected layouts with morphing transitions",init(){this.setupUI(),this.createDemoGraph(),this.setupAdvancedLayoutManager()},setupUI(){this.ui=document.createElement("div"),this.ui.style.cssText=`
                position: absolute;
                top: 20px;
                left: 20px;
                background: rgba(20, 20, 30, 0.95);
                border: 1px solid rgba(100, 150, 255, 0.3);
                border-radius: 12px;
                padding: 20px;
                color: white;
                font-family: 'Monaco', 'Consolas', monospace;
                font-size: 12px;
                min-width: 300px;
                backdrop-filter: blur(10px);
                z-index: 1000;
            `,this.ui.innerHTML=`
                <h3 style="margin: 0 0 15px 0; color: #64B5F6;">Advanced Layout Systems</h3>

                <div style="margin-bottom: 15px;">
                    <label style="display: block; margin-bottom: 8px; color: #B3E5FC;">Layout Type:</label>
                    <select id="layoutType" style="width: 100%; padding: 6px; background: #1a1a2e; color: white; border: 1px solid #444; border-radius: 4px;">
                        <option value="force">Force Layout</option>
                        <option value="hierarchical">Hierarchical</option>
                        <option value="circular">Circular</option>
                        <option value="grid">Grid</option>
                        <option value="constraint">Constraint-Based</option>
                        <option value="nested">Nested Containers</option>
                        <option value="adaptive">Adaptive</option>
                        <option value="hybrid">Hybrid Mode</option>
                    </select>
                </div>

                <div style="margin-bottom: 15px;">
                    <label style="display: block; margin-bottom: 8px; color: #B3E5FC;">Layout Mode:</label>
                    <select id="layoutMode" style="width: 100%; padding: 6px; background: #1a1a2e; color: white; border: 1px solid #444; border-radius: 4px;">
                        <option value="standard">Standard</option>
                        <option value="constraint">Constraint</option>
                        <option value="nested">Nested</option>
                        <option value="adaptive">Adaptive</option>
                        <option value="hybrid">Hybrid</option>
                    </select>
                </div>

                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin-bottom: 15px;">
                    <button id="applyLayout" style="padding: 8px; background: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer;">Apply Layout</button>
                    <button id="morphLayouts" style="padding: 8px; background: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;">Morph Demo</button>
                </div>

                <div style="margin-bottom: 15px;">
                    <h4 style="margin: 0 0 10px 0; color: #81C784;">Features:</h4>
                    <label style="display: block; margin-bottom: 5px;">
                        <input type="checkbox" id="enableConstraints" style="margin-right: 8px;"> Constraints
                    </label>
                    <label style="display: block; margin-bottom: 5px;">
                        <input type="checkbox" id="enableNesting" style="margin-right: 8px;"> Nesting
                    </label>
                    <label style="display: block; margin-bottom: 5px;">
                        <input type="checkbox" id="enableAdaptive" style="margin-right: 8px;"> Adaptive
                    </label>
                    <label style="display: block; margin-bottom: 5px;">
                        <input type="checkbox" id="enableConnections" checked style="margin-right: 8px;"> Connections
                    </label>
                </div>

                <div style="margin-bottom: 15px;">
                    <h4 style="margin: 0 0 10px 0; color: #FFB74D;">Actions:</h4>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                        <button id="addConstraint" style="padding: 6px; background: #FF9800; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Add Constraint</button>
                        <button id="addContainer" style="padding: 6px; background: #9C27B0; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Add Container</button>
                        <button id="forceAdapt" style="padding: 6px; background: #E91E63; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Force Adapt</button>
                        <button id="showConnections" style="padding: 6px; background: #00BCD4; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px;">Show Connections</button>
                    </div>
                </div>

                <div id="layoutInfo" style="background: rgba(255, 255, 255, 0.1); padding: 10px; border-radius: 6px; font-size: 11px;">
                    <div id="currentLayout">Current: Standard</div>
                    <div id="nodeCount">Nodes: 0</div>
                    <div id="edgeCount">Edges: 0</div>
                    <div id="layoutMetrics">Density: 0.00</div>
                </div>
            `,document.body.appendChild(this.ui),this.setupEventListeners()},setupEventListeners(){const t=document.getElementById("applyLayout"),i=document.getElementById("morphLayouts"),n=document.getElementById("enableConstraints"),s=document.getElementById("enableNesting"),a=document.getElementById("enableAdaptive"),o=document.getElementById("enableConnections");t.addEventListener("click",()=>{const l=document.getElementById("layoutType").value,c=document.getElementById("layoutMode").value;this.applySelectedLayout(l,c)}),i.addEventListener("click",()=>{this.demonstrateMorphing()}),n.addEventListener("change",l=>{this.layoutManager.enableAdvancedFeatures({constraints:l.target.checked})}),s.addEventListener("change",l=>{this.layoutManager.enableAdvancedFeatures({nesting:l.target.checked})}),a.addEventListener("change",l=>{this.layoutManager.enableAdvancedFeatures({adaptive:l.target.checked})}),o.addEventListener("change",l=>{this.layoutManager.enableAdvancedFeatures({connections:l.target.checked}),l.target.checked?this.layoutManager.activateConnections():this.layoutManager.deactivateConnections()}),document.getElementById("addConstraint").addEventListener("click",()=>{this.addRandomConstraint()}),document.getElementById("addContainer").addEventListener("click",()=>{this.addContainerNode()}),document.getElementById("forceAdapt").addEventListener("click",()=>{this.forceAdaptation()}),document.getElementById("showConnections").addEventListener("click",()=>{this.showLayoutConnections()}),document.getElementById("layoutType").addEventListener("change",l=>{this.updateLayoutMode(l.target.value)})},updateLayoutMode(t){const i=document.getElementById("layoutMode");switch(t){case"constraint":i.value="constraint";break;case"nested":i.value="nested";break;case"adaptive":i.value="adaptive";break;case"hybrid":i.value="hybrid";break;default:i.value="standard"}},createDemoGraph(){this.nodes=[],this.edges=[],this.containers=[];for(let t=0;t<20;t++){const i=r.addNode({id:`node_${t}`,type:t%4===0?"ControlPanelNode":t%4===1?"ProgressNode":"ShapeNode",position:{x:(Math.random()-.5)*400,y:(Math.random()-.5)*400,z:(Math.random()-.5)*200},data:{group:t<10?"A":"B",mass:1+Math.random()*2,clusterId:Math.floor(t/5)}});this.nodes.push(i)}for(let t=20;t<30;t++){const i=Math.floor((t-20)/3),n=this.nodes[i],s=r.addNode({id:`hierarchy_${t}`,type:"TextMeshNode",position:{x:n.position.x+(Math.random()-.5)*100,y:n.position.y-100,z:n.position.z+(Math.random()-.5)*50},data:{group:"hierarchy",parent:n.id}});this.nodes.push(s);const a=r.addEdge({id:`hierarchy_edge_${t}`,source:n,target:s,type:"SpringEdge",data:{constraintType:"elastic",constraintParams:{idealLength:120,stiffness:.3}}});this.edges.push(a)}for(let t=0;t<25;t++){const i=this.nodes[Math.floor(Math.random()*this.nodes.length)],n=this.nodes[Math.floor(Math.random()*this.nodes.length)];if(i!==n&&!this.hasEdge(i,n)){const s=r.addEdge({id:`edge_${t}`,source:i,target:n,type:Math.random()>.7?"FlowEdge":"BezierEdge",data:{constraintType:Math.random()>.5?"elastic":"rigid",constraintParams:{idealLength:150+Math.random()*100,stiffness:.1+Math.random()*.5}}});this.edges.push(s)}}this.updateLayoutInfo()},hasEdge(t,i){return this.edges.some(n=>n.source===t&&n.target===i||n.source===i&&n.target===t)},setupAdvancedLayoutManager(){this.layoutManager=r.layoutManager,this.layoutManager.enableAdvancedFeatures({constraints:!1,nesting:!1,adaptive:!1,connections:!0,autoMode:!1}),this.registerLayoutRegions(),r.on("layout:started",t=>{this.updateLayoutInfo(t)}),r.on("layout:adapted",t=>{console.log(`Layout adapted from ${t.from} to ${t.to} (${t.reason})`),this.updateLayoutInfo()})},registerLayoutRegions(){const t=this.nodes.filter(s=>s.data.group==="A"),i=this.nodes.filter(s=>s.data.group==="B"),n=this.nodes.filter(s=>s.data.group==="hierarchy");if(t.length>0){const s=this.calculateNodeGroupBounds(t);this.layoutManager.registerLayoutRegion("groupA",s,"force",t)}if(i.length>0){const s=this.calculateNodeGroupBounds(i);this.layoutManager.registerLayoutRegion("groupB",s,"circular",i)}if(n.length>0){const s=this.calculateNodeGroupBounds(n);this.layoutManager.registerLayoutRegion("hierarchy",s,"hierarchical",n)}this.addLayoutConnections()},calculateNodeGroupBounds(t){if(t.length===0)return{min:{x:0,y:0,z:0},max:{x:0,y:0,z:0}};const i=t.map(a=>a.position),n={x:Math.min(...i.map(a=>a.x))-50,y:Math.min(...i.map(a=>a.y))-50,z:Math.min(...i.map(a=>a.z))-50},s={x:Math.max(...i.map(a=>a.x))+50,y:Math.max(...i.map(a=>a.y))+50,z:Math.max(...i.map(a=>a.z))+50};return{min:new M(n.x,n.y,n.z),max:new M(s.x,s.y,s.z),center:new M((n.x+s.x)/2,(n.y+s.y)/2,(n.z+s.z)/2)}},addLayoutConnections(){const t=this.nodes.filter(n=>n.data.group==="A"),i=this.nodes.filter(n=>n.data.group==="B");if(t.length>0&&i.length>0)for(let n=0;n<3;n++){const s=t[Math.floor(Math.random()*t.length)],a=i[Math.floor(Math.random()*i.length)];this.layoutManager.addLayoutConnection(s.id,a.id,{type:"curved",metadata:{color:65416,width:3,opacity:.8}})}},applySelectedLayout(t,i){const n={mode:i,baseLayout:t!=="constraint"&&t!=="nested"&&t!=="adaptive"?t:"force",animate:!0,animationDuration:.8};switch(t){case"constraint":n.enableCollisionAvoidance=!0,n.iterations=100;break;case"nested":n.containerPadding=60,n.autoResize=!0;break;case"adaptive":n.enableAutoAdaptation=!0,n.adaptationDelay=3e3;break;case"hybrid":n.hybridPriority=["adaptive","nested","constraint","standard"];break}this.layoutManager.setLayoutMode(i),this.layoutManager.applyLayout(t,n)},async demonstrateMorphing(){const t=["circular","grid","force","hierarchical"];for(const i of t)await new Promise(n=>{this.applySelectedLayout(i,"standard"),setTimeout(n,2e3)})},addRandomConstraint(){if(this.nodes.length<2)return;const t=["distance","position","angle"],i=t[Math.floor(Math.random()*t.length)];switch(i){case"distance":const n=this.nodes[Math.floor(Math.random()*this.nodes.length)],s=this.nodes[Math.floor(Math.random()*this.nodes.length)];n!==s&&this.layoutManager.addDistanceConstraint(n.id,s.id,{distance:200+Math.random()*100,strength:.5+Math.random()*.5});break;case"position":const a=this.nodes[Math.floor(Math.random()*this.nodes.length)],o=new M((Math.random()-.5)*300,(Math.random()-.5)*300,(Math.random()-.5)*150);this.layoutManager.addPositionConstraint(a.id,o,{strength:.8});break;case"angle":if(this.nodes.length>=3){const l=this.nodes.slice().sort(()=>Math.random()-.5).slice(0,3);this.layoutManager.addAngleConstraint(l[0].id,l[1].id,l[2].id,{angle:Math.PI/2+(Math.random()-.5)*Math.PI/2,strength:.3})}break}console.log(`Added ${i} constraint`)},addContainerNode(){const t=r.addNode({id:`container_${Date.now()}`,type:"MetaWidgetNode",position:{x:(Math.random()-.5)*200,y:(Math.random()-.5)*200,z:0},data:{isContainer:!0,childLayout:"grid",layoutConfig:{columns:3,spacing:40},autoResize:!0}}),i=this.nodes.filter(s=>!s.data.parentContainer),n=i.slice(0,Math.min(6,i.length));n.forEach(s=>{this.layoutManager.addNodeToContainer(s,t.id)}),this.containers.push(t),this.nodes.push(t),console.log(`Added container with ${n.length} child nodes`)},forceAdaptation(){const t=["force","circular","grid","hierarchical"],i=this.layoutManager.getCurrentLayout(),n=t.filter(a=>a!==i.name),s=n[Math.floor(Math.random()*n.length)];this.layoutManager.forceAdaptation(s,"manual_demo"),console.log(`Forced adaptation to ${s}`)},showLayoutConnections(){const t=this.layoutManager.connector.getAllConnections();console.log("Current layout connections:",t),t.forEach(i=>{if(i.visualElement&&i.visualElement.material){const n=i.visualElement.material,s=n.opacity;n.opacity=1,setTimeout(()=>{n.opacity=s},2e3)}})},updateLayoutInfo(t){var l;const i=this.nodes.length,n=this.edges.length,s=i>1?n/(i*(i-1)/2):0,a=(l=this.layoutManager)==null?void 0:l.getLayoutCapabilities(),o=(a==null?void 0:a.currentMode)||"Unknown";document.getElementById("currentLayout").textContent=`Current: ${o}`,document.getElementById("nodeCount").textContent=`Nodes: ${i}`,document.getElementById("edgeCount").textContent=`Edges: ${n}`,document.getElementById("layoutMetrics").textContent=`Density: ${s.toFixed(2)}`},dispose(){this.ui&&this.ui.parentNode&&this.ui.parentNode.removeChild(this.ui),this.nodes.forEach(t=>r.removeNode(t.id)),this.edges.forEach(t=>r.removeEdge(t.id))}};return e.init(),e}const z1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:O1,demoMetadata:k1},Symbol.toStringTag,{value:"Module"})),U1={id:"advanced-widgets",title:"Advanced Widgets & Shapes",description:`<h3>Advanced Widgets & Shapes Demo</h3>
                  <p>Showcasing the enhanced widget system with interactive controls, progress indicators, canvas drawing, and advanced shape generation.</p>
                  <ul>
                    <li><strong>Control Panel Node:</strong> Interactive sliders, buttons, and controls</li>
                    <li><strong>Progress Node:</strong> Various progress indicators (bars, circles, gauges, steps)</li>
                    <li><strong>Canvas Node:</strong> Drawing canvas with multiple tools</li>
                    <li><strong>Procedural Shape Node:</strong> Generated fractal and organic shapes</li>
                    <li><strong>Text Mesh Node:</strong> 3D text with advanced typography</li>
                    <li><strong>Flow Edge:</strong> Animated particle flows</li>
                    <li><strong>Spring Edge:</strong> Physics-based spring connections</li>
                    <li><strong>Bezier Edge:</strong> Curved connections with control points</li>
                  </ul>
                  <p><em>Interact with the control panels and try the different drawing tools!</em></p>`};function F1(r){r.importGraphFromJSON({nodes:[],edges:[]});const e=r.addNode(new un("hub",{x:0,y:0,z:0},{text:`Advanced
Widgets`,fontSize:24,height:8,color:4890367,bevelEnabled:!0,align:"center",animated:!0,animationType:"pulse"},2)),t=r.addNode(new Ka("control-panel",{x:-300,y:150,z:0},{title:"System Controls",width:280,height:250,controls:[{id:"volume",type:"slider",label:"Volume",min:0,max:100,value:75,step:1},{id:"quality",type:"select",label:"Quality",value:"high",options:[{value:"low",label:"Low"},{value:"medium",label:"Medium"},{value:"high",label:"High"},{value:"ultra",label:"Ultra"}]},{id:"enabled",type:"switch",label:"Enable Effects",value:!0},{id:"apply",type:"button",label:"Apply Settings",text:"Apply"}]},1.5)),i=r.addNode(new wr("progress-bar",{x:300,y:150,z:0},{progressType:"bar",label:"Loading Progress",value:65,max:100,animated:!0,color:"#00ff88"})),n=r.addNode(new wr("progress-circle",{x:450,y:150,z:0},{progressType:"circular",label:"CPU Usage",value:45,max:100,width:120,height:120,color:"#ff6b35"})),s=r.addNode(new wr("progress-gauge",{x:600,y:150,z:0},{progressType:"gauge",label:"Temperature",value:72,max:100,width:140,height:100,color:"#ff4757"})),a=r.addNode(new Cl("canvas",{x:-400,y:-150,z:0},{title:"Drawing Canvas",width:350,height:250,showToolbar:!0,enableDrawing:!0,canvasBackground:"#0f0f23"})),o=r.addNode(new Er("fractal",{x:200,y:-150,z:0},{shapeType:"fractal",complexity:3,size:60,color:9323693,parameters:{iterations:3,scale:.6,offset:1.2},animated:!0,wireframe:!1},2)),l=r.addNode(new Er("organic",{x:350,y:-150,z:0},{shapeType:"organic",size:80,color:2600544,parameters:{segments:32,rings:16,noise:.4,bulges:2},animated:!0,materialType:"phong"},2)),c=r.addNode(new Er("crystal",{x:500,y:-150,z:0},{shapeType:"crystal",size:70,color:3447003,parameters:{faces:8,height:80,irregularity:.15},animated:!1,materialType:"physical"},2)),h=r.addNode(new un("title",{x:-150,y:280,z:0},{text:`Interactive
Widgets`,fontSize:18,height:6,color:15158332,bevelEnabled:!0,bevelThickness:1,align:"center",animated:!0,animationType:"float"})),d=r.addNode(new un("subtitle",{x:150,y:280,z:0},{text:`Procedural
Shapes`,fontSize:18,height:6,color:15965202,bevelEnabled:!0,bevelThickness:1,align:"center",animated:!0,animationType:"wave"}));r.addEdge(e,t,{type:"flow",particleCount:15,particleSpeed:.8,particleColor:65535,flowDirection:1,animated:!0,glowEffect:!0,thickness:2,color:4890367}),r.addEdge(e,a,{type:"spring",restLength:350,stiffness:.005,springCoils:6,springRadius:8,springColor:10181046,showTension:!0,tensionColorMin:65280,tensionColorMax:16711680,enablePhysics:!1}),r.addEdge(o,l,{type:"bezier",curveTension:.4,curveType:"cubic",autoControlPoints:!0,color:2600544,thickness:3,gradientColors:[9323693,2600544]}),r.addEdge(l,c,{type:"bezier",curveTension:.3,curveType:"cubic",autoControlPoints:!0,color:3447003,thickness:3,gradientColors:[2600544,3447003]}),r.addEdge(i,n,{type:"flow",particleCount:8,particleSpeed:.6,particleColor:65416,flowDirection:1,thickness:2}),r.addEdge(n,s,{type:"flow",particleCount:8,particleSpeed:.6,particleColor:16739125,flowDirection:1,thickness:2}),r.addEdge(h,t,{type:"curved",curvature:.3,color:15158332,thickness:2,label:"Controls"}),r.addEdge(d,o,{type:"curved",curvature:.3,color:15965202,thickness:2,label:"Shapes"}),r.on("graph:node:controlChanged",m=>{const{node:v,controlId:g,value:p}=m;if(console.log(`Control "${g}" changed to:`,p),g==="volume"&&i.setValue(p),g==="quality"){const x={low:2,medium:3,high:4,ultra:5};o.setComplexity(x[p]||3)}});let u=0;const f=()=>{u+=.016;const m=50+Math.sin(u*.5)*30,v=50+Math.sin(u*.8)*40;n.setValue(Math.max(0,Math.min(100,m))),s.setValue(Math.max(0,Math.min(100,v))),requestAnimationFrame(f)};return f(),setTimeout(()=>{r.centerView(e,1e3)},100),r}const B1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:F1,demoMetadata:U1},Symbol.toStringTag,{value:"Module"})),H1={id:"all-features",title:"Full Demo",description:`<h3>Full Demo</h3>
                  <p>This is the original demonstration graph showcasing a variety of node types, edge styles, and interactions available in SpaceGraphJS.</p>
                  <ul>
                    <li>HTML Content Nodes (NoteNode)</li>
                    <li>3D Shape Nodes (Box, Sphere)</li>
                    <li>GLTF Model Loading</li>
                    <li>Image & Video Nodes</li>
                    <li>IFrame Embedding</li>
                    <li>Grouped Nodes</li>
                    <li>Various edge styles (curved, straight, dashed, gradient, arrows)</li>
                    <li>Node interactivity (sliders, buttons within HTML nodes)</li>
                  </ul>`};function G1(r){const e=["#2a2a50","#2a402a","#402a2a","#40402a","#2a4040","#402a40","#503030"];let t=0;const i=()=>e[t++%e.length],n=r.addNode(new dn("core",{x:0,y:0,z:0},{content:"<h1>🚀 READY 🧠</h1><p>Enhanced Mind Map</p>",width:300,height:110,backgroundColor:i()},2.5)),s=r.addNode(new dn("features",{x:350,y:100,z:20},{content:"<h2>Features ✨</h2><ul><li>HTML & 3D Nodes</li><li>Node Mass/Momentum</li><li>Edge Menu & Constraints</li><li>BG Toggle</li><li>3D Labels</li></ul>",width:240,height:190,backgroundColor:i(),labelLod:[{distance:1e3,style:"visibility:hidden;"}]},1.5));r.addEdge(n,s);const a=r.addNode(new Ji("box1",{x:600,y:150,z:30},{label:"Box Node 📦 (Mass 2.0)",shape:"box",size:70,color:13404211},2));r.addEdge(s,a,{constraintType:"rigid",constraintParams:{distance:180,stiffness:.08}});const o=r.addNode(new Ji("sphere1",{x:650,y:0,z:-20},{label:"Sphere Node 🌐 (Mass 1.0)",shape:"sphere",size:80,color:3386043},1));r.addEdge(a,o,{constraintType:"elastic",constraintParams:{idealLength:150,stiffness:.002}}),r.addEdge(s,o);const l=r.addNode(new dn("tech",{x:-350,y:100,z:-10},{content:"<h2>Technology 💻</h2><p><code>Three.js</code> (WebGL, CSS3D)</p><p><code>GSAP</code>, <code>ES Modules</code></p>",width:250,height:120,backgroundColor:i()}));r.addEdge(n,l);const c=r.addNode(new dn("style",{x:0,y:-250,z:0},{content:"<h2>Style 🎨</h2><p>✨ Dark/Transparent BG</p><p>🎨 Node Colors</p><p>🕸️ Dot Grid BG</p>",width:220,height:110,backgroundColor:i()}));r.addEdge(n,c,{constraintType:"weld"});const h=r.addNode(new dn("interactive",{x:350,y:-150,z:-30},{content:`<h2>Interactive</h2><p>Slider: <span class="slider-val">50</span></p>
        <input type="range" min="0" max="100" value="50" style="width: 90%; pointer-events: auto; cursor: pointer;"
               oninput="this.previousElementSibling.textContent = this.value; event.stopPropagation();"
               onpointerdown="event.stopPropagation();">
        <button onclick="alert('Button clicked!'); event.stopPropagation();" style="pointer-events: auto; cursor: pointer; margin-top: 5px;">Click</button>`,width:230,height:170,backgroundColor:i()}));r.addEdge(s,h),r.addEdge(c,h,{constraintType:"elastic",constraintParams:{idealLength:250}}),l&&c&&r.addEdge(l,c,{type:"curved",label:"Tech <-> Style (Gradient)",curvature:.4,gradientColors:[16711935,65535],thickness:4}),l&&a&&r.addEdge(l,a,{type:"straight",label:"Tech <-> Box (Gradient)",gradientColors:["#ffaa00","#00ffaa"],thickness:4,dashed:!0,dashSize:10,gapSize:5});const d=r.createNode({id:"imageNode1",type:"image",position:{x:-350,y:-150,z:40},data:{label:"Image Node 🖼️",imageUrl:"https://placehold.co/200x150.png?text=SpaceGraph.js",size:150},mass:1.2});d&&l&&r.addEdge(l,d,{type:"curved",curvature:-.3,label:"Image Link"});const u=r.createNode({id:"gltfNode1",type:"shape",position:{x:0,y:250,z:50},data:{label:"GLTF Model 🚀",shape:"gltf",gltfUrl:"https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Assets/main/Models/ToyCar/glTF-Binary/ToyCar.glb",gltfScale:80,color:15658734,lodLevels:[{distance:0,gltfUrl:"https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Assets/main/Models/ToyCar/glTF-Binary/ToyCar.glb",gltfScale:80},{distance:600,shape:"box",size:40,color:16746564},{distance:1200,shape:"sphere",size:20,color:8978244}],labelLod:[{distance:500,style:"visibility:hidden;"}]},mass:1.8});u&&n&&r.addEdge(n,u,{type:"curved",curvature:.2,label:"GLTF Link",thickness:2}),s&&c&&r.addEdge(s,c,{label:"Source Arrow",arrowhead:"source",color:16746496,thickness:2}),a&&h&&r.addEdge(a,h,{label:"Both Arrows",arrowhead:"both",color:8978176,thickness:2.5,dashed:!0,dashScale:.5,dashSize:5,gapSize:5}),o&&u&&r.addEdge(o,u,{type:"curved",label:"Curved Arrow & Label",arrowhead:!0,curvature:-.25,color:35071,thickness:3}),d&&u&&r.addEdge(d,u,{type:"curved",label:"Curved Both Arrows",arrowhead:"both",curvature:.35,gradientColors:[11141375,16755200],thickness:3,labelLod:[{distance:700,style:"visibility:hidden;"}]});const f=r.createNode({id:"videoNode1",type:"video",position:{x:-600,y:0,z:-50},data:{label:"Big Buck Bunny 🎬",videoUrl:"https://test-videos.co.uk/vids/bigbuckbunny/mp4/h264/360/Big_Buck_Bunny_360_10s_1MB.mp4",videoType:"video/mp4",width:320,height:180,autoplay:!0,muted:!0,loop:!0,controls:!0},mass:1.5});f&&l&&r.addEdge(l,f,{type:"curved",label:"Video Link",curvature:.2,arrowhead:"target"});const m=r.createNode({id:"iframeNode1",type:"iframe",position:{x:-600,y:-250,z:0},data:{label:"Embedded Content 🌐",iframeUrl:"https://en.m.wikipedia.org/wiki/Special:Random",width:400,height:300},mass:1.4});m&&f&&r.addEdge(f,m,{type:"curved",label:"IFrame Link",curvature:-.25,arrowhead:"target",color:13386956});const v=r.createNode({id:"groupChild1",type:"html",position:{x:200,y:300,z:0},data:{label:"Child 1",content:"<p>Inside Group</p>",width:120,height:60,backgroundColor:"#445566"}}),g=r.createNode({id:"groupChild2",type:"shape",position:{x:300,y:350,z:10},data:{label:"Child 2 (Sphere)",shape:"sphere",size:40,color:6750105}});let p=null;v&&g&&(p=r.createNode({id:"groupNode1",type:"group",position:{x:250,y:250,z:-10},data:{label:"My Test Group",children:[v.id,g.id],defaultCollapsed:!1,backgroundColor:"rgba(70, 70, 90, 0.2)",borderColor:"rgba(200, 200, 220, 0.6)",headerColor:"rgba(30, 30, 50, 0.4)"},mass:2}),p&&n&&r.addEdge(n,p,{type:"curved",label:"Group Link",arrowhead:"target",color:16768392,thickness:2.5}))}const V1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:G1,demoMetadata:H1},Symbol.toStringTag,{value:"Module"})),W1={id:"camera-modes-info",title:"Camera Modes Info",description:`<h3>New Camera Modes</h3>
                  <p>New camera modes have been added to enhance navigation:</p>
                  <ul>
                    <li><b>TopDownCamera:</b> Provides a 2D-like top-down view of the graph. Pan (drag or arrow keys if configured) moves across the XZ plane, and zoom (scroll) adjusts the height (Y-axis). Rotation may be restricted.</li>
                    <li><b>FirstPersonCamera:</b> A stub for a first-person perspective. Currently behaves like 'Free' camera mode (WASD for movement, mouse for looking, requires pointer lock). Future enhancements could include node attachment or physics-based movement.</li>
                  </ul>
                  <p>These modes can typically be selected from a camera controls UI element if available in the application.</p>
                  <p>This demo page itself doesn't activate a specific new camera mode by default, but loads a simple graph. Use your application's UI to switch camera modes.</p>`};function j1(r){const e=r.createNode({id:"cam_n1",type:"shape",position:{x:0,y:0,z:0},data:{label:"Center",color:13421772}}),t=r.createNode({id:"cam_n2",type:"shape",position:{x:150,y:0,z:50},data:{label:"Node A",shape:"box",color:13395558}}),i=r.createNode({id:"cam_n3",type:"shape",position:{x:-100,y:0,z:-80},data:{label:"Node B",shape:"sphere",color:6736998}});r.addEdge(e,t),r.addEdge(e,i),setTimeout(()=>{var s;(s=r.plugins.getPlugin("LayoutPlugin"))==null||s.applyLayout("force");const n=r.plugins.getPlugin("UIPlugin");n&&n.showNotification?n.showNotification("Use UI to test TopDown or FirstPerson camera modes.","info",5e3):console.log("Demo: Use UI to test TopDown or FirstPerson camera modes.")},100)}const $1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:j1,demoMetadata:W1},Symbol.toStringTag,{value:"Module"})),X1={id:"edge-types",title:"Edge Types Showcase",description:`<h3>Edge Types Showcase</h3>
                  <p>This page illustrates the various ways edges (links between nodes) can be styled and configured.</p>
                  <ul>
                    <li><b>Basic Edge:</b> Default straight line.</li>
                    <li><b>Labeled Edge:</b> Edge with a text label.</li>
                    <li><b>Colored Edge:</b> Edge with a custom color.</li>
                    <li><b>Thick Edge:</b> Edge with increased thickness.</li>
                    <li><b>Dashed Edge:</b> Edge with a dashed line pattern.</li>
                    <li><b>Curved Edge:</b> Edge that curves between nodes (positive/negative curvature).</li>
                    <li><b>Arrowheads:</b> Edges with arrows at the source, target, or both ends.</li>
                    <li><b>Gradient Edge:</b> Edge with a color gradient.</li>
                  </ul>`};function q1(r){const e={mass:1,type:"shape",data:{shape:"sphere",size:40}},t=r.createNode({id:"n1",position:{x:-200,y:200,z:0},data:{...e.data,label:"N1",color:16746632},...e}),i=r.createNode({id:"n2",position:{x:200,y:200,z:0},data:{...e.data,label:"N2",color:8978312},...e}),n=r.createNode({id:"n3",position:{x:-200,y:0,z:50},data:{...e.data,label:"N3",color:8947967},...e}),s=r.createNode({id:"n4",position:{x:200,y:0,z:50},data:{...e.data,label:"N4",color:16763904},...e}),a=r.createNode({id:"n5",position:{x:-200,y:-200,z:-30},data:{...e.data,label:"N5",color:13404415},...e}),o=r.createNode({id:"n6",position:{x:200,y:-200,z:-30},data:{...e.data,label:"N6",color:8965375},...e}),l=r.createNode({id:"n7",type:"note",position:{x:0,y:100,z:100},data:{label:"N7 (HTML)",content:"Node for Edges",width:150,height:80,backgroundColor:"#333"},mass:1.2}),c=r.createNode({id:"n8",position:{x:0,y:-100,z:-80},data:{...e.data,label:"N8 (Box)",shape:"box",size:50,color:16755387},...e});r.addEdge(t,i),r.addEdge(t,n,{label:"Labeled Edge"}),r.addEdge(i,s,{label:"Colored",color:16711935}),r.addEdge(n,s,{label:"Thick",thickness:5}),r.addEdge(t,l,{label:"Dashed",dashed:!0,dashSize:8,gapSize:4,color:65535}),r.addEdge(n,a,{type:"curved",label:"Curved +0.5",curvature:.5,color:16776960}),r.addEdge(s,o,{type:"curved",label:"Curved -0.5",curvature:-.5,color:65280}),r.addEdge(a,o,{label:"Arrow: Target",arrowhead:"target",thickness:2,color:16755370}),r.addEdge(a,l,{type:"curved",curvature:.3,label:"Arrow: Source",arrowhead:"source",thickness:2,color:11141290}),r.addEdge(o,c,{type:"curved",curvature:-.2,label:"Arrow: Both",arrowhead:"both",thickness:2,color:43520}),r.addEdge(l,c,{label:"Gradient Straight",gradientColors:[16711680,255],thickness:4}),r.addEdge(t,c,{type:"curved",curvature:.6,label:"Gradient Curved",gradientColors:["#00ffaa","#ffaa00"],thickness:3,arrowhead:"target"}),r.addEdge(i,l,{label:"Dashed & Arrow",dashed:!0,dashSize:5,gapSize:3,arrowhead:"target",color:13421772,thickness:1.5})}const Z1=Object.freeze(Object.defineProperty({__proto__:null,createGraph:q1,demoMetadata:X1},Symbol.toStringTag,{value:"Module"})),Y1={id:"fractal-zoom",title:"🌀 Fractal Zoom",description:"Infinite zoom with level-of-detail management and content adaptation"};function K1(r){return J1(r)}function J1(r){console.log("Creating Fractal Zoom Demo...");const e=r.plugins.getPlugin("FractalZoomPlugin");return e||console.warn("FractalZoomPlugin not found - fractal zoom features will not be available"),r.clear(),Q1(r),eA(r),tA(r),iA(r),e&&nA(r,e),sA(r),rA(r),console.log("Fractal Zoom Demo created successfully"),{name:"Fractal Zoom Demo",description:"Infinite zoom with level-of-detail management and content adaptation",instructions:["Use mouse wheel to zoom in/out with fractal detail levels","Notice how content changes at different zoom levels","Observe node and edge detail adaptation","Try zooming far in or out to see extreme detail changes"]}}function Q1(r){[{id:"overview-science",position:{x:0,y:200,z:0},title:"Science",summary:"Scientific Domains",detail:"Physics, Chemistry, Biology, Computer Science",full:`
                <h3>Scientific Domains</h3>
                <ul>
                    <li><strong>Physics</strong> - Study of matter and energy</li>
                    <li><strong>Chemistry</strong> - Study of atoms and molecules</li>
                    <li><strong>Biology</strong> - Study of living organisms</li>
                    <li><strong>Computer Science</strong> - Study of computation and information</li>
                </ul>
            `},{id:"overview-arts",position:{x:300,y:200,z:0},title:"Arts",summary:"Creative Arts",detail:"Visual Arts, Music, Literature, Theater",full:`
                <h3>Creative Arts</h3>
                <ul>
                    <li><strong>Visual Arts</strong> - Painting, sculpture, photography</li>
                    <li><strong>Music</strong> - Composition and performance</li>
                    <li><strong>Literature</strong> - Writing and storytelling</li>
                    <li><strong>Theater</strong> - Live performance and drama</li>
                </ul>
            `},{id:"overview-tech",position:{x:-300,y:200,z:0},title:"Technology",summary:"Tech Fields",detail:"AI, Robotics, Web Development, Mobile Apps",full:`
                <h3>Technology Fields</h3>
                <ul>
                    <li><strong>Artificial Intelligence</strong> - Machine learning and neural networks</li>
                    <li><strong>Robotics</strong> - Automated systems and machines</li>
                    <li><strong>Web Development</strong> - Frontend and backend technologies</li>
                    <li><strong>Mobile Apps</strong> - iOS and Android development</li>
                </ul>
            `}].forEach(t=>{const i=r.addNode(t.id,"html",{position:t.position,content:t.summary,size:{width:150,height:100}});i.fractalData=t})}function eA(r){[{id:"detail-physics",position:{x:-100,y:50,z:0},parent:"overview-science",title:"Physics",data:{summary:"Physics",detail:"Quantum mechanics, thermodynamics, relativity",full:`
                    <h4>Physics Subfields</h4>
                    <div class="physics-content">
                        <p><strong>Quantum Mechanics:</strong> Study of particles at atomic scale</p>
                        <p><strong>Thermodynamics:</strong> Energy and heat transfer</p>
                        <p><strong>Relativity:</strong> Space, time, and gravity</p>
                        <p><strong>Electromagnetism:</strong> Electric and magnetic phenomena</p>
                    </div>
                `}},{id:"detail-cs",position:{x:100,y:50,z:0},parent:"overview-science",title:"Computer Science",data:{summary:"CS",detail:"Algorithms, data structures, programming",full:`
                    <h4>Computer Science Areas</h4>
                    <div class="cs-content">
                        <p><strong>Algorithms:</strong> Problem-solving procedures</p>
                        <p><strong>Data Structures:</strong> Organization of data</p>
                        <p><strong>Programming:</strong> Writing computer instructions</p>
                        <p><strong>Software Engineering:</strong> Building large systems</p>
                    </div>
                `}}].forEach(t=>{const i=r.addNode(t.id,"html",{position:t.position,content:t.data.summary,size:{width:120,height:80}});i.fractalData=t.data,t.parent&&r.addEdge(`${t.parent}-${t.id}`,t.parent,t.id,"curved")})}function tA(r){[{id:"data-performance",position:{x:200,y:-100,z:0},title:"Performance Data",data:[{year:2020,value:85},{year:2021,value:92},{year:2022,value:88},{year:2023,value:95}]},{id:"data-usage",position:{x:-200,y:-100,z:0},title:"Usage Statistics",data:{users:125e4,sessions:45e5,pageviews:18e6,countries:45}}].forEach(t=>{const i=r.addNode(t.id,"html",{position:t.position,content:`<div class="data-summary">${t.title}</div>`,size:{width:140,height:90}});i.fractalData={type:"data",...t}})}function iA(r){[{id:"text-ai",position:{x:0,y:-250,z:0},title:"Artificial Intelligence",summary:"AI Overview",detail:"Machine learning, neural networks, and intelligent systems for automation and decision making.",full:`
                <h3>Artificial Intelligence</h3>
                <p>Artificial Intelligence (AI) represents one of the most transformative technologies of our time. It encompasses a broad range of techniques and approaches designed to create systems that can perform tasks typically requiring human intelligence.</p>

                <h4>Key Areas:</h4>
                <ul>
                    <li><strong>Machine Learning:</strong> Algorithms that learn from data without explicit programming</li>
                    <li><strong>Deep Learning:</strong> Neural networks with multiple layers for complex pattern recognition</li>
                    <li><strong>Natural Language Processing:</strong> Understanding and generating human language</li>
                    <li><strong>Computer Vision:</strong> Interpreting and analyzing visual information</li>
                    <li><strong>Robotics:</strong> Integrating AI with physical systems</li>
                </ul>

                <h4>Applications:</h4>
                <p>AI is revolutionizing industries from healthcare and finance to transportation and entertainment. Self-driving cars, medical diagnosis systems, recommendation engines, and virtual assistants are just a few examples of AI in action.</p>

                <h4>Future Prospects:</h4>
                <p>As AI continues to advance, we can expect to see even more sophisticated applications, including artificial general intelligence (AGI) that could match or exceed human cognitive abilities across all domains.</p>
            `}].forEach(t=>{const i=r.addNode(t.id,"html",{position:t.position,content:t.summary,size:{width:160,height:100}});i.fractalData=t})}function nA(r,e){e.addLODLevel(-8,{name:"satellite",nodeDetailLevel:"none",edgeDetailLevel:"none",labelsVisible:!1,textScale:.3,geometryQuality:"minimal"}),e.addLODLevel(8,{name:"microscopic",nodeDetailLevel:"ultra-high",edgeDetailLevel:"ultra-high",labelsVisible:!0,textScale:2,geometryQuality:"ultra"}),e.addLODLevel(1,{name:"focused",nodeDetailLevel:"medium-high",edgeDetailLevel:"medium-high",labelsVisible:!0,textScale:1.1,geometryQuality:"medium-high"})}function sA(r){const e=r.plugins.getPlugin("FractalZoomPlugin");e&&r.getNodes().forEach(t=>{if(!t.fractalData)return;let i;t.fractalData.type==="data"?(i=Ws(t.id,"data",{data:t.fractalData.data}),i.defineDataLevels({summary:{minZoom:-10,maxZoom:-1,type:"summary",summaryFunction:n=>Array.isArray(n)?`Dataset (${n.length} items)`:`Data Object (${Object.keys(n).length} fields)`},chart:{minZoom:-1,maxZoom:4,type:"chart",chartType:"bar",title:t.fractalData.title},table:{minZoom:4,maxZoom:8,type:"table",maxRows:10},raw:{minZoom:8,maxZoom:20,type:"raw"}})):t.fractalData.summary&&t.fractalData.detail&&t.fractalData.full?(i=Ws(t.id,"text"),i.defineProgressiveText(t.fractalData.summary,t.fractalData.detail,t.fractalData.full)):(i=Ws(t.id,"html"),i.defineHTMLLevel(-10,10,t.fractalData.content||t.fractalData.summary)),i&&e.addContentAdapter(t.id,i)})}function rA(r){const e=r.addNode("zoom-instructions","html",{position:{x:400,y:-200,z:0},content:`
            <div class="zoom-instructions">
                <h4>🌀 Fractal Zoom Controls</h4>
                <p><strong>Mouse Wheel:</strong> Zoom in/out</p>
                <p><strong>Zoom Levels:</strong></p>
                <ul>
                    <li>-8 to -5: Satellite view</li>
                    <li>-2 to 0: Overview</li>
                    <li>0 to 3: Normal detail</li>
                    <li>3 to 6: High detail</li>
                    <li>6+: Microscopic view</li>
                </ul>
                <p><em>Content adapts automatically!</em></p>
            </div>
        `,size:{width:200,height:160}}),t=r.plugins.getPlugin("FractalZoomPlugin");if(t){const i=Ws("zoom-instructions","html");i.defineHTMLLevel(-10,-2,'<div class="zoom-help">🌀 Zoom Controls</div>'),i.defineHTMLLevel(-2,10,e.htmlElement.innerHTML),t.addContentAdapter("zoom-instructions",i)}}const aA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:K1,demoMetadata:Y1},Symbol.toStringTag,{value:"Module"})),oA={id:"graph-generators",title:"Graph Generators",description:`<h3>Graph Generators Showcase</h3>
                  <p>This page demonstrates generators that create graphs from data structures.</p>
                  <ul>
                    <li><b>FileSystemGenerator:</b> Creates a graph from a JSON object representing a file directory structure.</li>
                    <li><b>ObjectPropertyGenerator:</b> Visualizes a JavaScript object's properties as a graph.</li>
                  </ul>
                  <p>Each generator will create its graph below. They might be layered if generated simultaneously; consider refreshing or navigating to view them separately if needed, or if a UI to clear/regenerate is added.</p>`};function lA(r){const e={name:"ProjectRoot",type:"directory",children:[{name:"src",type:"directory",children:[{name:"index.js",type:"file",size:1500},{name:"utils.js",type:"file",size:800},{name:"components",type:"directory",children:[{name:"Button.js",type:"file",size:500},{name:"Card.js",type:"file",size:700}]}]},{name:"docs",type:"directory",children:[{name:"README.md",type:"file",size:2e3}]},{name:"package.json",type:"file",size:600}]};new gd().generate(e,r,{rootPosition:{x:-300,y:200,z:0}});const i={id:"user123",name:"Alice Wonderland",email:"alice@example.com",isActive:!0,roles:["admin","editor","viewer"],preferences:{theme:"dark",notifications:{email:!0,sms:!1,push:{enabled:!0,sound:"default"}},language:"en-US"},address:{street:"123 Main St",city:"Anytown",zip:"12345",countryDetails:{name:"Wonderland",code:"WL"}},metadata:null,lastLogin:new Date().toISOString(),friends:[{id:"user456",name:"Bob"},{id:"user789",name:"Charlie"}]};new vd().generate(i,r,{rootPosition:{x:300,y:200,z:-50},maxDepth:4}),setTimeout(()=>{var a;(a=r.plugins.getPlugin("LayoutPlugin"))==null||a.applyLayout("force",{repulsion:4e3,centerStrength:.001});const s=r.plugins.getPlugin("UIPlugin");s&&s.showNotification?s.showNotification("FileSystem (left) and Object (right) graphs generated.","info",6e3):console.log("Demo: FileSystem and ObjectProperty graphs generated.")},500)}const cA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:lA,demoMetadata:oA},Symbol.toStringTag,{value:"Module"})),hA={id:"meta-widgets",title:"MetaWidgets & Composition",description:`<h3>MetaWidgets & Widget Composition Demo</h3>
                  <p>Demonstrating the metawidget system for creating composite interfaces and dashboards.</p>
                  <ul>
                    <li><strong>MetaWidget Containers:</strong> Widgets that contain and manage other widgets</li>
                    <li><strong>Multiple Layout Types:</strong> Grid, row, column, and masonry layouts</li>
                    <li><strong>Widget Composition:</strong> Pre-built dashboard templates and custom compositions</li>
                    <li><strong>Data Flow:</strong> Connections between metawidgets for data propagation</li>
                    <li><strong>Interactive Management:</strong> Add, remove, and rearrange widgets dynamically</li>
                  </ul>
                  <p><em>Try adding widgets to the containers and changing their layouts!</em></p>`};function dA(r){r.importGraphFromJSON({nodes:[],edges:[]}),r.addNode(new un("title",{x:0,y:350,z:0},{text:`MetaWidget
System`,fontSize:28,height:10,color:10181046,bevelEnabled:!0,align:"center",animated:!0,animationType:"glow"},2));const e=Ni.createControlCenter(r,{x:-600,y:150,z:0},[{name:"power",title:"Power System",enabled:!0,level:85,controls:[{id:"main-power",type:"switch",label:"Main Power",value:!0},{id:"backup-power",type:"switch",label:"Backup Power",value:!1},{id:"power-level",type:"slider",label:"Power Level",value:85,min:0,max:100}]},{name:"cooling",title:"Cooling System",enabled:!0,level:62,controls:[{id:"cooling-enabled",type:"switch",label:"Cooling Enabled",value:!0},{id:"fan-speed",type:"slider",label:"Fan Speed",value:62,min:0,max:100},{id:"temp-target",type:"slider",label:"Target Temp",value:22,min:15,max:30}]},{name:"security",title:"Security System",enabled:!1,level:100,controls:[{id:"security-armed",type:"switch",label:"Armed",value:!1},{id:"alert-level",type:"select",label:"Alert Level",value:"low",options:[{value:"low",label:"Low"},{value:"medium",label:"Medium"},{value:"high",label:"High"}]}]},{name:"network",title:"Network System",enabled:!0,level:78,controls:[{id:"wifi-enabled",type:"switch",label:"WiFi",value:!0},{id:"bandwidth",type:"slider",label:"Bandwidth Limit",value:78,min:0,max:100},{id:"vpn-enabled",type:"switch",label:"VPN",value:!0}]}]),t=Ni.createMonitoringDashboard(r,{x:600,y:150,z:0},[{name:"cpu",title:"CPU Usage",type:"gauge",value:45,max:100,color:"#e74c3c"},{name:"memory",title:"Memory Usage",type:"gauge",value:67,max:100,color:"#f39c12"},{name:"disk",title:"Disk Usage",type:"progress",value:23,max:100,color:"#27ae60"},{name:"network-in",title:"Network In",type:"progress",value:78,max:100,color:"#3498db"},{name:"network-out",title:"Network Out",type:"progress",value:34,max:100,color:"#9b59b6"},{name:"temperature",title:"Temperature",type:"gauge",value:62,max:100,color:"#e67e22"},{name:"power-status",title:"Power",type:"status",status:"ok"},{name:"backup-status",title:"Backup",type:"status",status:"warning"},{name:"security-status",title:"Security",type:"status",status:"warning"}]),i=Ni.createAnalyticsDashboard(r,{x:-300,y:-200,z:0},{keyMetrics:[{name:"Conversion Rate",value:3.2,max:10,color:"#2ecc71"},{name:"User Engagement",value:78,max:100,color:"#3498db"},{name:"Performance Score",value:92,max:100,color:"#9b59b6"}],charts:[{title:"Traffic Over Time",type:"line"},{title:"User Demographics",type:"pie"},{title:"Page Performance",type:"bar"}]}),n=Ni.createWorkflowBuilder(r,{x:300,y:-200,z:0},[{title:"Data Collection",completed:!0,active:!1},{title:"Data Processing",completed:!0,active:!1},{title:"Analysis",completed:!1,active:!0},{title:"Report Generation",completed:!1,active:!1},{title:"Distribution",completed:!1,active:!1}]);Ni.createGameHUD(r,{x:0,y:-350,z:0},{health:87,energy:45,inventoryCount:12,playerStats:{strength:78,agility:65,intelligence:92,luck:34}});const s=r.addNode(new Al("custom-meta",{x:0,y:0,z:0},{title:"Custom Mixed Dashboard",width:350,height:280,layout:"grid",columns:2,gap:8,widgets:[{id:"status-panel",type:"info",data:{text:`System Status
All systems operational`,icon:"✅"}},{id:"quick-actions",type:"control-panel",data:{title:"Quick Actions",controls:[{id:"restart",type:"button",label:"Restart System",text:"Restart"},{id:"maintenance",type:"switch",label:"Maintenance Mode",value:!1}]}},{id:"system-load",type:"progress",data:{label:"System Load",progressType:"circular",value:34,max:100,color:"#1abc9c"}},{id:"alerts",type:"info",data:{text:`Alerts
2 warnings
0 errors`,icon:"⚠️"}}]}));Ni.connectWidgets(r,e,t,"data"),Ni.connectWidgets(r,t,i,"data"),Ni.connectWidgets(r,i,n,"control"),r.addEdge(s,e,{type:"bezier",curveTension:.3,autoControlPoints:!0,color:9323693,thickness:2,gradientColors:[10181046,3447003]}),r.addEdge(s,t,{type:"bezier",curveTension:.3,autoControlPoints:!0,color:2600544,thickness:2,gradientColors:[10181046,2600544]}),r.on("meta-widget:control-changed",l=>{const{metaWidget:c,widget:h,controlId:d,value:u}=l;console.log(`MetaWidget "${c.data.title}" control "${d}" changed to:`,u),d==="main-power"&&uA(r,u),d==="fan-speed"&&fA(r,u),d==="timeRange"&&pA(r,u)}),r.on("meta-widget:control-clicked",l=>{const{metaWidget:c,widget:h,controlId:d}=l;console.log(`MetaWidget "${c.data.title}" button "${d}" clicked`),d==="restart"?mA():d==="refresh"&&gA()});const a=()=>{requestAnimationFrame(a)};return a(),[{id:"control-info",position:{x:-600,y:300,z:0},text:`Control Center
System controls
and settings`,color:3447003},{id:"monitor-info",position:{x:600,y:300,z:0},text:`Monitoring
Real-time system
metrics & status`,color:15158332},{id:"analytics-info",position:{x:-300,y:-350,z:0},text:`Analytics
Data insights
and reporting`,color:2600544},{id:"workflow-info",position:{x:300,y:-350,z:0},text:`Workflow
Process automation
and tracking`,color:15965202}].forEach(l=>{r.addNode(new un(l.id,l.position,{text:l.text,fontSize:11,height:3,color:l.color,bevelEnabled:!0,align:"center",animated:!0,animationType:"float"}))}),setTimeout(()=>{r.centerView(s,1e3)},100),r}function uA(r,e){console.log(`System power: ${e?"ON":"OFF"}`)}function fA(r,e){const t=Math.max(20,80-e);console.log(`Temperature updated: ${t}°C`)}function pA(r,e){console.log(`Analytics time range changed to: ${e}`)}function mA(r){console.log("System restart initiated...")}function gA(r){console.log("Refreshing dashboard data...")}const vA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:dA,demoMetadata:hA},Symbol.toStringTag,{value:"Module"})),yA={id:"new-edge-types",title:"New Edge Types",description:`<h3>New Edge Types Showcase</h3>
                  <p>This page demonstrates recently added specialized edge types.</p>
                  <ul>
                    <li><b>DottedEdge:</b> An edge styled with a dotted pattern.</li>
                    <li><b>DynamicThicknessEdge:</b> An edge whose thickness can change based on a data value.</li>
                  </ul>`};function _A(r){const e={mass:1,type:"shape",data:{shape:"sphere",size:40}},t=r.createNode({id:"n1e",position:{x:-250,y:100,z:0},data:{...e.data,label:"N1",color:16746632},...e}),i=r.createNode({id:"n2e",position:{x:250,y:100,z:0},data:{...e.data,label:"N2",color:8978312},...e}),n=r.createNode({id:"n3e",position:{x:-250,y:-100,z:0},data:{...e.data,label:"N3",color:8947967},...e}),s=r.createNode({id:"n4e",position:{x:250,y:-100,z:0},data:{...e.data,label:"N4 (Data Value: 75)",color:16763904,value:75},...e});r.addEdge(t,i,{type:"dotted",label:"Dotted Edge",color:65535,thickness:2,dashSize:2,gapSize:3}),r.addEdge(n,s,{type:"dynamicThickness",label:"Dynamic Thickness (Value: 75)",color:16755200,thicknessDataKey:"value"}),setTimeout(()=>{var a;return(a=r.plugins.getPlugin("LayoutPlugin"))==null?void 0:a.applyLayout("grid",{columns:2,padding:{x:400,y:200}})},100)}const xA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:_A,demoMetadata:yA},Symbol.toStringTag,{value:"Module"})),bA={id:"new-layouts",title:"New Layouts",description:`<h3>New Layout Algorithms</h3>
                  <p>This page demonstrates new layout algorithms (currently stubs/basic implementations).</p>
                  <ul>
                    <li><b>TreeMapLayout:</b> Arranges nodes as nested rectangles (stub currently uses grid). Ideal for hierarchical data based on area.</li>
                    <li><b>RadialLayout:</b> Arranges nodes in concentric circles around a central point (stub uses simple circle).</li>
                  </ul>
                  <p>Select the desired layout from the UI dropdown to see its effect.</p>`};function MA(r){for(let t=0;t<12;t++)r.createNode({id:`n_layout_${t}`,type:"shape",position:{x:Math.random()*200-100,y:Math.random()*200-100,z:Math.random()*50-25},data:{label:`Node ${t}`,shape:"box",size:Math.random()*30+20,color:new fe(Math.random()*16777215).getHex()}});setTimeout(()=>{var i;(i=r.plugins.getPlugin("LayoutPlugin"))==null||i.applyLayout("force");const t=r.plugins.getPlugin("UIPlugin");t&&t.showNotification?t.showNotification('Try "treemap" or "radial" layouts from the UI dropdown!',"info",5e3):console.log("Demo: Try 'treemap' or 'radial' layouts from the UI dropdown!")},100)}const SA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:MA,demoMetadata:bA},Symbol.toStringTag,{value:"Module"})),wA={id:"new-node-types",title:"New Node Types",description:`<h3>New Node Types Showcase</h3>
                  <p>This page demonstrates recently added specialized node types.</p>
                  <ul>
                    <li><b>AudioNode:</b> Represents an audio source. (Visual stub)</li>
                    <li><b>DocumentNode:</b> Represents a document or file. (Visual stub)</li>
                    <li><b>ChartNode:</b> Intended to display charts using HTML/JS. (Visual/HTML stub)</li>
                  </ul>`};function EA(r){const e={mass:1};let t=-300;const i=250;r.createNode({id:"audioNode1",type:"audio",position:{x:t,y:0,z:0},data:{label:"Audio Clip 🎵",audioUrl:"https://www.learningcontainer.com/wp-content/uploads/2020/02/Kalimba.mp3",color:52479,size:50},...e}),t+=i,r.createNode({id:"docNode1",type:"document",position:{x:t,y:0,z:0},data:{label:"Report.pdf 📄",documentUrl:"path/to/report.pdf",icon:"📄",color:16755200,size:60},...e}),t+=i,r.createNode({id:"chartNode1",type:"chart",position:{x:t,y:0,z:0},data:{label:"Sales Data 📊",width:280,height:180,content:'<div style="padding:10px; background:#2a2a2b; border-radius:5px; color:white;">Chart Placeholder: Sales Q1</div>'},...e}),setTimeout(()=>{var n;return(n=r.plugins.getPlugin("LayoutPlugin"))==null?void 0:n.applyLayout("grid",{columns:3,padding:{x:200,y:100}})},100)}const TA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:EA,demoMetadata:wA},Symbol.toStringTag,{value:"Module"})),CA={id:"node-types",title:"Node Types Showcase",description:`<h3>Node Types Showcase</h3>
                  <p>This page demonstrates the various types of nodes available in SpaceGraphJS.</p>
                  <ul>
                    <li><b>ShapeNode:</b> Displays 3D shapes like boxes, spheres, cylinders. (e.g., Box, Sphere, Capsule)</li>
                    <li><b>NoteNode/HtmlNode:</b> Renders HTML content, allowing for rich text, forms, and interactive elements.</li>
                    <li><b>ImageNode:</b> Displays images directly in the 3D space.</li>
                    <li><b>VideoNode:</b> Embeds and plays videos.</li>
                    <li><b>IFrameNode:</b> Embeds external web content using iframes.</li>
                    <li><b>GroupNode:</b> Allows grouping of other nodes, which can be collapsed or expanded.</li>
                  </ul>`};function AA(r){const e={mass:1};let t=-200;const i=180,n=r.createNode({id:"shapeBox",type:"shape",position:{x:-300,y:t,z:0},data:{label:"Box (ShapeNode)",shape:"box",size:80,color:16755200},...e}),s=r.createNode({id:"shapeSphere",type:"shape",position:{x:-100,y:t,z:0},data:{label:"Sphere (ShapeNode)",shape:"sphere",size:50,color:43775},...e}),a=r.createNode({id:"shapeCapsule",type:"shape",position:{x:100,y:t,z:0},data:{label:"Capsule (ShapeNode)",shape:"capsule",size:{radius:30,height:80},color:65450},...e});t+=i;const o=r.createNode({id:"noteNode",type:"note",position:{x:-200,y:t,z:0},data:{label:"NoteNode (HTML)",content:"<h3>HTML Content</h3><p>This is a <code>NoteNode</code>. It can render <b>rich HTML</b>.</p>",width:250,height:120,backgroundColor:"#334455"},...e});t+=i;const l=r.createNode({id:"imageNode",type:"image",position:{x:-200,y:t,z:0},data:{label:"ImageNode",imageUrl:"https://placehold.co/200x150/FFAA00/000000?text=Image+Node",size:150},...e});t+=i+50;const c=r.createNode({id:"videoNode",type:"video",position:{x:-200,y:t,z:0},data:{label:"VideoNode",videoUrl:"https://test-videos.co.uk/vids/bigbuckbunny/mp4/h264/360/Big_Buck_Bunny_360_10s_1MB.mp4",videoType:"video/mp4",width:240,height:135,autoplay:!0,muted:!0,loop:!0},...e});t=-200;const h=300,d=r.createNode({id:"iframeNode",type:"iframe",position:{x:h,y:t,z:0},data:{label:"IFrameNode",iframeUrl:"https://example.com",width:300,height:200},...e});t+=i+80;const u=r.createNode({id:"gc1",type:"html",position:{x:h-50,y:t+50,z:0},data:{label:"Child A",content:"Child A",width:100,height:50,backgroundColor:"#556677"},mass:.5}),f=r.createNode({id:"gc2",type:"shape",position:{x:h+50,y:t-20,z:10},data:{label:"Child B",shape:"sphere",size:30,color:13395711},mass:.5});let m=null;u&&f&&(m=r.createNode({id:"groupNode",type:"group",position:{x:h,y:t,z:0},data:{label:"GroupNode",children:[u.id,f.id],backgroundColor:"rgba(60,80,100,0.3)",borderColor:"rgba(150,180,220,0.7)",headerColor:"rgba(40,60,80,0.5)"},...e}),r.addEdge(u,f,{label:"Internal",color:11184810,thickness:1})),o&&l&&r.addEdge(o,l,{label:"related"}),n&&o&&r.addEdge(n,o),d&&m&&r.addEdge(d,m);const v=r.createNode({id:"hubNodeTypes",type:"shape",position:{x:0,y:200,z:-50},data:{label:"Node Types Hub",shape:"sphere",size:20,color:15658734,opacity:.5},mass:.1});[n,s,a,o,l,c,d,m].forEach(g=>{g&&v&&r.addEdge(v,g,{type:"dashed",color:8947848,thickness:1})})}const PA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:AA,demoMetadata:CA},Symbol.toStringTag,{value:"Module"})),LA={id:"performance-optimization",title:"⚡ Performance Optimization",description:"Large-scale graph with instancing, culling, LOD, and web workers"};function RA(r){return DA(r)}function DA(r){return console.log("Creating Performance Optimization Demo..."),r.clear(),r.plugins.getPlugin("PerformancePlugin")||console.warn("PerformancePlugin not found - performance features will not be available"),r.performance&&r.performance.updateConfig({enableInstancing:!0,enableCulling:!0,enableLOD:!0,enableWorkers:!0,autoOptimize:!0,instanceThreshold:5,maxRenderDistance:2e3}),NA(r),kA(r),OA(r),zA(r),UA(r),r.performance&&r.performance.startMonitoring(),console.log("Performance Optimization Demo created successfully"),{name:"Performance Optimization Demo",description:"Large-scale graph demonstrating instancing, culling, LOD, and web workers",instructions:["Zoom out to see massive object culling in action","Zoom in to see level-of-detail (LOD) adaptation","Move camera to test frustum culling","Watch performance metrics in real-time","Notice instanced objects (similar geometries)","Use controls to toggle performance features"]}}function NA(r){r.addNode("performance-monitor","html",{position:{x:-400,y:300,z:0},content:`
            <div id="performance-metrics" class="performance-monitor">
                <h4>⚡ Performance Metrics</h4>
                <div class="metrics-grid">
                    <div class="metric">
                        <span class="label">FPS:</span>
                        <span id="fps-value">60</span>
                    </div>
                    <div class="metric">
                        <span class="label">Frame Time:</span>
                        <span id="frametime-value">16ms</span>
                    </div>
                    <div class="metric">
                        <span class="label">Objects:</span>
                        <span id="objects-value">0</span>
                    </div>
                    <div class="metric">
                        <span class="label">Visible:</span>
                        <span id="visible-value">0</span>
                    </div>
                    <div class="metric">
                        <span class="label">Instanced:</span>
                        <span id="instanced-value">0</span>
                    </div>
                    <div class="metric">
                        <span class="label">Memory:</span>
                        <span id="memory-value">0MB</span>
                    </div>
                </div>
                <div class="optimization-status">
                    <div id="optimizations-active">Optimizations: Active</div>
                </div>
            </div>
        `,size:{width:250,height:200}}),r.performance&&r.on("performance:update",t=>{IA(t)});const e=document.createElement("style");e.textContent=`
        .performance-monitor {
            font-family: monospace;
            font-size: 12px;
            background: rgba(0, 0, 0, 0.8);
            color: #00ff00;
            padding: 10px;
            border-radius: 5px;
        }
        .metrics-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 5px;
            margin-bottom: 10px;
        }
        .metric {
            display: flex;
            justify-content: space-between;
        }
        .label {
            color: #cccccc;
        }
        .optimization-status {
            text-align: center;
            color: #00ff00;
            font-weight: bold;
        }
    `,document.head.appendChild(e)}function IA(r){const e={"fps-value":Math.round(r.frameRate||60),"frametime-value":`${(r.frameTime||16.67).toFixed(1)}ms`,"objects-value":r.objectCount||0,"visible-value":r.visibleObjects||0,"instanced-value":r.instancedObjects||0,"memory-value":`${((r.memoryUsage||0)/1048576).toFixed(1)}MB`};Object.entries(e).forEach(([i,n])=>{const s=document.getElementById(i);s&&(s.textContent=n)});const t=document.getElementById("optimizations-active");t&&r.frameRate&&(r.frameRate>=55?(t.style.color="#00ff00",t.textContent="Optimizations: Excellent"):r.frameRate>=45?(t.style.color="#ffff00",t.textContent="Optimizations: Good"):(t.style.color="#ff0000",t.textContent="Optimizations: Active"))}function kA(r){for(let s=0;s<5;s++){const a=s/5*Math.PI*2,o=Math.cos(a)*800,l=Math.sin(a)*800,c=(s-5/2)*100,h=r.addNode(`cluster-${s}-center`,"shape",{position:{x:o,y:l,z:c},shape:"sphere",color:`hsl(${s*72}, 80%, 60%)`,size:20});for(let d=0;d<50;d++){const u=d/50*Math.PI*2,f=Math.random()*200+50,m=o+Math.cos(u)*f,v=l+Math.sin(u)*f,g=c+(Math.random()-.5)*100,p=r.addNode(`cluster-${s}-node-${d}`,"shape",{position:{x:m,y:v,z:g},shape:"box",color:`hsl(${s*72}, 60%, 40%)`,size:8+Math.random()*4});if(d%3===0&&r.addEdge(`cluster-${s}-edge-${d}`,h.id,p.id,"straight"),d>0&&Math.random()<.3){const x=Math.max(0,d-1-Math.floor(Math.random()*3));r.addEdge(`cluster-${s}-internal-${d}-${x}`,p.id,`cluster-${s}-node-${x}`,"curved")}}}console.log("Created 5 clusters with 50 nodes each")}function OA(r){const e=[{shape:"sphere",color:"#ff6b6b",size:6},{shape:"box",color:"#4ecdc4",size:8},{shape:"cylinder",color:"#45b7d1",size:7},{shape:"cone",color:"#f9ca24",size:9}],t=20,i=100,n=-t*i/2,s=-t*i/2;for(let a=0;a<t;a++)for(let o=0;o<t;o++){const l=(a+o)%e.length,c=e[l],h=n+a*i,d=s+o*i,u=-500+Math.sin(a*.5)*Math.cos(o*.5)*100;r.addNode(`pattern-${a}-${o}`,"shape",{position:{x:h,y:d,z:u},shape:c.shape,color:c.color,size:c.size}),a>0&&Math.random()<.2&&r.addEdge(`pattern-edge-h-${a}-${o}`,`pattern-${a}-${o}`,`pattern-${a-1}-${o}`,"straight"),o>0&&Math.random()<.2&&r.addEdge(`pattern-edge-v-${a}-${o}`,`pattern-${a}-${o}`,`pattern-${a}-${o-1}`,"straight")}console.log(`Created ${t}x${t} repeating pattern grid`)}function zA(r){const e=[500,1e3,1500,2e3,3e3],t=["ultra-high","high","medium","low","minimal"];e.forEach((i,n)=>{const s=n/e.length*Math.PI*2,a=Math.cos(s)*i,o=Math.sin(s)*i,l=r.addNode(`lod-demo-${n}`,"html",{position:{x:a,y:o,z:0},content:`
                <div class="lod-demo-node">
                    <h3>LOD Level: ${t[n]}</h3>
                    <p>Distance: ${i}px</p>
                    <div class="detail-content">
                        ${n===0?`
                            <ul>
                                <li>Ultra-high detail content</li>
                                <li>All features visible</li>
                                <li>High quality rendering</li>
                                <li>Complex interactions</li>
                            </ul>
                        `:n===1?`
                            <ul>
                                <li>High detail content</li>
                                <li>Most features visible</li>
                                <li>Good quality rendering</li>
                            </ul>
                        `:n===2?`
                            <p>Medium detail content with basic information</p>
                        `:n===3?`
                            <p>Low detail - essential info only</p>
                        `:`
                            <p>Minimal</p>
                        `}
                    </div>
                </div>
            `,size:{width:Math.max(100,200-n*30),height:Math.max(80,150-n*20)}});for(let c=0;c<Math.max(1,6-n);c++){const h=c/Math.max(1,6-n)*Math.PI*2,d=50+n*10,u=a+Math.cos(h)*d,f=o+Math.sin(h)*d;r.addNode(`lod-detail-${n}-${c}`,"shape",{position:{x:u,y:f,z:0},shape:"sphere",color:`hsl(${n*60}, 70%, 50%)`,size:Math.max(3,8-n)}),r.addEdge(`lod-edge-${n}-${c}`,l.id,`lod-detail-${n}-${c}`,"straight")}}),console.log("Created LOD demonstration nodes at various distances")}function UA(r){const e=r.addNode("performance-controls","html",{position:{x:400,y:300,z:0},content:`
            <div class="performance-controls">
                <h4>⚡ Performance Controls</h4>
                <div class="control-group">
                    <label>
                        <input type="checkbox" id="instancing-toggle" checked>
                        Enable Instancing
                    </label>
                </div>
                <div class="control-group">
                    <label>
                        <input type="checkbox" id="culling-toggle" checked>
                        Enable Culling
                    </label>
                </div>
                <div class="control-group">
                    <label>
                        <input type="checkbox" id="lod-toggle" checked>
                        Enable LOD
                    </label>
                </div>
                <div class="control-group">
                    <label>
                        <input type="checkbox" id="workers-toggle" checked>
                        Enable Workers
                    </label>
                </div>
                <div class="control-group">
                    <button id="optimize-button">Optimize Now</button>
                </div>
                <div class="control-group">
                    <button id="cleanup-button">Cleanup Memory</button>
                </div>
                <div class="control-group">
                    <button id="stress-test-button">Add Stress Test</button>
                </div>
                <div class="stats-section">
                    <h5>Worker Stats</h5>
                    <div id="worker-stats">Checking...</div>
                </div>
            </div>
        `,size:{width:220,height:300}});setTimeout(()=>{var n,s,a,o,l,c,h;const i=e.htmlElement;i&&((n=i.querySelector("#instancing-toggle"))==null||n.addEventListener("change",d=>{r.performance&&r.performance.setInstancingEnabled(d.target.checked)}),(s=i.querySelector("#culling-toggle"))==null||s.addEventListener("change",d=>{r.performance&&r.performance.setCullingEnabled(d.target.checked)}),(a=i.querySelector("#lod-toggle"))==null||a.addEventListener("change",d=>{r.performance&&r.performance.setLODEnabled(d.target.checked)}),(o=i.querySelector("#workers-toggle"))==null||o.addEventListener("change",d=>{r.performance&&r.performance.setWorkersEnabled(d.target.checked)}),(l=i.querySelector("#optimize-button"))==null||l.addEventListener("click",()=>{r.performance&&(r.performance.optimize(),console.log("Manual optimization triggered"))}),(c=i.querySelector("#cleanup-button"))==null||c.addEventListener("click",()=>{r.performance&&(r.performance.cleanup(),console.log("Memory cleanup triggered"))}),(h=i.querySelector("#stress-test-button"))==null||h.addEventListener("click",()=>{BA(r)}),setInterval(()=>{FA(i)},2e3))},100);const t=document.createElement("style");t.textContent=`
        .performance-controls {
            font-family: Arial, sans-serif;
            font-size: 12px;
            padding: 10px;
        }
        .control-group {
            margin-bottom: 8px;
        }
        .control-group label {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        .control-group button {
            width: 100%;
            padding: 5px;
            margin: 2px 0;
            border: 1px solid #ccc;
            border-radius: 3px;
            background: #f0f0f0;
            cursor: pointer;
        }
        .control-group button:hover {
            background: #e0e0e0;
        }
        .stats-section {
            margin-top: 15px;
            padding-top: 10px;
            border-top: 1px solid #ccc;
        }
        .stats-section h5 {
            margin: 0 0 5px 0;
        }
        #worker-stats {
            font-size: 10px;
            color: #666;
        }
    `,document.head.appendChild(t)}function FA(r){const e=r.querySelector("#worker-stats");if(!e||!space.performance)return;const t=space.performance.getWorkerStats();let i="No worker data";if(t.workerManager){const n=t.workerManager;i=`Workers: ${n.totalWorkers}
Active: ${n.activeJobs}
Queue: ${n.queuedJobs}`}e.textContent=i}function BA(r){for(let i=0;i<100;i++){const n=(Math.random()-.5)*1e3,s=(Math.random()-.5)*1e3,a=(Math.random()-.5)*1e3;r.addNode(`stress-${Date.now()}-${i}`,"shape",{position:{x:n,y:s,z:a},shape:Math.random()>.5?"sphere":"box",color:`hsl(${Math.random()*360}, 70%, 50%)`,size:3+Math.random()*5})}console.log("Added 100 stress test nodes")}const HA=Object.freeze(Object.defineProperty({__proto__:null,createGraph:RA,demoMetadata:LA},Symbol.toStringTag,{value:"Module"})),zp=Object.assign({"./demos/advancedCameraDemo.js":R1,"./demos/advancedEdgesDemo.js":I1,"./demos/advancedLayoutsDemo.js":z1,"./demos/advancedWidgetsDemo.js":B1,"./demos/allFeaturesDemo.js":V1,"./demos/cameraModesInfoDemo.js":$1,"./demos/edgeTypesDemo.js":Z1,"./demos/fractalZoomDemo.js":aA,"./demos/graphGeneratorsDemo.js":cA,"./demos/metaWidgetsDemo.js":vA,"./demos/newEdgeTypesDemo.js":xA,"./demos/newLayoutsDemo.js":SA,"./demos/newNodeTypesDemo.js":TA,"./demos/nodeTypesDemo.js":PA,"./demos/performanceDemo.js":HA}),du=[];for(const r in zp){const e=zp[r];e.demoMetadata&&e.createGraph?du.push({id:e.demoMetadata.id,title:e.demoMetadata.title,description:e.demoMetadata.description,createGraph:e.createGraph}):console.warn(`Demo module at ${r} is missing demoMetadata or createGraph export.`)}du.sort((r,e)=>r.id==="all-features"?-1:e.id==="all-features"?1:r.id.localeCompare(e.id));const Ll=du;let Hn;const Tr=ue("#page-selector"),La=ue("#hud");function GA(){Tr&&(Tr.innerHTML="",Ll.forEach(r=>{const e=document.createElement("button");e.textContent=r.title,e.dataset.pageId=r.id,e.addEventListener("click",()=>Wg(r.id)),Tr.appendChild(e)}))}function VA(r){if(!Tr)return;Tr.querySelectorAll("button").forEach(t=>{t.dataset.pageId===r?t.classList.add("active"):t.classList.remove("active")})}async function Wg(r){var n;if(!Hn){console.error("SpaceGraph not initialized yet.");return}const e=Ll.find(s=>s.id===r);if(!e){console.error(`Page with id "${r}" not found.`);return}await Hn.importGraphFromJSON({nodes:[],edges:[]}),La&&(La.innerHTML=e.description),typeof e.createGraph=="function"?e.createGraph(Hn):console.error(`createGraph function missing for page "${r}"`);const t=Hn.plugins.getPlugin("LayoutPlugin"),i=t==null?void 0:t.layoutManager;i?(n=i.kick)==null||n.call(i):console.warn("LayoutPlugin or LayoutManager not available for kicking layout."),Hn.centerView(null,.8),VA(r),console.log(`Loaded page: ${e.title}`)}async function Up(){const r=ue("#mindmap-container"),e=ue("#context-menu"),t=ue("#confirm-dialog");if(!r||!e||!t||!Tr||!La){console.error("Init Failed: Missing DOM elements for graph, page selector, or HUD."),r&&(r.innerHTML="<p style='color:red; padding: 20px;'>Error: Critical HTML elements are missing.</p>");return}try{Hn=new A1(r,{ui:{contextMenuElement:e,confirmDialogElement:t}}),await Hn.init(),GA(),Ll.length>0?await Wg(Ll[0].id):(console.warn("No pages defined in pages.js"),La&&(La.innerHTML="<p>No pages available to display.</p>")),Hn.animate(),window.space=Hn}catch(i){console.error("Init Failed:",i),r.innerHTML=`<div style="color: red; padding: 20px;">Error initializing: ${i.message}<br><pre>${i.stack}</pre></div>`}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",Up):Up();
