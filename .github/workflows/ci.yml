name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x] # Test on relevant Node.js versions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Cache npm dependencies

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Check formatting
      run: npm run format -- --check # Assuming Prettier, adjust if needed for check mode

    - name: Run tests
      run: npm test # Runs vitest run

    - name: Generate coverage report
      run: npm run coverage # Runs vitest run --coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Optional: for private repos or specific features
        # files: ./coverage/lcov.info # Explicitly specify if needed, often auto-detected
        slug: TTime/spacegraphjs # Explicitly set the slug

  build-library:
    runs-on: ubuntu-latest
    needs: test-and-lint # Ensure tests and linting pass before trying to build
    strategy:
      matrix:
        node-version: [20.x] # Build with a recent LTS version

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build the library
      run: npm run build # Runs tsc && vite build

    # Optional: Archive build artifacts
    # - name: Archive production artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: dist-build-${{ matrix.node-version }}
    #     path: dist/
